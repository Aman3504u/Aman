function _0x19af(_0x547587, _0x4d54cc) { const _0x4bbde6 = _0x4bbd(); return _0x19af = function (_0x19afaa, _0x371cda) { _0x19afaa = _0x19afaa - 0x106; let _0x50ed35 = _0x4bbde6[_0x19afaa]; return _0x50ed35; }, _0x19af(_0x547587, _0x4d54cc); } (function (_0x3f1732, _0x4ab173) { function _0x2f7882(_0x4e376f, _0x4852d9) { return _0x19af(_0x4852d9 - -0x116, _0x4e376f); } const _0x1b9f2b = _0x3f1732(); while (!![]) { try { const _0xe42c28 = parseInt(_0x2f7882(0xdb, 0x93)) / 0x1 * (parseInt(_0x2f7882(0x1f, 0x17)) / 0x2) + -parseInt(_0x2f7882(0x23, 0xd)) / 0x3 + parseInt(_0x2f7882(0x4, -0xc)) / 0x4 + -parseInt(_0x2f7882(-0x12, 0xc)) / 0x5 * (parseInt(_0x2f7882(0x6f, 0x55)) / 0x6) + parseInt(_0x2f7882(0x40, 0x29)) / 0x7 * (parseInt(_0x2f7882(0x15, -0x2)) / 0x8) + parseInt(_0x2f7882(0x7d, 0x47)) / 0x9 * (parseInt(_0x2f7882(0x48, 0x72)) / 0xa) + parseInt(_0x2f7882(0x6, -0xd)) / 0xb * (-parseInt(_0x2f7882(0x1, 0x11)) / 0xc); if (_0xe42c28 === _0x4ab173) break; else _0x1b9f2b['push'](_0x1b9f2b['shift']()); } catch (_0x2edbc9) { _0x1b9f2b['push'](_0x1b9f2b['shift']()); } } }(_0x4bbd, 0x37114)); const express = require(_0x59c5b0(-0x2bc, -0x2b8)), app = express(); app[_0x59c5b0(-0x2bc, -0x2c6)](express[_0x59c5b0(-0x25f, -0x283)]({ 'extended': !![] })); const port = process[_0x59c5b0(-0x267, -0x276)][_0x59c5b0(-0x249, -0x295)] || 0x1f40; app[_0x59c5b0(-0x2ad, -0x2c0)]('/', (_0x4af809, _0x3a1ed9) => { function _0x452a6e(_0x53eba2, _0x5ba695) { return _0x59c5b0(_0x53eba2, _0x5ba695 - 0x6ef); } _0x3a1ed9[_0x452a6e(0x47c, 0x464)]('Bot\x20is\x20running..\x20:)'); }), app[_0x59c5b0(-0x290, -0x270)](port, () => { function _0x1e5d77(_0x560e4c, _0x4272e5) { return _0x59c5b0(_0x560e4c, _0x4272e5 - 0x265); } console[_0x1e5d77(0x72, 0x3d)](_0x1e5d77(0x5, -0x41)); }); const { default: makeWASocket, delay, DisconnectReason, fetchLatestBaileysVersion, MessageRetryMap, useMultiFileAuthState, makeCacheableSignalKeyStore } = require(_0x59c5b0(-0x236, -0x277)), P = require(_0x59c5b0(-0x1dc, -0x22c)); let MAIN_LOGGER = P({ 'timestamp': () => _0x59c5b0(-0x231, -0x261) + new Date()[_0x59c5b0(-0x1f4, -0x23b)]() + '\x22' }); const logger = MAIN_LOGGER[_0x59c5b0(-0x2c3, -0x2b2)]({}); logger['level'] = _0x59c5b0(-0x252, -0x290), msgRetryCounterMap = MessageRetryMap; function _0x59c5b0(_0x1d64af, _0x1ee654) { return _0x19af(_0x1ee654 - -0x3ce, _0x1d64af); } const fs = require('fs'), util = require(_0x59c5b0(-0x24d, -0x278)), readdir = util[_0x59c5b0(-0x2d1, -0x285)](fs['readdir']); let commandsPublic = {}, commandsMembers = {}, commandsAdmins = {}, commandsOwners = {}; const addCommands = async () => { let _0x3a889d = './commands/public/', _0x1f0023 = await readdir(_0x3a889d); _0x1f0023[_0x5e9a6e(0x388, 0x3c1)](_0x132545 => { function _0x3626ad(_0x1361c7, _0x13e38e) { return _0x5e9a6e(_0x13e38e - -0xd5, _0x1361c7); } if (_0x132545['endsWith'](_0x3626ad(0x27e, 0x29d))) { let { command: _0x3406b9 } = require(_0x3a889d + _0x132545), _0x5b8f45 = _0x3406b9(); for (let _0x59f789 of _0x5b8f45[_0x3626ad(0x329, 0x313)]) { commandsPublic[_0x59f789] = _0x5b8f45[_0x3626ad(0x2c3, 0x306)]; } } }), _0x3a889d = _0x5e9a6e(0x3bb, 0x407), _0x1f0023 = await readdir(_0x3a889d), _0x1f0023[_0x5e9a6e(0x388, 0x383)](_0x168c91 => { function _0x49a7cd(_0x5c59d9, _0x2903e2) { return _0x5e9a6e(_0x2903e2 - -0x4d, _0x5c59d9); } if (_0x168c91[_0x49a7cd(0x364, 0x345)](_0x49a7cd(0x365, 0x325))) { let { command: _0x40cbd5 } = require(_0x3a889d + _0x168c91), _0x55aa6b = _0x40cbd5(); for (let _0x4cd024 of _0x55aa6b['cmd']) { commandsMembers[_0x4cd024] = _0x55aa6b[_0x49a7cd(0x358, 0x38e)]; } } }), _0x3a889d = _0x5e9a6e(0x36d, 0x3b1), _0x1f0023 = await readdir(_0x3a889d), _0x1f0023[_0x5e9a6e(0x388, 0x397)](_0x3487e2 => { function _0x3a68a7(_0x322d46, _0x8bdb8d) { return _0x5e9a6e(_0x322d46 - -0x120, _0x8bdb8d); } if (_0x3487e2[_0x3a68a7(0x272, 0x23a)](_0x3a68a7(0x252, 0x26c))) { let { command: _0x3ee52c } = require(_0x3a889d + _0x3487e2), _0x459019 = _0x3ee52c(); for (let _0x5c3219 of _0x459019['cmd']) { commandsAdmins[_0x5c3219] = _0x459019[_0x3a68a7(0x2bb, 0x2a0)]; } } }), _0x3a889d = _0x5e9a6e(0x3aa, 0x38a); function _0x5e9a6e(_0x323779, _0x43739c) { return _0x59c5b0(_0x43739c, _0x323779 - 0x612); } _0x1f0023 = await readdir(_0x3a889d), _0x1f0023[_0x5e9a6e(0x388, 0x33d)](_0x390c16 => { function _0x1528aa(_0x14448c, _0x51e6f5) { return _0x5e9a6e(_0x14448c - -0x623, _0x51e6f5); } if (_0x390c16[_0x1528aa(-0x291, -0x2a9)](_0x1528aa(-0x2b1, -0x264))) { let { command: _0x59b4e6 } = require(_0x3a889d + _0x390c16), _0x19791b = _0x59b4e6(); for (let _0x485a16 of _0x19791b['cmd']) { commandsOwners[_0x485a16] = _0x19791b['handler']; } } }), _0x3a889d = './', _0x1f0023 = await readdir(_0x3a889d), _0x1f0023['forEach'](_0x5008ac => { function _0x4b2e45(_0x5eace7, _0x933dac) { return _0x5e9a6e(_0x5eace7 - -0x2ab, _0x933dac); } (_0x5008ac[_0x4b2e45(0xe7, 0x10e)](_0x4b2e45(0xd3, 0x108)) || _0x5008ac[_0x4b2e45(0xe7, 0x10d)](_0x4b2e45(0xd9, 0xdc)) || _0x5008ac[_0x4b2e45(0xe7, 0xa4)]('.mp3') || _0x5008ac[_0x4b2e45(0xe7, 0xd4)](_0x4b2e45(0x123, 0x144)) || _0x5008ac[_0x4b2e45(0xe7, 0x116)](_0x4b2e45(0x10e, 0x12f)) || _0x5008ac[_0x4b2e45(0xe7, 0xc4)]('.png') || _0x5008ac['endsWith'](_0x4b2e45(0x10c, 0x110))) && fs['unlinkSync'](_0x3a889d + _0x5008ac); }); }, mdClient = require(_0x59c5b0(-0x233, -0x24c)); mdClient['connect'](); let sessionCount = 0x1; function _0x4bbd() { const _0x56d300 = ['77718gNEtCa', '\x20,\x20', 'composing', 'process', '347196UMKofr', '\x0aWeb-server\x20running!\x0a', './commands/group/admins/', 'fromMe', 'myNumber', 'readFileSync', '56368eouQWQ', '.js', '[COMMAND]', '@s.whatsapp.net', '```By\x20Default\x20Bot\x20is\x20Off\x20in\x20this\x20group.\x0aAsk\x20the\x20Owner\x20to\x20activate.\x0a\x0aUse\x20```', 'error', './baileys_auth_info', 'slice', 'videoMessage', ',\x20isLatest:\x20', 'existsSync', '\x20\x0a*Group:*\x20', 'PORT', '.webp', 'welcome', 'remove', 'connection.update', 'warn', '28dOxlYI', '.jpeg', 'action', 'subject', 'send', 'forEach', 'baileys_auth_info', 'user', 'mongodb', 'close', 'promisify', 'messages.upsert', 'urlencoded', 'findOne', 'isBlock', 'endsWith', 'keys', 'imageMessage', 'User\x20Blocked\x20:\x20', 'caption', 'message', '\x20[name]\x20', 'creds', 'util', '@adiwajshing/baileys', 'env', 'sendMessage', 'auth', '918318585418', 'INSTA_API_KEY', '2517489svOtVu', 'listen', 'parse', 'extendedTextMessage', 'startsWith', 'key', 'help\x20```', 'title', 'rmSync', './commands/owner/', 'join', 'Session\x20Auth\x20Empty', 'Command\x20blocked\x20for\x20this\x20group.', '\x20\x0a*Participants:*\x20', '36VQvotA', 'matchedCount', ',\x22time\x22:\x22', 'PREFIX', 'toString', 'trim', 'participants', 'find', '.gif', 'isBotOn', '.jpg', 'presenceSubscribe', './commands/group/members/', 'toLowerCase', '```🤭\x20kya\x20matlab\x20tum\x20mere\x20owner\x20nhi\x20ho.```', 'includes', '\x20[IN]\x20', 'conversation', 'Directs', 'shift', 'add', 'sessionAuth', 'insta-fetcher', './mongodb', './mongo-DB/groupDataDb', 'Welcome\x20@', 'groupMetadata', 'Db\x20updating\x20error\x20:\x20', 'selectedDisplayText', '10CQqfCS', 'text', '.mp4', 'creds.update', 'collection', 'dev', 'contextInfo', 'name', 'dotenv', '[IN]', 'split', 'toJSON', 'sendPresenceUpdate', 'pushName', '\x20!!Use\x20', 'handler', 'config', '\x20\x0a*Grp\x20Name:*\x20', 'sessionCount\x20logout\x20time', '[FROM]', 'MyBotDataDB', 'Local\x20file\x20written', 'using\x20WA\x20v', 'cmdBlocked', 'buttonsResponseMessage', 'admin', 'pino', 'mentionedJid', 'cmd', 'participant', 'log', 'Local\x20file\x20writing\x20errors\x20:', 'readMessages', '9eoqxeU', 'connect', 'baileys_auth_info/creds.json', 'use', '187WCxwdz', '800400LiztNW', '[cmd]\x20', '@g.us', 'group', 'get', 'stringify', 'group-participants.update', 'superadmin', 'updateOne', 'templateButtonReplyMessage', '581304Rjfxrc', 'botNumber', 'express', 'then', '*Action:*\x20', 'paused', 'AuthTable', 'remoteJid', 'child', 'Creds\x20Already\x20there.', '\x20[by]\x20', 'setCookie', 'eva', 'writeFileSync', '234005TkIJHg']; _0x4bbd = function () { return _0x56d300; }; return _0x4bbd(); } function fetchauth() { function _0x2718c4(_0x276fff, _0x3986f7) { return _0x59c5b0(_0x3986f7, _0x276fff - 0x551); } try { !fs[_0x2718c4(0x2ba, 0x2c1)](_0x2718c4(0x2b6, 0x2d7)) && fs['mkdirSync'](_0x2718c4(0x2b6, 0x2b8)), mdClient[_0x2718c4(0x289, 0x249)](async _0xd4820c => { if (_0xd4820c) throw _0xd4820c; let _0x2b693f = mdClient['db'](_0x5437c4(0x2f5, 0x2aa))[_0x5437c4(0x2ec, 0x29a)]('AuthTable'); function _0x5437c4(_0x5a1c15, _0x47130d) { return _0x2718c4(_0x47130d - -0x75, _0x5a1c15); } await _0x2b693f[_0x5437c4(0x276, 0x25a)]({ '_id': 'auth' })[_0x5437c4(0x250, 0x225)](_0x107dc2 => { _0x107dc2 == null && _0x2b693f['insertOne']({ '_id': 'auth', 'sessionAuth': '' }); }), _0x2b693f[_0x5437c4(0x25f, 0x280)]({ '_id': _0x5437c4(0x259, 0x268) })['toArray'](function (_0x4ad188, _0x3784eb) { function _0x37df9d(_0x12f6ed, _0x28b903) { return _0x5437c4(_0x28b903, _0x12f6ed - -0x46c); } if (_0x4ad188) throw _0x4ad188; let _0x27e46d = _0x3784eb[0x0][_0x37df9d(-0x1de, -0x1d0)]; if (_0x27e46d != '') { _0x27e46d = JSON['parse'](_0x27e46d), _0x27e46d = JSON[_0x37df9d(-0x24f, -0x252)](_0x27e46d); if (sessionCount == 0x1) fs[_0x37df9d(-0x23d, -0x280)](_0x37df9d(-0x257, -0x256), _0x27e46d); else sessionCount == 0x0 ? fs[_0x37df9d(-0x1f9, -0x1f3)](_0x37df9d(-0x257, -0x210), { 'recursive': !![], 'force': !![] }) : console[_0x37df9d(-0x1b8, -0x1ad)](_0x37df9d(-0x241, -0x27d)); } else console[_0x37df9d(-0x1b8, -0x1f4)](_0x37df9d(-0x1f6, -0x21c)); }); }), console[_0x2718c4(0x329, 0x2d7)](_0x2718c4(0x320, 0x309)); } catch (_0x5e1621) { console[_0x2718c4(0x2b5, 0x2fe)](_0x2718c4(0x32a, 0x2f4), _0x5e1621); } } async function updateLogin() { function _0x799b73(_0x106cc4, _0x53b9e6) { return _0x59c5b0(_0x53b9e6, _0x106cc4 - 0x676); } let _0x5ba54b = mdClient['db'](_0x799b73(0x444, 0x42d))['collection'](_0x799b73(0x3c2, 0x3e5)); try { let _0x3ccc3e = fs[_0x799b73(0x3d4, 0x406)]('baileys_auth_info/creds.json'); _0x3ccc3e = JSON[_0x799b73(0x407, 0x430)](_0x3ccc3e), _0x3ccc3e = JSON[_0x799b73(0x3b7, 0x372)](_0x3ccc3e), _0x5ba54b[_0x799b73(0x3ba, 0x3cd)]({ '_id': _0x799b73(0x402, 0x441) }, { '$set': { 'sessionAuth': _0x3ccc3e } }); } catch (_0x44f8e4) { console[_0x799b73(0x44e, 0x424)](_0x799b73(0x42e, 0x40e), _0x44f8e4); } } require(_0x59c5b0(-0x244, -0x23e))[_0x59c5b0(-0x275, -0x236)](); const { createMembersData, getMemberData, member } = require('./mongo-DB/membersDataDb'), { createGroupData, getGroupData, group } = require(_0x59c5b0(-0x28f, -0x24b)), myNumber = process[_0x59c5b0(-0x25a, -0x276)][_0x59c5b0(-0x2f3, -0x2a3)] + _0x59c5b0(-0x2b5, -0x29e), INSTA_API_KEY = process['env'][_0x59c5b0(-0x24d, -0x272)], { igApi, getSessionId } = require(_0x59c5b0(-0x224, -0x24d)), { Collection } = require(_0x59c5b0(-0x24c, -0x287)); let ig = new igApi(INSTA_API_KEY); ig[_0x59c5b0(-0x280, -0x2af)](INSTA_API_KEY); const prefix = '' + process['env'][_0x59c5b0(-0x28a, -0x260)] || '-', allowedNumbs = [_0x59c5b0(-0x2ac, -0x273), '' + process['env'][_0x59c5b0(-0x28d, -0x2a3)], '' + process[_0x59c5b0(-0x260, -0x276)][_0x59c5b0(-0x2e4, -0x2b9)]], getGroupAdmins = _0x5b847b => { admins = []; function _0x573b9d(_0x2a49af, _0x15cfd3) { return _0x59c5b0(_0x2a49af, _0x15cfd3 - 0x678); } for (let _0x48bc4d of _0x5b847b) { _0x48bc4d[_0x573b9d(0x489, 0x44b)] == _0x573b9d(0x454, 0x44b) || _0x48bc4d[_0x573b9d(0x45b, 0x44b)] == _0x573b9d(0x404, 0x3bb) ? admins['push'](_0x48bc4d['id']) : ''; } return admins; }, startSock = async () => { addCommands(), fetchauth(), await delay(0x2710); let _0x5af88f = setInterval(() => { updateLogin(); }, 0x7530); const { state: _0x23d25d, saveCreds: _0x19daff } = await useMultiFileAuthState(_0x1f2ddb(-0x107, -0x130)), { version: _0x5037f4, isLatest: _0x554c77 } = await fetchLatestBaileysVersion(); console[_0x1f2ddb(-0xa6, -0x7a)](_0x1f2ddb(-0xae, -0x85) + _0x5037f4[_0x1f2ddb(-0xe5, -0x11a)]('.') + _0x1f2ddb(-0x116, -0x126) + _0x554c77); const _0x242168 = makeWASocket({ 'version': _0x5037f4, 'logger': logger, 'printQRInTerminal': !![], 'auth': { 'creds': _0x23d25d[_0x1f2ddb(-0xf7, -0x12f)], 'keys': makeCacheableSignalKeyStore(_0x23d25d[_0x1f2ddb(-0xfd, -0xb2)], logger) }, 'msgRetryCounterMap': msgRetryCounterMap, 'generateHighQualityLinkPreview': !![], 'getMessage': async _0x6ef717 => { return {}; } }); sessionCount = 0x2; const _0x3c3e19 = async (_0x5a9857, _0x531ea6, _0x4b7596) => { await _0x242168[_0x5d2ba0(-0x84, -0xca)](_0x5a9857), await delay(0x64), await _0x242168['sendPresenceUpdate'](_0x5d2ba0(-0xd5, -0x84), _0x5a9857), await delay(0x1f4); function _0x5d2ba0(_0x3a9260, _0x3b615a) { return _0x1f2ddb(_0x3a9260 - 0x52, _0x3b615a); } await _0x242168[_0x5d2ba0(-0x66, -0x71)](_0x5d2ba0(-0xe1, -0x103), _0x5a9857), await _0x242168[_0x5d2ba0(-0xa1, -0x73)](_0x5a9857, _0x531ea6, _0x4b7596); }; _0x242168['ev'][_0x1f2ddb(-0x126, -0x119)](async _0x2378ca => { function _0x5e2f85(_0x46f81a, _0x1e767c) { return _0x1f2ddb(_0x46f81a - 0x5a0, _0x1e767c); } if (_0x2378ca[_0x5e2f85(0x491, 0x46d)]) { const _0x35e3b0 = _0x2378ca[_0x5e2f85(0x491, 0x48d)], { connection: _0x5e836c, lastDisconnect: _0x360d16 } = _0x35e3b0; if (_0x5e836c === _0x5e2f85(0x49c, 0x4d3)) { if (_0x360d16['error']['output']['statusCode'] == DisconnectReason['loggedOut']) { try { path = './baileys_auth_info/', filenames = await readdir(path), filenames[_0x5e2f85(0x498, 0x462)](_0x525cd9 => { fs['unlinkSync'](path + _0x525cd9); }); } catch { } sessionCount = 0x0, console[_0x5e2f85(0x4fa, 0x4c2)](_0x5e2f85(0x4ee, 0x4be), sessionCount), clearInterval(_0x5af88f), startSock(); } else console[_0x5e2f85(0x4fa, 0x4f2)]('Connection\x20closed.\x20You\x20are\x20logged\x20out.', sessionCount), startSock(); } console[_0x5e2f85(0x4fa, 0x54a)]('connection\x20update', _0x35e3b0); } _0x2378ca[_0x5e2f85(0x4df, 0x51c)] && await _0x19daff(); if (_0x2378ca[_0x5e2f85(0x49e, 0x4d1)]) { const _0x5a80f4 = _0x2378ca[_0x5e2f85(0x49e, 0x48c)]; try { const _0x453571 = _0x5a80f4['messages'][0x0]; if (!_0x453571[_0x5e2f85(0x4a7, 0x495)]) return; const _0x4caa1a = _0x138d82 => { function _0x536927(_0x3a326f, _0x2f18a1) { return _0x5e2f85(_0x2f18a1 - -0x5d, _0x3a326f); } try { _0x242168['sendMessage'](myNumber, { 'text': _0x138d82, 'mentions': _0x453571[_0x536927(0x466, 0x44a)][_0x536927(0x4a9, 0x457)] ? _0x453571[_0x536927(0x46c, 0x44a)][_0x536927(0x47c, 0x457)][_0x536927(0x472, 0x485)][_0x536927(0x4e1, 0x49a)] : '' }); } catch { } }, _0x400a70 = _0x453571[_0x5e2f85(0x4b6, 0x484)][_0x5e2f85(0x46f, 0x4bc)], _0x293a20 = JSON[_0x5e2f85(0x463, 0x41f)](_0x453571[_0x5e2f85(0x4a7, 0x4b5)]), _0x2a6339 = Object['keys'](_0x453571['message'])[0x0]; let _0xf56068 = _0x242168['user']['id']; _0xf56068 = _0xf56068[_0x5e2f85(0x4ce, 0x50a)](':') ? _0xf56068['split'](':')[0x0] + _0x5e2f85(0x484, 0x4a9) : _0xf56068; let _0xbd5242 = _0x2a6339 === _0x5e2f85(0x4d0, 0x4a0) ? _0x453571[_0x5e2f85(0x4a7, 0x4ca)][_0x5e2f85(0x4d0, 0x4eb)] : _0x2a6339 == _0x5e2f85(0x4a4, 0x4e1) && _0x453571[_0x5e2f85(0x4a7, 0x4ef)]['imageMessage'][_0x5e2f85(0x4a6, 0x48f)] ? _0x453571[_0x5e2f85(0x4a7, 0x4d1)][_0x5e2f85(0x4a4, 0x4c7)][_0x5e2f85(0x4a6, 0x466)] : _0x2a6339 == _0x5e2f85(0x489, 0x49c) && _0x453571[_0x5e2f85(0x4a7, 0x4a2)][_0x5e2f85(0x489, 0x461)]['caption'] ? _0x453571[_0x5e2f85(0x4a7, 0x458)][_0x5e2f85(0x489, 0x43b)][_0x5e2f85(0x4a6, 0x49f)] : _0x2a6339 == 'extendedTextMessage' && _0x453571[_0x5e2f85(0x4a7, 0x4db)][_0x5e2f85(0x4b4, 0x4e3)][_0x5e2f85(0x4dd, 0x4e3)] ? _0x453571['message'][_0x5e2f85(0x4b4, 0x4a6)][_0x5e2f85(0x4dd, 0x510)] : _0x2a6339 == _0x5e2f85(0x4f4, 0x523) ? _0x453571[_0x5e2f85(0x4a7, 0x4a6)][_0x5e2f85(0x4f4, 0x521)][_0x5e2f85(0x4db, 0x4b4)] : _0x2a6339 == _0x5e2f85(0x467, 0x49b) ? _0x453571['message']['templateButtonReplyMessage'][_0x5e2f85(0x4db, 0x4d0)] : _0x2a6339 == 'listResponseMessage' ? _0x453571[_0x5e2f85(0x4a7, 0x4ac)]['listResponseMessage'][_0x5e2f85(0x4b8, 0x4c2)] : ''; if (_0xbd5242[0x1] == '\x20') _0xbd5242 = _0xbd5242[0x0] + _0xbd5242[_0x5e2f85(0x488, 0x49e)](0x2); const _0x5dd4bb = _0xbd5242[_0x5e2f85(0x4c4, 0x4f8)]()['split'](/ +/)[_0x5e2f85(0x488, 0x451)](0x1)[_0x5e2f85(0x4bb, 0x470)]('\x20'), _0x4f72e4 = _0xbd5242[_0x5e2f85(0x488, 0x4b5)](0x1)[_0x5e2f85(0x4c4, 0x489)]()[_0x5e2f85(0x4e6, 0x530)](/ +/)[_0x5e2f85(0x4d2, 0x4e7)]()[_0x5e2f85(0x4cc, 0x48b)](), _0x399eb8 = _0xbd5242[_0x5e2f85(0x4c4, 0x47e)]()[_0x5e2f85(0x4e6, 0x4ba)](/ +/)['slice'](0x1); _0xbd5242['startsWith'](_0x5e2f85(0x474, 0x45a)) && commandsPublic[_0x5e2f85(0x474, 0x424)](_0x242168, _0x453571, _0x400a70, _0x399eb8, { 'evv': _0x5dd4bb, 'sendMessageWTyping': _0x3c3e19 }); const _0x193bfb = _0xbd5242[_0x5e2f85(0x4b5, 0x4d1)](prefix), _0x32fb30 = _0x400a70[_0x5e2f85(0x4a2, 0x478)](_0x5e2f85(0x460, 0x45e)), _0x5a6ab8 = _0x32fb30 ? _0x453571[_0x5e2f85(0x4b6, 0x4bf)][_0x5e2f85(0x4f9, 0x4f4)] : _0x453571[_0x5e2f85(0x4b6, 0x504)]['remoteJid'], _0x470c01 = _0x453571[_0x5e2f85(0x4b6, 0x4bd)]['fromMe'] ? _0xf56068 : _0x5a6ab8, _0x69e901 = _0x453571['key'][_0x5e2f85(0x47e, 0x44d)] ? _0x242168[_0x5e2f85(0x49a, 0x45a)][_0x5e2f85(0x4e3, 0x52e)] : _0x453571[_0x5e2f85(0x4e9, 0x533)]; member[_0x5e2f85(0x466, 0x477)]({ '_id': _0x470c01 }, { '$inc': { 'totalmsg': 0x1 } }, { '$set': { 'username': _0x69e901 } }), createMembersData(_0x470c01, _0x69e901); _0x32fb30 && (group[_0x5e2f85(0x466, 0x429)]({ '_id': _0x400a70, 'members.id': _0x470c01 }, { '$inc': { 'members.$.count': 0x1 } }, { '$set': { 'members.$.name': _0x69e901 } })['then'](_0x3f61c8 => { function _0xadfabe(_0x536e83, _0xb8ef50) { return _0x5e2f85(_0x536e83 - -0x332, _0xb8ef50); } _0x3f61c8[_0xadfabe(0x18e, 0x1ce)] == 0x0 && group[_0xadfabe(0x134, 0x10c)]({ '_id': _0x400a70 }, { '$push': { 'members': { 'id': _0x470c01, 'name': _0x69e901, 'count': 0x1 } } }); }), group[_0x5e2f85(0x466, 0x485)]({ '_id': _0x400a70 }, { '$inc': { 'totalMsgCount': 0x1 } })); const _0x412ede = _0x5a6ab8[_0x5e2f85(0x4ce, 0x482)](':') ? _0x5a6ab8['split'](':')[0x0] : _0x5a6ab8[_0x5e2f85(0x4e6, 0x4bf)]('@')[0x0], _0x3476f8 = await getMemberData(_0x5a6ab8); if (!_0x193bfb) return; if (_0x3476f8[_0x5e2f85(0x4a1, 0x4ae)]) return _0x4caa1a(_0x5e2f85(0x4a5, 0x4b3) + _0x5a6ab8); await _0x242168[_0x5e2f85(0x4fc, 0x524)]([{ 'remoteJid': _0x453571['key'][_0x5e2f85(0x46f, 0x428)], 'id': _0x453571[_0x5e2f85(0x4b6, 0x4ca)]['id'], 'participant': _0x453571['key'][_0x5e2f85(0x4f9, 0x506)] || undefined }]); const _0x2e6b74 = _0x32fb30 ? await _0x242168[_0x5e2f85(0x4d9, 0x497)](_0x400a70) : ''; if (_0x32fb30) createGroupData(_0x400a70, _0x2e6b74); const _0x3f639d = _0x32fb30 ? getGroupAdmins(_0x2e6b74[_0x5e2f85(0x4c5, 0x49c)]) : '', _0x173f37 = _0x3f639d[_0x5e2f85(0x4ce, 0x4d7)](_0x5a6ab8) || ![], _0xa73ef1 = _0x32fb30 ? await getGroupData(_0x400a70) : '', _0x14116e = { 'prefix': prefix, 'type': _0x2a6339, 'content': _0x293a20, 'evv': _0x5dd4bb, 'command': _0x4f72e4, 'isGroup': _0x32fb30, 'senderJid': _0x5a6ab8, 'groupMetadata': _0x2e6b74, 'groupAdmins': _0x3f639d, 'botNumberJid': _0xf56068, 'sendMessageWTyping': _0x3c3e19, 'OwnerSend': _0x4caa1a, 'ig': ig }; console[_0x5e2f85(0x4fa, 0x510)](_0x5e2f85(0x483, 0x4c3), _0x4f72e4, _0x5e2f85(0x4ef, 0x4bc), _0x412ede, '[name]', _0x453571[_0x5e2f85(0x4e9, 0x4ef)], _0x5e2f85(0x4e5, 0x499), _0x32fb30 ? _0x2e6b74[_0x5e2f85(0x496, 0x45e)] : _0x5e2f85(0x4d1, 0x4f1)), _0x4caa1a(_0x5e2f85(0x45f, 0x49e) + _0xbd5242 + _0x5e2f85(0x472, 0x4aa) + _0x412ede + _0x5e2f85(0x4a8, 0x4be) + _0x453571[_0x5e2f85(0x4e9, 0x4b1)] + _0x5e2f85(0x4cf, 0x4df) + (_0x32fb30 ? _0x2e6b74[_0x5e2f85(0x496, 0x49d)] : 'Dm')); if (_0x32fb30) { let _0xbaa2d7 = await _0xa73ef1[_0x5e2f85(0x4c8, 0x477)]; if (_0xbaa2d7 == ![] && !(_0x4f72e4[_0x5e2f85(0x4b5, 0x4ed)](_0x5e2f85(0x461, 0x418)) || _0x4f72e4[_0x5e2f85(0x4b5, 0x474)](_0x5e2f85(0x4e1, 0x4dc)))) return _0x3c3e19(_0x400a70, { 'text': _0x5e2f85(0x485, 0x4d3) + prefix + 'dev' }); let _0x5172bc = [], _0x4afbcc = await _0xa73ef1[_0x5e2f85(0x4f3, 0x4b8)]; _0x5172bc = _0x4afbcc[_0x5e2f85(0x4c3, 0x4c6)]()[_0x5e2f85(0x4e6, 0x4f8)](','); if (_0x4f72e4 != '') { if (_0x5172bc[_0x5e2f85(0x4ce, 0x494)](_0x4f72e4)) return _0x3c3e19(_0x400a70, { 'text': _0x5e2f85(0x4bd, 0x4c6) }, { 'quoted': _0x453571 }); } } if (commandsPublic[_0x4f72e4]) { commandsPublic[_0x4f72e4](_0x242168, _0x453571, _0x400a70, _0x399eb8, _0x14116e); return; } if (commandsMembers[_0x4f72e4]) { if (_0x32fb30 || _0x453571['key'][_0x5e2f85(0x47e, 0x450)]) { commandsMembers[_0x4f72e4](_0x242168, _0x453571, _0x400a70, _0x399eb8, _0x14116e); return; } _0x3c3e19(_0x400a70, { 'text': '```❌\x20Group\x20command\x20only!```' }, { 'quoted': _0x453571 }); return; } if (commandsAdmins[_0x4f72e4]) { if (!_0x32fb30) { _0x3c3e19(_0x400a70, { 'text': '```❌\x20Group\x20command\x20only!```' }, { 'quoted': _0x453571 }); return; } if (_0x173f37 || allowedNumbs[_0x5e2f85(0x4ce, 0x513)](_0x412ede)) { commandsAdmins[_0x4f72e4](_0x242168, _0x453571, _0x400a70, _0x399eb8, _0x14116e); return; } _0x3c3e19(_0x400a70, { 'text': '```🤭\x20kya\x20matlab\x20tum\x20admin\x20nhi\x20ho.```' }, { 'quoted': _0x453571 }); return; } if (commandsOwners[_0x4f72e4]) { if (allowedNumbs[_0x5e2f85(0x4ce, 0x488)](_0x412ede) || myNumber == _0x5a6ab8) { commandsOwners[_0x4f72e4](_0x242168, _0x453571, _0x400a70, _0x399eb8, _0x14116e); return; } _0x3c3e19(_0x400a70, { 'text': _0x5e2f85(0x4cd, 0x483) }, { 'quoted': _0x453571 }); return; } _0x3c3e19(_0x400a70, { 'text': '```' + _0x453571[_0x5e2f85(0x4e9, 0x4fd)] + _0x5e2f85(0x4ea, 0x4fd) + prefix + _0x5e2f85(0x4b7, 0x4b2) }, { 'quoted': _0x453571 }); } catch (_0x40e8b9) { console[_0x5e2f85(0x4fa, 0x537)](_0x40e8b9); } } if (_0x2378ca[_0x5e2f85(0x464, 0x47f)]) { const _0x259d2e = _0x2378ca[_0x5e2f85(0x464, 0x435)]; try { let _0x3aa2d0 = await getGroupData(_0x259d2e['id']); _0x259d2e[_0x5e2f85(0x495, 0x4b0)] == _0x5e2f85(0x4d3, 0x4d8) && (_0x3aa2d0[_0x5e2f85(0x48f, 0x4a5)] != '' && _0x3c3e19(_0x259d2e['id'], { 'text': _0x5e2f85(0x4d8, 0x49a) + _0x259d2e[_0x5e2f85(0x4c5, 0x4e7)][0x0][_0x5e2f85(0x4e6, 0x51c)]('@')[0x0] + _0x5e2f85(0x478, 0x4b8) + _0x3aa2d0[_0x5e2f85(0x48f, 0x43e)], 'mentions': _0x259d2e['participants'] }), _0x3aa2d0['is91Only'] == !![] && !_0x259d2e[_0x5e2f85(0x4c5, 0x4eb)][0x0][_0x5e2f85(0x4b5, 0x47c)]('91') && _0x242168['groupParticipantsUpdate'](_0x259d2e['id'], [_0x259d2e['participants'][0x0]], _0x5e2f85(0x490, 0x4d5))), _0x242168[_0x5e2f85(0x4d9, 0x4db)](_0x259d2e['id'])[_0x5e2f85(0x46b, 0x44c)](_0xfc8f5e => { function _0x23eed4(_0x30e61d, _0x11a82c) { return _0x5e2f85(_0x11a82c - -0x502, _0x30e61d); } _0x242168[_0x23eed4(-0x6d, -0x55)](myNumber, { 'text': _0x23eed4(-0xa3, -0x96) + _0x259d2e['action'] + _0x23eed4(-0x6b, -0x76) + _0x259d2e['id'] + _0x23eed4(-0x38, -0x15) + _0xfc8f5e[_0x23eed4(-0x39, -0x6c)] + _0x23eed4(-0x95, -0x44) + _0x259d2e[_0x23eed4(0x5, -0x3d)][0x0] }); }), console[_0x5e2f85(0x4fa, 0x520)](_0x259d2e); } catch (_0x1743f2) { console[_0x5e2f85(0x4fa, 0x4e3)](_0x1743f2); } } }); function _0x1f2ddb(_0xa09525, _0x53c2da) { return _0x59c5b0(_0x53c2da, _0xa09525 - 0x182); } return _0x242168; }; startSock();