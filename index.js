(function (_0x53cb86, _0x733be1) { const _0x3142e5 = _0x53cb86(); function _0xe959d5(_0x30ee2e, _0x118b4b) { return _0x4df3(_0x118b4b - -0x319, _0x30ee2e); } while (!![]) { try { const _0x2cbc26 = -parseInt(_0xe959d5(-0x13e, -0x13e)) / 0x1 + -parseInt(_0xe959d5(-0x114, -0x114)) / 0x2 * (-parseInt(_0xe959d5(-0x1b3, -0x1a6)) / 0x3) + parseInt(_0xe959d5(-0x13c, -0x11c)) / 0x4 + -parseInt(_0xe959d5(-0x1a4, -0x180)) / 0x5 * (parseInt(_0xe959d5(-0x153, -0x197)) / 0x6) + -parseInt(_0xe959d5(-0x136, -0x157)) / 0x7 * (parseInt(_0xe959d5(-0x176, -0x14a)) / 0x8) + parseInt(_0xe959d5(-0x1a8, -0x191)) / 0x9 * (-parseInt(_0xe959d5(-0x13a, -0x184)) / 0xa) + parseInt(_0xe959d5(-0x17e, -0x199)) / 0xb; if (_0x2cbc26 === _0x733be1) break; else _0x3142e5['push'](_0x3142e5['shift']()); } catch (_0x31b608) { _0x3142e5['push'](_0x3142e5['shift']()); } } }(_0x1d90, 0x70f04)); const express = require('express'), app = express(); app[_0x4acdf0(-0xf1, -0xf8)](express['urlencoded']({ 'extended': !![] })); const port = process['env'][_0x4acdf0(-0xde, -0xfe)] || 0x1f40; function _0x1d90() { const _0x38a525 = ['templateButtonReplyMessage', '498sdCZZd', '@s.whatsapp.net', 'fromMe', 'Local\x20file\x20written', 'mentionedJid', '6795krtBAc', 'readFileSync', 'toString', 'buttonsResponseMessage', 'contextInfo', 'findOne', '919565303474', '```🤭\x20kya\x20matlab\x20tum\x20admin\x20nhi\x20ho.```', 'Creds\x20Already\x20there.', 'sendMessage', 'insta-fetcher', 'pushName', 'error', '13002132wcuxKb', '.gif', '2174010IWYcQf', '*Action:*\x20', 'caption', '.js', 'startsWith', 'connect', '18MqnfTm', 'baileys_auth_info', '.webp', 'myNumber', '```❌\x20Group\x20command\x20only!```', 'group-participants.update', './commands/group/members/', 'toLowerCase', 'mkdirSync', 'user', 'toJSON', 'connection\x20update', 'using\x20WA\x20v', '1952150ceKNkO', 'then', 'close', 'Connection\x20closed.\x20You\x20are\x20logged\x20out.', '10hdaePW', 'insertOne', 'Bot\x20is\x20running..\x20:)', 'split', 'paused', 'User\x20Blocked\x20:\x20', 'config', '\x20\x0a*Participants:*\x20', 'child', 'level', 'includes', 'get', 'rmSync', '```🤭\x20kya\x20matlab\x20tum\x20mere\x20owner\x20nhi\x20ho.```', 'AuthTable', 'messages', 'sessionCount\x20logout\x20time', 'unlinkSync', '\x20[name]\x20', 'forEach', 'cmdBlocked', '[COMMAND]', 'isBlock', 'subject', 'auth', 'Session\x20Auth\x20Empty', 'sessionAuth', 'statusCode', '[cmd]\x20', 'endsWith', 'log', 'cmd', 'participant', '\x20[IN]\x20', '918318585418', 'shift', 'sendPresenceUpdate', '```Bot\x20is\x20Not\x20active\x20in\x20this\x20group.\x0aAsk\x20the\x20Owner\x20to\x20activate.```😍👌', 'handler', 'conversation', 'groupMetadata', '7XABaia', 'action', 'baileys_auth_info/creds.json', 'stringify', 'updateOne', 'videoMessage', 'imageMessage', 'messages.upsert', 'setCookie', 'use', 'MyBotDataDB', '[FROM]', '!!Use\x20', '916352GbVpxO', './mongodb', 'slice', 'warn', 'message', 'connection.update', 'extendedTextMessage', 'presenceSubscribe', '.png', 'Command\x20Blocked\x20For\x20this\x20group.', 'parse', 'PREFIX', '370264wNppFk', '[name]', 'keys', 'PORT', 'env', 'existsSync', ',\x22time\x22:\x22', 'toArray', 'selectedDisplayText', 'Directs', '\x20\x0a*Grp\x20Name:*\x20', 'creds.update', 'text', '.mp4', 'push', '.jpeg', './mongo-DB/groupDataDb', 'bot', 'output', './commands/owner/', 'composing', 'key', 'participants', './mongo-DB/membersDataDb', 'INSTA_API_KEY', 'readMessages', 'writeFileSync', 'admin', 'remoteJid', './baileys_auth_info', 'join', 'trim', 'listResponseMessage', '\x0aWeb-server\x20running!\x0a', '1266028TEBfQZ', '.jpg', './commands/group/admins/', 'promisify', 'process', 'listen', 'collection']; _0x1d90 = function () { return _0x38a525; }; return _0x1d90(); } app[_0x4acdf0(-0x118, -0xce)]('/', (_0x4e1960, _0xb8ac93) => { function _0x41e999(_0x4bff84, _0x5a7ee5) { return _0x4acdf0(_0x5a7ee5 - 0x686, _0x4bff84); } _0xb8ac93['send'](_0x41e999(0x554, 0x565)); }), app[_0x4acdf0(-0xba, -0xfe)](port, () => { function _0x37a70c(_0x16f49d, _0x5dba0b) { return _0x4acdf0(_0x16f49d - 0x140, _0x5dba0b); } console['log'](_0x37a70c(0x80, 0x59)); }); const { default: makeWASocket, delay, DisconnectReason, fetchLatestBaileysVersion, MessageRetryMap, useMultiFileAuthState } = require('@adiwajshing/baileys'), P = require('pino'); let MAIN_LOGGER = P({ 'timestamp': () => _0x4acdf0(-0xdb, -0xc9) + new Date()[_0x4acdf0(-0x12a, -0x109)]() + '\x22' }); const logger = MAIN_LOGGER[_0x4acdf0(-0x11b, -0xdc)]({}); logger[_0x4acdf0(-0x11a, -0x153)] = _0x4acdf0(-0xea, -0xc6), msgRetryCounterMap = MessageRetryMap; const fs = require('fs'), util = require('util'), readdir = util[_0x4acdf0(-0xbc, -0x86)](fs['readdir']); let commandsPublic = {}, commandsMembers = {}, commandsAdmins = {}, commandsOwners = {}; function _0x4df3(_0x23957d, _0x5a54ed) { const _0x1d90cf = _0x1d90(); return _0x4df3 = function (_0x4df385, _0x544d25) { _0x4df385 = _0x4df385 - 0x170; let _0x1c34f3 = _0x1d90cf[_0x4df385]; return _0x1c34f3; }, _0x4df3(_0x23957d, _0x5a54ed); } const addCommands = async () => { let _0x4b53f6 = './commands/public/', _0x16becd = await readdir(_0x4b53f6); _0x16becd[_0x1da933(0x507, 0x4d3)](_0x36e432 => { function _0x1d3487(_0x47964f, _0x5e9524) { return _0x1da933(_0x47964f, _0x5e9524 - -0x125); } if (_0x36e432['endsWith']('.js')) { let { command: _0x3987e3 } = require(_0x4b53f6 + _0x36e432), _0x3f0fda = _0x3987e3(); for (let _0x4ab634 of _0x3f0fda[_0x1d3487(0x3a9, 0x3ba)]) { commandsPublic[_0x4ab634] = _0x3f0fda['handler']; } } }), _0x4b53f6 = _0x1da933(0x4e1, 0x4b5), _0x16becd = await readdir(_0x4b53f6), _0x16becd[_0x1da933(0x4fa, 0x4d3)](_0x5e1044 => { function _0x85280f(_0x2826b0, _0x53fe1b) { return _0x1da933(_0x53fe1b, _0x2826b0 - -0x4c); } if (_0x5e1044[_0x85280f(0x491, 0x4d3)](_0x85280f(0x460, 0x44c))) { let { command: _0x34700a } = require(_0x4b53f6 + _0x5e1044), _0x2fc6df = _0x34700a(); for (let _0x3ad92d of _0x2fc6df['cmd']) { commandsMembers[_0x3ad92d] = _0x2fc6df[_0x85280f(0x49a, 0x459)]; } } }), _0x4b53f6 = _0x1da933(0x558, 0x526), _0x16becd = await readdir(_0x4b53f6), _0x16becd[_0x1da933(0x48d, 0x4d3)](_0x5400a4 => { function _0x41481a(_0x549390, _0x55da20) { return _0x1da933(_0x55da20, _0x549390 - -0x351); } if (_0x5400a4['endsWith'](_0x41481a(0x15b, 0x131))) { let { command: _0x56226d } = require(_0x4b53f6 + _0x5400a4), _0x503d34 = _0x56226d(); for (let _0x254427 of _0x503d34[_0x41481a(0x18e, 0x150)]) { commandsAdmins[_0x254427] = _0x503d34[_0x41481a(0x195, 0x1ac)]; } } }); function _0x1da933(_0x10c732, _0x339591) { return _0x4acdf0(_0x339591 - 0x5e3, _0x10c732); } _0x4b53f6 = _0x1da933(0x53c, 0x515), _0x16becd = await readdir(_0x4b53f6), _0x16becd[_0x1da933(0x4a1, 0x4d3)](_0x26f093 => { function _0x91f19b(_0x356b38, _0x5beea7) { return _0x1da933(_0x5beea7, _0x356b38 - 0x19); } if (_0x26f093[_0x91f19b(0x4f6, 0x4dd)]('.js')) { let { command: _0x58eb77 } = require(_0x4b53f6 + _0x26f093), _0x188073 = _0x58eb77(); for (let _0x2ad653 of _0x188073[_0x91f19b(0x4f8, 0x514)]) { commandsOwners[_0x2ad653] = _0x188073[_0x91f19b(0x4ff, 0x4fb)]; } } }), _0x4b53f6 = './', _0x16becd = await readdir(_0x4b53f6), _0x16becd['forEach'](_0x301f95 => { function _0x45bb(_0x5f29a8, _0x4e9b91) { return _0x1da933(_0x5f29a8, _0x4e9b91 - -0x571); } (_0x301f95[_0x45bb(-0x74, -0x94)](_0x45bb(-0xe4, -0xc0)) || _0x301f95[_0x45bb(-0xce, -0x94)](_0x45bb(-0x8b, -0x60)) || _0x301f95[_0x45bb(-0x83, -0x94)]('.mp3') || _0x301f95[_0x45bb(-0x6e, -0x94)](_0x45bb(-0x53, -0x62)) || _0x301f95['endsWith'](_0x45bb(-0x1c, -0x4c)) || _0x301f95[_0x45bb(-0x79, -0x94)](_0x45bb(-0xa7, -0x73)) || _0x301f95[_0x45bb(-0xab, -0x94)](_0x45bb(-0x106, -0xc9))) && fs[_0x45bb(-0x90, -0xa0)](_0x4b53f6 + _0x301f95); }); }, mdClient = require(_0x4acdf0(-0xec, -0x12d)); mdClient[_0x4acdf0(-0x135, -0x11e)](); let sessionCount = 0x1; function _0x4acdf0(_0x44a5be, _0x4e3006) { return _0x4df3(_0x44a5be - -0x2bc, _0x4e3006); } function fetchauth() { function _0x7e671d(_0x42fa37, _0x49f3d6) { return _0x4acdf0(_0x49f3d6 - 0x21e, _0x42fa37); } try { !fs[_0x7e671d(0x138, 0x142)](_0x7e671d(0x142, 0x15a)) && fs[_0x7e671d(0xf0, 0xf2)](_0x7e671d(0x152, 0x15a)), mdClient[_0x7e671d(0xb2, 0xe9)](async _0x104b3b => { function _0x2b67c0(_0x32a576, _0x111126) { return _0x7e671d(_0x111126, _0x32a576 - 0x460); } if (_0x104b3b) throw _0x104b3b; let _0xcb5c88 = mdClient['db'](_0x2b67c0(0x58e, 0x543))[_0x2b67c0(0x5c5, 0x5c1)](_0x2b67c0(0x569, 0x584)); await _0xcb5c88[_0x2b67c0(0x53a, 0x4fc)]({ '_id': _0x2b67c0(0x573, 0x5b5) })[_0x2b67c0(0x558, 0x531)](_0x2e1dc2 => { function _0x456668(_0x2deaa6, _0x51b912) { return _0x2b67c0(_0x51b912 - -0x537, _0x2deaa6); } _0x2e1dc2 == null && _0xcb5c88[_0x456668(0x0, 0x25)]({ '_id': _0x456668(0x6a, 0x3c), 'sessionAuth': '' }); }), _0xcb5c88['find']({ '_id': 'auth' })[_0x2b67c0(0x5a4, 0x566)](function (_0x2aad89, _0x2cfbc7) { if (_0x2aad89) throw _0x2aad89; let _0x22b528 = _0x2cfbc7[0x0][_0x3d2a48(0x44c, 0x40f)]; function _0x3d2a48(_0x582af5, _0x59957f) { return _0x2b67c0(_0x59957f - -0x166, _0x582af5); } if (_0x22b528 != '') { _0x22b528 = JSON[_0x3d2a48(0x410, 0x435)](_0x22b528), _0x22b528 = JSON[_0x3d2a48(0x409, 0x421)](_0x22b528); if (sessionCount == 0x1) fs[_0x3d2a48(0x413, 0x451)](_0x3d2a48(0x459, 0x420), _0x22b528); else sessionCount == 0x0 ? fs[_0x3d2a48(0x44c, 0x401)](_0x3d2a48(0x410, 0x420), { 'recursive': !![], 'force': !![] }) : console['log'](_0x3d2a48(0x3c5, 0x3d7)); } else console['log'](_0x3d2a48(0x3d6, 0x40e)); }); }), console['log'](_0x7e671d(0x11a, 0xd3)); } catch (_0x2e54ba) { console[_0x7e671d(0xd1, 0xe1)]('Local\x20file\x20writing\x20errors\x20:', _0x2e54ba); } } function updateLogin() { function _0x2d960f(_0x4b8fd4, _0x5ac166) { return _0x4acdf0(_0x4b8fd4 - 0x536, _0x5ac166); } try { let _0x4aaad6 = fs[_0x2d960f(0x3ee, 0x3b9)](_0x2d960f(0x43e, 0x483)); _0x4aaad6 = JSON['parse'](_0x4aaad6), _0x4aaad6 = JSON['stringify'](_0x4aaad6); let _0x3aadf3 = mdClient['db'](_0x2d960f(0x446, 0x418))['collection'](_0x2d960f(0x421, 0x434)); _0x3aadf3[_0x2d960f(0x440, 0x46b)]({ '_id': _0x2d960f(0x42b, 0x416) }, { '$set': { 'sessionAuth': _0x4aaad6 } }); } catch (_0x59fe3e) { console['log']('Db\x20updating\x20error\x20:\x20', _0x59fe3e); } } require('dotenv')[_0x4acdf0(-0x11d, -0xd4)](); const { createMembersData, getMemberData, member } = require(_0x4acdf0(-0xca, -0xd3)), { createGroupData, getGroupData, group } = require(_0x4acdf0(-0xd1, -0xd6)), myNumber = process['env'][_0x4acdf0(-0x131, -0xe8)] + '@s.whatsapp.net', INSTA_API_KEY = process[_0x4acdf0(-0xdd, -0xba)][_0x4acdf0(-0xc9, -0xd7)], { igApi, getSessionId } = require(_0x4acdf0(-0x13f, -0x126)); let ig = new igApi(INSTA_API_KEY); ig[_0x4acdf0(-0xf2, -0xa9)](INSTA_API_KEY); const prefix = '' + process['env'][_0x4acdf0(-0xe2, -0x108)] || '-', allowedNumbs = [_0x4acdf0(-0x101, -0x134), _0x4acdf0(-0x143, -0x14a), '' + process[_0x4acdf0(-0xdd, -0x102)][_0x4acdf0(-0x131, -0x160)]], getGroupAdmins = _0x2adf7c => { function _0x5a7b4(_0x52e327, _0x753357) { return _0x4acdf0(_0x753357 - 0x44d, _0x52e327); } admins = []; for (let _0x485d77 of _0x2adf7c) { _0x485d77['admin'] == _0x5a7b4(0x341, 0x387) || _0x485d77[_0x5a7b4(0x3b6, 0x387)] == 'superadmin' ? admins[_0x5a7b4(0x3a7, 0x37a)](_0x485d77['id']) : ''; } return admins; }, startSock = async () => { addCommands(), fetchauth(), await delay(0x2710); let _0x56079c = setInterval(() => { updateLogin(); }, 0x7530); const { state: _0x56ffd0, saveCreds: _0x5cf892 } = await useMultiFileAuthState(_0x253c28(0x78, 0x6d)), { version: _0x1e67ef, isLatest: _0x491d20 } = await fetchLatestBaileysVersion(); console[_0x253c28(0xa6, 0xc0)](_0x253c28(0x83, 0x48) + _0x1e67ef[_0x253c28(0xe8, 0xdd)]('.') + ',\x20isLatest:\x20' + _0x491d20); function _0x253c28(_0x3ee8e6, _0x31ecdf) { return _0x4acdf0(_0x3ee8e6 - 0x1ab, _0x31ecdf); } const _0x2f688 = makeWASocket({ 'version': _0x1e67ef, 'logger': logger, 'printQRInTerminal': !![], 'auth': _0x56ffd0, 'msgRetryCounterMap': msgRetryCounterMap, 'getMessage': async _0x5a975b => { return {}; } }); sessionCount = 0x2; const _0x360854 = async (_0x34fa4f, _0x41dcbf, _0xebde15) => { await _0x2f688[_0x3e9bef(0x187, 0x13d)](_0x34fa4f); function _0x3e9bef(_0x28f8df, _0x33fffb) { return _0x253c28(_0x33fffb - 0x78, _0x28f8df); } await delay(0x64), await _0x2f688['sendPresenceUpdate'](_0x3e9bef(0x175, 0x156), _0x34fa4f), await delay(0x1f4), await _0x2f688[_0x3e9bef(0xe1, 0x124)](_0x3e9bef(0x10a, 0x104), _0x34fa4f), await _0x2f688['sendMessage'](_0x34fa4f, _0x41dcbf, _0xebde15); }; return _0x2f688['ev'][_0x253c28(0xf0, 0xfe)](async _0x299e78 => { function _0x2e4027(_0x299849, _0x34db1a) { return _0x253c28(_0x34db1a - 0x37f, _0x299849); } if (_0x299e78[_0x2e4027(0x486, 0x442)]) { const _0x4a42d2 = _0x299e78[_0x2e4027(0x422, 0x442)], { connection: _0x4be9f4, lastDisconnect: _0x334336 } = _0x4a42d2; _0x4be9f4 === _0x2e4027(0x3f6, 0x405) && (_0x334336[_0x2e4027(0x40d, 0x3ed)][_0x2e4027(0x43a, 0x45b)][_0x2e4027(0x3f2, 0x422)] == DisconnectReason['loggedOut'] ? (sessionCount = 0x0, console[_0x2e4027(0x3f6, 0x425)](_0x2e4027(0x3fb, 0x417), sessionCount), clearInterval(_0x56079c), startSock()) : (console['log'](_0x2e4027(0x410, 0x406), sessionCount), startSock())), console['log'](_0x2e4027(0x403, 0x401), _0x4a42d2); } _0x299e78[_0x2e4027(0x45f, 0x454)] && await _0x5cf892(); if (_0x299e78[_0x2e4027(0x467, 0x437)]) { const _0x44a5eb = _0x299e78[_0x2e4027(0x458, 0x437)]; try { const _0x2c8dba = _0x44a5eb[_0x2e4027(0x459, 0x416)][0x0]; if (!_0x2c8dba[_0x2e4027(0x3fe, 0x441)]) return; const _0x50f222 = _0x1774ff => { function _0x58623d(_0x27487c, _0x4c7541) { return _0x2e4027(_0x27487c, _0x4c7541 - -0x40); } try { _0x2f688[_0x58623d(0x3d8, 0x3aa)](myNumber, { 'text': _0x1774ff, 'mentions': _0x2c8dba[_0x58623d(0x445, 0x401)]['extendedTextMessage'] ? _0x2c8dba[_0x58623d(0x3ba, 0x401)][_0x58623d(0x3dc, 0x403)][_0x58623d(0x36c, 0x3a5)][_0x58623d(0x3bf, 0x3a0)] : '' }); } catch { } }, _0x14ac8d = _0x2c8dba[_0x2e4027(0x414, 0x45e)][_0x2e4027(0x456, 0x465)], _0x30b0fb = JSON['stringify'](_0x2c8dba['message']), _0x3122d3 = Object[_0x2e4027(0x488, 0x44b)](_0x2c8dba['message'])[0x0]; let _0x528641 = _0x2f688[_0x2e4027(0x3ea, 0x3ff)]['id']; _0x528641 = _0x528641[_0x2e4027(0x3d8, 0x411)](':') ? _0x528641['split'](':')[0x0] + _0x2e4027(0x467, 0x474) : _0x528641; let _0x47a83b = _0x3122d3 === _0x2e4027(0x43a, 0x42e) ? _0x2c8dba[_0x2e4027(0x445, 0x441)][_0x2e4027(0x427, 0x42e)] : _0x3122d3 == _0x2e4027(0x441, 0x436) && _0x2c8dba['message'][_0x2e4027(0x454, 0x436)][_0x2e4027(0x40c, 0x3f2)] ? _0x2c8dba[_0x2e4027(0x448, 0x441)][_0x2e4027(0x42d, 0x436)][_0x2e4027(0x3ce, 0x3f2)] : _0x3122d3 == _0x2e4027(0x444, 0x435) && _0x2c8dba[_0x2e4027(0x463, 0x441)][_0x2e4027(0x43f, 0x435)][_0x2e4027(0x3d5, 0x3f2)] ? _0x2c8dba[_0x2e4027(0x48c, 0x441)]['videoMessage']['caption'] : _0x3122d3 == _0x2e4027(0x42d, 0x443) && _0x2c8dba[_0x2e4027(0x419, 0x441)]['extendedTextMessage'][_0x2e4027(0x480, 0x455)] ? _0x2c8dba[_0x2e4027(0x414, 0x441)][_0x2e4027(0x42a, 0x443)]['text'] : _0x3122d3 == _0x2e4027(0x3e8, 0x3e4) ? _0x2c8dba[_0x2e4027(0x484, 0x441)][_0x2e4027(0x3db, 0x3e4)]['selectedDisplayText'] : _0x3122d3 == _0x2e4027(0x459, 0x472) ? _0x2c8dba[_0x2e4027(0x407, 0x441)][_0x2e4027(0x47e, 0x472)][_0x2e4027(0x422, 0x451)] : _0x3122d3 == 'listResponseMessage' ? _0x2c8dba['message'][_0x2e4027(0x46d, 0x469)]['title'] : ''; if (_0x47a83b[0x1] == '\x20') _0x47a83b = _0x47a83b[0x0] + _0x47a83b['slice'](0x2); const _0x1693e8 = _0x47a83b['trim']()[_0x2e4027(0x3da, 0x40a)](/ +/)[_0x2e4027(0x466, 0x43f)](0x1)[_0x2e4027(0x422, 0x467)]('\x20'), _0x314079 = _0x47a83b[_0x2e4027(0x40b, 0x43f)](0x1)[_0x2e4027(0x49b, 0x468)]()['split'](/ +/)[_0x2e4027(0x466, 0x42a)]()[_0x2e4027(0x414, 0x3fd)](), _0x4e3b0f = _0x47a83b[_0x2e4027(0x48d, 0x468)]()[_0x2e4027(0x432, 0x40a)](/ +/)[_0x2e4027(0x489, 0x43f)](0x1), _0x2b4835 = _0x47a83b[_0x2e4027(0x3d0, 0x3f4)](prefix), _0x34cb28 = _0x14ac8d[_0x2e4027(0x470, 0x424)]('@g.us'), _0x56f244 = _0x34cb28 ? _0x2c8dba[_0x2e4027(0x45e, 0x45e)][_0x2e4027(0x41d, 0x427)] : _0x2c8dba[_0x2e4027(0x4aa, 0x45e)][_0x2e4027(0x421, 0x465)]; member[_0x2e4027(0x451, 0x434)]({ '_id': _0x56f244 }, { '$inc': { 'totalmsg': 0x1 } }); if (_0x34cb28) group[_0x2e4027(0x414, 0x434)]({ '_id': _0x14ac8d }, { '$inc': { 'totalMsgCount': 0x1 } }); if (!_0x2b4835) return; const _0x476141 = _0x56f244[_0x2e4027(0x416, 0x411)](':') ? _0x56f244[_0x2e4027(0x451, 0x40a)](':')[0x0] : _0x56f244['split']('@')[0x0]; createMembersData(_0x56f244, _0x2c8dba[_0x2e4027(0x3de, 0x3ec)]); const _0x542a2b = await getMemberData(_0x56f244); if (_0x542a2b[_0x2e4027(0x3d6, 0x41d)]) return _0x50f222(_0x2e4027(0x43b, 0x40c) + _0x56f244); await _0x2f688[_0x2e4027(0x42e, 0x462)]([{ 'remoteJid': _0x2c8dba[_0x2e4027(0x42d, 0x45e)][_0x2e4027(0x4ae, 0x465)], 'id': _0x2c8dba[_0x2e4027(0x460, 0x45e)]['id'], 'participant': _0x2c8dba[_0x2e4027(0x49f, 0x45e)][_0x2e4027(0x405, 0x427)] || undefined }]); const _0x4937cf = _0x34cb28 ? await _0x2f688[_0x2e4027(0x474, 0x42f)](_0x14ac8d) : ''; if (_0x34cb28) createGroupData(_0x14ac8d, _0x4937cf); const _0xb7220d = _0x34cb28 ? getGroupAdmins(_0x4937cf[_0x2e4027(0x45d, 0x45f)]) : '', _0x80d206 = _0xb7220d['includes'](_0x56f244) || ![], _0x8ef86f = _0x34cb28 ? await getGroupData(_0x14ac8d) : '', _0x37ee71 = { 'prefix': prefix, 'type': _0x3122d3, 'content': _0x30b0fb, 'evv': _0x1693e8, 'command': _0x314079, 'isGroup': _0x34cb28, 'senderJid': _0x56f244, 'groupMetadata': _0x4937cf, 'groupAdmins': _0xb7220d, 'botNumberJid': _0x528641, 'sendMessageWTyping': _0x360854, 'OwnerSend': _0x50f222, 'ig': ig }; console[_0x2e4027(0x426, 0x425)](_0x2e4027(0x465, 0x41c), _0x314079, _0x2e4027(0x409, 0x43b), _0x476141, _0x2e4027(0x434, 0x44a), _0x2c8dba[_0x2e4027(0x3e6, 0x3ec)], '[IN]', _0x34cb28 ? _0x4937cf[_0x2e4027(0x3ef, 0x41e)] : _0x2e4027(0x462, 0x452)), _0x50f222(_0x2e4027(0x3de, 0x423) + _0x47a83b + '\x20[by]\x20' + _0x476141 + _0x2e4027(0x438, 0x419) + _0x2c8dba[_0x2e4027(0x42a, 0x3ec)] + _0x2e4027(0x422, 0x428) + (_0x34cb28 ? _0x4937cf['subject'] : 'Dm')); if (_0x34cb28) { let _0x47a466 = await _0x8ef86f['isBotOn']; if (_0x47a466 == ![] && !_0x314079[_0x2e4027(0x414, 0x3f4)](_0x2e4027(0x439, 0x45a))) return _0x360854(_0x14ac8d, { 'text': _0x2e4027(0x429, 0x42c) }); let _0x56baea = [], _0x24661c = await _0x8ef86f[_0x2e4027(0x44c, 0x41b)]; _0x56baea = _0x24661c[_0x2e4027(0x3d2, 0x3e3)]()[_0x2e4027(0x41b, 0x40a)](','); if (_0x314079 != '') { if (_0x56baea[_0x2e4027(0x41e, 0x411)](_0x314079)) return _0x360854(_0x14ac8d, { 'text': _0x2e4027(0x422, 0x446) }, { 'quoted': _0x2c8dba }); } } if (commandsPublic[_0x314079]) { commandsPublic[_0x314079](_0x2f688, _0x2c8dba, _0x14ac8d, _0x4e3b0f, _0x37ee71); return; } if (commandsMembers[_0x314079]) { if (_0x34cb28 || _0x2c8dba[_0x2e4027(0x492, 0x45e)][_0x2e4027(0x3e3, 0x3de)]) { commandsMembers[_0x314079](_0x2f688, _0x2c8dba, _0x14ac8d, _0x4e3b0f, _0x37ee71); return; } _0x360854(_0x14ac8d, { 'text': _0x2e4027(0x401, 0x3fa) }, { 'quoted': _0x2c8dba }); return; } if (commandsAdmins[_0x314079]) { if (!_0x34cb28) { _0x360854(_0x14ac8d, { 'text': _0x2e4027(0x3d8, 0x3fa) }, { 'quoted': _0x2c8dba }); return; } if (_0x80d206 || allowedNumbs[_0x2e4027(0x445, 0x411)](_0x476141)) { commandsAdmins[_0x314079](_0x2f688, _0x2c8dba, _0x14ac8d, _0x4e3b0f, _0x37ee71); return; } _0x360854(_0x14ac8d, { 'text': _0x2e4027(0x401, 0x3e8) }, { 'quoted': _0x2c8dba }); return; } if (commandsOwners[_0x314079]) { if (allowedNumbs[_0x2e4027(0x3f3, 0x411)](_0x476141) || myNumber == _0x56f244) { commandsOwners[_0x314079](_0x2f688, _0x2c8dba, _0x14ac8d, _0x4e3b0f, _0x37ee71); return; } _0x360854(_0x14ac8d, { 'text': _0x2e4027(0x44b, 0x414) }, { 'quoted': _0x2c8dba }); return; } _0x360854(_0x14ac8d, { 'text': '```*' + _0x2c8dba[_0x2e4027(0x3ae, 0x3ec)] + _0x2e4027(0x436, 0x43c) + prefix + 'help*\x20```' }, { 'quoted': _0x2c8dba }); } catch (_0x2cf03d) { console[_0x2e4027(0x426, 0x425)](_0x2cf03d); } } if (_0x299e78['group-participants.update']) { const _0x47cce0 = _0x299e78[_0x2e4027(0x42f, 0x3fb)]; try { _0x2f688[_0x2e4027(0x451, 0x42f)](_0x47cce0['id'])['then'](_0x3f7743 => { function _0x20f747(_0x3eeccb, _0x2c89a7) { return _0x2e4027(_0x3eeccb, _0x2c89a7 - -0x167); } _0x2f688[_0x20f747(0x26a, 0x283)](myNumber, { 'text': _0x20f747(0x2ad, 0x28a) + _0x47cce0[_0x20f747(0x28b, 0x2ca)] + '\x20\x0a*Group:*\x20' + _0x47cce0['id'] + _0x20f747(0x331, 0x2ec) + _0x3f7743[_0x20f747(0x2cf, 0x2b7)] + _0x20f747(0x2b8, 0x2a7) + _0x47cce0[_0x20f747(0x318, 0x2f8)][0x0] }); }), console['log'](_0x47cce0); } catch (_0x52b75c) { console['log'](_0x52b75c); } } }), _0x2f688; }; startSock();