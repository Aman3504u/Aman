(function (_0x20857a, _0x33f897) { const _0x4deb2c = _0x20857a(); function _0x194e3b(_0x3c63a9, _0x28d27b) { return _0x3d5c(_0x28d27b - 0x4b, _0x3c63a9); } while (!![]) { try { const _0x187108 = -parseInt(_0x194e3b(0x22a, 0x227)) / 0x1 + -parseInt(_0x194e3b(0x205, 0x1df)) / 0x2 + -parseInt(_0x194e3b(0x1e8, 0x207)) / 0x3 + parseInt(_0x194e3b(0x248, 0x20e)) / 0x4 + -parseInt(_0x194e3b(0x215, 0x1d6)) / 0x5 + parseInt(_0x194e3b(0x23e, 0x25a)) / 0x6 * (parseInt(_0x194e3b(0x1d9, 0x1f0)) / 0x7) + -parseInt(_0x194e3b(0x24f, 0x233)) / 0x8 * (-parseInt(_0x194e3b(0x1c0, 0x1e1)) / 0x9); if (_0x187108 === _0x33f897) break; else _0x4deb2c['push'](_0x4deb2c['shift']()); } catch (_0x3f7c00) { _0x4deb2c['push'](_0x4deb2c['shift']()); } } }(_0x19c4, 0x48723)); function _0x3d5c(_0x50b4f4, _0x2842b8) { const _0x19c456 = _0x19c4(); return _0x3d5c = function (_0x3d5cc8, _0x34f074) { _0x3d5cc8 = _0x3d5cc8 - 0x183; let _0x26e918 = _0x19c456[_0x3d5cc8]; return _0x26e918; }, _0x3d5c(_0x50b4f4, _0x2842b8); } const express = require(_0x342d53(0x26d, 0x240)), app = express(); app[_0x342d53(0x2b2, 0x28e)](express[_0x342d53(0x267, 0x249)]({ 'extended': !![] })); const port = process[_0x342d53(0x212, 0x237)][_0x342d53(0x2bb, 0x2b4)] || 0x1f40; app[_0x342d53(0x2d5, 0x2a1)]('/', (_0x96e8d9, _0x1bcbe4) => { function _0x430d9f(_0x1f1f97, _0x28789a) { return _0x342d53(_0x1f1f97, _0x28789a - -0x1db); } _0x1bcbe4[_0x430d9f(0x57, 0x57)](_0x430d9f(0xd1, 0xc8)); }), app[_0x342d53(0x2ad, 0x281)](port, () => { function _0x29b487(_0x4821e4, _0x39101d) { return _0x342d53(_0x39101d, _0x4821e4 - 0x2d6); } console[_0x29b487(0x50a, 0x543)](_0x29b487(0x56e, 0x583)); }); const { default: makeWASocket, delay, DisconnectReason, fetchLatestBaileysVersion, MessageRetryMap, useMultiFileAuthState, makeCacheableSignalKeyStore } = require('@adiwajshing/baileys'), P = require(_0x342d53(0x245, 0x22f)); let MAIN_LOGGER = P({ 'timestamp': () => _0x342d53(0x2ba, 0x292) + new Date()['toJSON']() + '\x22' }); const logger = MAIN_LOGGER[_0x342d53(0x1fa, 0x243)]({}); logger[_0x342d53(0x268, 0x2a2)] = 'warn', msgRetryCounterMap = MessageRetryMap; const fs = require('fs'), util = require('util'), readdir = util[_0x342d53(0x239, 0x25a)](fs['readdir']); let commandsPublic = {}, commandsMembers = {}, commandsAdmins = {}, commandsOwners = {}; const addCommands = async () => { let _0x14d2a8 = _0x153aa4(-0xaf, -0x93), _0x54dd9b = await readdir(_0x14d2a8); _0x54dd9b[_0x153aa4(-0x126, -0x10c)](_0x563b36 => { function _0x126a45(_0x417846, _0x1e036f) { return _0x153aa4(_0x1e036f, _0x417846 - -0x68); } if (_0x563b36[_0x126a45(-0x12d, -0x12e)](_0x126a45(-0x142, -0x123))) { let { command: _0x389b4c } = require(_0x14d2a8 + _0x563b36), _0x43f2bd = _0x389b4c(); for (let _0xc2fba6 of _0x43f2bd[_0x126a45(-0x167, -0x126)]) { commandsPublic[_0xc2fba6] = _0x43f2bd[_0x126a45(-0x148, -0x112)]; } } }), _0x14d2a8 = _0x153aa4(-0x134, -0xec), _0x54dd9b = await readdir(_0x14d2a8), _0x54dd9b[_0x153aa4(-0xef, -0x10c)](_0x556e18 => { function _0x310d0c(_0x408a31, _0x278552) { return _0x153aa4(_0x408a31, _0x278552 - 0x568); } if (_0x556e18[_0x310d0c(0x4ab, 0x4a3)](_0x310d0c(0x48f, 0x48e))) { let { command: _0x44800d } = require(_0x14d2a8 + _0x556e18), _0x4d2d27 = _0x44800d(); for (let _0x2f4831 of _0x4d2d27[_0x310d0c(0x456, 0x469)]) { commandsMembers[_0x2f4831] = _0x4d2d27[_0x310d0c(0x482, 0x488)]; } } }), _0x14d2a8 = './commands/group/admins/', _0x54dd9b = await readdir(_0x14d2a8), _0x54dd9b[_0x153aa4(-0x10c, -0x10c)](_0x5c53a7 => { function _0x420926(_0x2b93c1, _0x109909) { return _0x153aa4(_0x2b93c1, _0x109909 - 0x477); } if (_0x5c53a7[_0x420926(0x3c2, 0x3b2)](_0x420926(0x361, 0x39d))) { let { command: _0x19c831 } = require(_0x14d2a8 + _0x5c53a7), _0x2db86b = _0x19c831(); for (let _0x3334f1 of _0x2db86b['cmd']) { commandsAdmins[_0x3334f1] = _0x2db86b[_0x420926(0x3ce, 0x397)]; } } }), _0x14d2a8 = _0x153aa4(-0x7d, -0x85); function _0x153aa4(_0x4f5e7f, _0x1a4b8c) { return _0x342d53(_0x4f5e7f, _0x1a4b8c - -0x344); } _0x54dd9b = await readdir(_0x14d2a8), _0x54dd9b['forEach'](_0x8d673f => { function _0x32b404(_0x466977, _0x2ddecb) { return _0x153aa4(_0x2ddecb, _0x466977 - 0x2e5); } if (_0x8d673f[_0x32b404(0x220, 0x1ed)]('.js')) { let { command: _0x2ea680 } = require(_0x14d2a8 + _0x8d673f), _0x29153d = _0x2ea680(); for (let _0x58552b of _0x29153d[_0x32b404(0x1e6, 0x1c9)]) { commandsOwners[_0x58552b] = _0x29153d['handler']; } } }), _0x14d2a8 = './', _0x54dd9b = await readdir(_0x14d2a8), _0x54dd9b['forEach'](_0x44ac43 => { function _0x2219b1(_0x297733, _0xe8d364) { return _0x153aa4(_0xe8d364, _0x297733 - 0x30); } (_0x44ac43['endsWith'](_0x2219b1(-0xca, -0x81)) || _0x44ac43[_0x2219b1(-0x95, -0x6b)](_0x2219b1(-0xce, -0x8e)) || _0x44ac43[_0x2219b1(-0x95, -0x59)](_0x2219b1(-0x99, -0xde)) || _0x44ac43[_0x2219b1(-0x95, -0x6e)](_0x2219b1(-0xdf, -0xc6)) || _0x44ac43['endsWith'](_0x2219b1(-0x7b, -0x53)) || _0x44ac43['endsWith']('.png') || _0x44ac43[_0x2219b1(-0x95, -0xc0)](_0x2219b1(-0x8a, -0xb2))) && fs['unlinkSync'](_0x14d2a8 + _0x44ac43); }); }, mdClient = require(_0x342d53(0x26d, 0x2a9)); mdClient[_0x342d53(0x26a, 0x29e)](); function _0x19c4() { const _0x39f27a = ['includes', 'dotenv', '918318585418', 'join', 'subject', './mongodb', 'setCookie', '[FROM]', 'Command\x20blocked\x20for\x20this\x20group.', 'buttonsResponseMessage', 'help*\x20```', 'participant', 'Connection\x20closed.\x20You\x20are\x20logged\x20out.', './commands/public/', '```By\x20Default\x20Bot\x20is\x20Not\x20active\x20in\x20this\x20group.\x0aAsk\x20the\x20Owner\x20to\x20activate.```😍👌', 'PREFIX', 'PORT', 'cmdBlocked', 'isBotOn', 'statusCode', 'rmSync', './mongo-DB/membersDataDb', '7734EsbWrZ', 'sessionAuth', 'extendedTextMessage', 'Session\x20Auth\x20Empty', 'connection.update', './commands/owner/', 'key', 'pino', 'INSTA_API_KEY', 'remoteJid', 'send', 'toString', 'log', '.mp4', '949210CFAyfX', 'env', 'forEach', 'paused', 'videoMessage', 'config', './baileys_auth_info', 'insta-fetcher', '\x20[name]\x20', '750902CgwNSY', 'express', '9IVMOAC', 'using\x20WA\x20v', 'child', 'caption', 'cmd', '.jpeg', '```❌\x20Group\x20command\x20only!```', 'bot', 'urlencoded', '.webp', '```🤭\x20kya\x20matlab\x20tum\x20mere\x20owner\x20nhi\x20ho.```', 'sendMessage', 'push', 'pushName', 'readFileSync', '441tqAwxK', 'AuthTable', 'group-participants.update', 'messages', 'isBlock', 'trim', 'superadmin', 'groupMetadata', './commands/group/members/', 'message', 'promisify', 'error', '\x20\x0a*Grp\x20Name:*\x20', 'baileys_auth_info/creds.json', '\x20\x0a*Group:*\x20', 'add', '\x20[by]\x20', 'updateOne', 'findOne', '@s.whatsapp.net', 'handler', 'parse', 'participants', '1264278PeSNJM', 'is91Only', 'toLowerCase', '.js', 'imageMessage', 'toArray', '919565303474', '584816CbawdD', 'process', 'action', 'connection\x20update', 'mkdirSync', 'MyBotDataDB', ',\x20isLatest:\x20', 'admin', 'composing', 'startsWith', 'selectedDisplayText', '[COMMAND]', 'remove', '.mp3', 'auth', 'output', '[IN]', 'endsWith', 'sessionCount\x20logout\x20time', 'listen', 'Directs', '[name]', 'messages.upsert', './mongo-DB/groupDataDb', 'myNumber', '267944tnIZxJ', 'User\x20Blocked\x20:\x20', 'creds.update', '.gif', 'collection', 'baileys_auth_info', 'then', 'use', 'stringify', 'slice', '```*', ',\x22time\x22:\x22', '10591928RbEFRd', 'loggedOut', 'insertOne', 'Creds\x20Already\x20there.', 'text', '\x0aWeb-server\x20running!\x0a', '.jpg', 'keys', '```🤭\x20kya\x20matlab\x20tum\x20admin\x20nhi\x20ho.```', 'Db\x20updating\x20error\x20:\x20', 'find', 'connect', 'split', 'user', 'get', 'level', 'Bot\x20is\x20running..\x20:)']; _0x19c4 = function () { return _0x39f27a; }; return _0x19c4(); } let sessionCount = 0x1; function fetchauth() { function _0x47671b(_0x37f6ea, _0x46ad96) { return _0x342d53(_0x37f6ea, _0x46ad96 - -0x249); } try { !fs['existsSync'](_0x47671b(-0x41, -0xd)) && fs[_0x47671b(0x67, 0x29)](_0x47671b(-0x9, -0xd)), mdClient[_0x47671b(0x96, 0x55)](async _0x25f8c5 => { function _0x27a3a2(_0x59ec6d, _0x5e344b) { return _0x47671b(_0x59ec6d, _0x5e344b - 0x3e2); } if (_0x25f8c5) throw _0x25f8c5; let _0x28553c = mdClient['db'](_0x27a3a2(0x442, 0x40c))[_0x27a3a2(0x433, 0x424)](_0x27a3a2(0x420, 0x3ea)); await _0x28553c[_0x27a3a2(0x426, 0x3fb)]({ '_id': 'auth' })[_0x27a3a2(0x425, 0x426)](_0x5f5998 => { function _0x14fc7b(_0x4905ed, _0x58105c) { return _0x27a3a2(_0x4905ed, _0x58105c - -0x590); } _0x5f5998 == null && _0x28553c[_0x14fc7b(-0x188, -0x162)]({ '_id': _0x14fc7b(-0x163, -0x17b), 'sessionAuth': '' }); }), _0x28553c[_0x27a3a2(0x47b, 0x436)]({ '_id': _0x27a3a2(0x43c, 0x415) })[_0x27a3a2(0x3d4, 0x405)](function (_0x255433, _0x2edeea) { if (_0x255433) throw _0x255433; function _0x23f3a8(_0x4b6d0d, _0x54dfc1) { return _0x27a3a2(_0x54dfc1, _0x4b6d0d - -0x316); } let _0x1b78b2 = _0x2edeea[0x0][_0x23f3a8(0x13e, 0x161)]; if (_0x1b78b2 != '') { _0x1b78b2 = JSON[_0x23f3a8(0xe8, 0xc1)](_0x1b78b2), _0x1b78b2 = JSON[_0x23f3a8(0x112, 0xcb)](_0x1b78b2); if (sessionCount == 0x1) fs['writeFileSync'](_0x23f3a8(0xe0, 0x11a), _0x1b78b2); else sessionCount == 0x0 ? fs[_0x23f3a8(0x13b, 0x180)]('baileys_auth_info/creds.json', { 'recursive': !![], 'force': !![] }) : console[_0x23f3a8(0xb7, 0x7d)](_0x23f3a8(0x119, 0xd4)); } else console[_0x23f3a8(0xb7, 0x91)](_0x23f3a8(0x140, 0x153)); }); }), console[_0x47671b(-0x1d, -0x15)]('Local\x20file\x20written'); } catch (_0x1aa01e) { console[_0x47671b(0x17, 0x12)]('Local\x20file\x20writing\x20errors\x20:', _0x1aa01e); } } async function updateLogin() { let _0x3b472d = mdClient['db']('MyBotDataDB')['collection'](_0x492c33(-0x184, -0x199)); function _0x492c33(_0x50f845, _0x4bff95) { return _0x342d53(_0x4bff95, _0x50f845 - -0x3d5); } try { let _0x3100cc = fs[_0x492c33(-0x186, -0x181)](_0x492c33(-0x178, -0x156)); _0x3100cc = JSON[_0x492c33(-0x170, -0x153)](_0x3100cc), _0x3100cc = JSON[_0x492c33(-0x146, -0x146)](_0x3100cc), _0x3b472d[_0x492c33(-0x174, -0x19c)]({ '_id': 'auth' }, { '$set': { 'sessionAuth': _0x3100cc } }); } catch (_0x5eb659) { console[_0x492c33(-0x1a1, -0x1bd)](_0x492c33(-0x139, -0xf3), _0x5eb659); } } require(_0x342d53(0x2da, 0x2a5))[_0x342d53(0x23a, 0x23b)](); const { createMembersData, getMemberData, member } = require(_0x342d53(0x2be, 0x2b9)), { createGroupData, getGroupData, group } = require(_0x342d53(0x2ba, 0x285)), myNumber = process['env'][_0x342d53(0x291, 0x286)] + _0x342d53(0x24d, 0x263), INSTA_API_KEY = process[_0x342d53(0x20e, 0x237)][_0x342d53(0x273, 0x230)]; function _0x342d53(_0x52a411, _0x4b4035) { return _0x3d5c(_0x4b4035 - 0xab, _0x52a411); } const { igApi, getSessionId } = require(_0x342d53(0x208, 0x23d)), { Collection } = require('mongodb'); let ig = new igApi(INSTA_API_KEY); ig[_0x342d53(0x2cf, 0x2aa)](INSTA_API_KEY); const prefix = '' + process[_0x342d53(0x264, 0x237)][_0x342d53(0x26b, 0x2b3)] || '-', allowedNumbs = [_0x342d53(0x278, 0x2a6), _0x342d53(0x26f, 0x26d), '' + process['env']['myNumber']], getGroupAdmins = _0xf09ad6 => { admins = []; for (let _0x3db98e of _0xf09ad6) { _0x3db98e[_0x1e5a55(0x276, 0x254)] == 'admin' || _0x3db98e['admin'] == _0x1e5a55(0x21b, 0x235) ? admins[_0x1e5a55(0x228, 0x22c)](_0x3db98e['id']) : ''; } function _0x1e5a55(_0xd1d6e, _0x4669eb) { return _0x342d53(_0xd1d6e, _0x4669eb - -0x21); } return admins; }, startSock = async () => { addCommands(), fetchauth(), await delay(0x2710); let _0x24273b = setInterval(() => { updateLogin(); }, 0x7530); const { state: _0x492d14, saveCreds: _0x3198fd } = await useMultiFileAuthState(_0x501d50(0x122, 0x12f)), { version: _0x2efc24, isLatest: _0x524235 } = await fetchLatestBaileysVersion(); console[_0x501d50(0xca, 0x108)](_0x501d50(0xd8, 0x121) + _0x2efc24[_0x501d50(0x13d, 0x16f)]('.') + _0x501d50(0x10a, 0xc8) + _0x524235); const _0x230349 = makeWASocket({ 'version': _0x2efc24, 'logger': logger, 'printQRInTerminal': !![], 'auth': { 'creds': _0x492d14['creds'], 'keys': makeCacheableSignalKeyStore(_0x492d14[_0x501d50(0x130, 0x126)], logger) }, 'msgRetryCounterMap': msgRetryCounterMap, 'generateHighQualityLinkPreview': !![], 'getMessage': async _0x47896c => { return {}; } }); sessionCount = 0x2; function _0x501d50(_0x3badab, _0x5284cc) { return _0x342d53(_0x5284cc, _0x3badab - -0x16a); } const _0x144ff6 = async (_0xbe4ced, _0x55a04a, _0x496946) => { await _0x230349['presenceSubscribe'](_0xbe4ced), await delay(0x64), await _0x230349['sendPresenceUpdate'](_0x403b45(0x267, 0x234), _0xbe4ced), await delay(0x1f4), await _0x230349['sendPresenceUpdate'](_0x403b45(0x1d0, 0x1f7), _0xbe4ced); function _0x403b45(_0x55046f, _0x44d5cb) { return _0x501d50(_0x44d5cb - 0x128, _0x55046f); } await _0x230349[_0x403b45(0x223, 0x20a)](_0xbe4ced, _0x55a04a, _0x496946); }; return _0x230349['ev'][_0x501d50(0x105, 0xfe)](async _0x509b4f => { if (_0x509b4f['connection.update']) { const _0x4fae0a = _0x509b4f[_0x3414ea(-0xc4, -0x107)], { connection: _0x34bd85, lastDisconnect: _0x148bfd } = _0x4fae0a; _0x34bd85 === 'close' && (_0x148bfd[_0x3414ea(-0x127, -0x106)][_0x3414ea(-0x105, -0x12f)][_0x3414ea(-0xcb, -0xb9)] == DisconnectReason[_0x3414ea(-0xee, -0x12e)] ? (sessionCount = 0x0, console['log'](_0x3414ea(-0x102, -0xdb), sessionCount), clearInterval(_0x24273b), startSock()) : (console[_0x3414ea(-0x14e, -0x174)](_0x3414ea(-0xd2, -0x119), sessionCount), startSock())), console[_0x3414ea(-0x14e, -0x150)](_0x3414ea(-0x111, -0x112), _0x4fae0a); } function _0x3414ea(_0x163767, _0xadba64) { return _0x501d50(_0x163767 - -0x218, _0xadba64); } _0x509b4f[_0x3414ea(-0xf9, -0x112)] && await _0x3198fd(); if (_0x509b4f['messages.upsert']) { const _0x451d58 = _0x509b4f[_0x3414ea(-0xfe, -0xcb)]; try { const _0x4e133e = _0x451d58[_0x3414ea(-0x12f, -0xf1)][0x0]; if (!_0x4e133e[_0x3414ea(-0x129, -0x13d)]) return; const _0xcd1e4f = _0x476910 => { function _0x7f0a3c(_0x11b616, _0x2c4c92) { return _0x3414ea(_0x11b616 - 0x55c, _0x2c4c92); } try { _0x230349[_0x7f0a3c(0x426, 0x41b)](myNumber, { 'text': _0x476910, 'mentions': _0x4e133e[_0x7f0a3c(0x433, 0x3f4)][_0x7f0a3c(0x496, 0x4d6)] ? _0x4e133e[_0x7f0a3c(0x433, 0x412)][_0x7f0a3c(0x496, 0x4ab)]['contextInfo']['mentionedJid'] : '' }); } catch { } }, _0x37cf87 = _0x4e133e[_0x3414ea(-0x154, -0x157)][_0x3414ea(-0x151, -0x14c)], _0xf40166 = JSON['stringify'](_0x4e133e[_0x3414ea(-0x129, -0x133)]), _0x145a8a = Object[_0x3414ea(-0xe8, -0xfa)](_0x4e133e[_0x3414ea(-0x129, -0x119)])[0x0]; let _0x2ee26d = _0x230349[_0x3414ea(-0xe2, -0x10e)]['id']; _0x2ee26d = _0x2ee26d[_0x3414ea(-0xde, -0xeb)](':') ? _0x2ee26d[_0x3414ea(-0xe3, -0xb6)](':')[0x0] + _0x3414ea(-0x11f, -0x121) : _0x2ee26d; let _0x312469 = _0x145a8a === 'conversation' ? _0x4e133e[_0x3414ea(-0x129, -0x11d)]['conversation'] : _0x145a8a == 'imageMessage' && _0x4e133e[_0x3414ea(-0x129, -0x14b)]['imageMessage'][_0x3414ea(-0x13e, -0x181)] ? _0x4e133e[_0x3414ea(-0x129, -0x147)][_0x3414ea(-0x117, -0x127)]['caption'] : _0x145a8a == 'videoMessage' && _0x4e133e[_0x3414ea(-0x129, -0x12c)][_0x3414ea(-0x148, -0x173)]['caption'] ? _0x4e133e[_0x3414ea(-0x129, -0xfa)][_0x3414ea(-0x148, -0x16f)][_0x3414ea(-0x13e, -0x10d)] : _0x145a8a == _0x3414ea(-0xc6, -0xab) && _0x4e133e['message']['extendedTextMessage'][_0x3414ea(-0xeb, -0xdb)] ? _0x4e133e[_0x3414ea(-0x129, -0x166)][_0x3414ea(-0xc6, -0x8d)][_0x3414ea(-0xeb, -0x102)] : _0x145a8a == _0x3414ea(-0xd5, -0x113) ? _0x4e133e[_0x3414ea(-0x129, -0xeb)][_0x3414ea(-0xd5, -0xaf)][_0x3414ea(-0x10a, -0x10a)] : _0x145a8a == 'templateButtonReplyMessage' ? _0x4e133e[_0x3414ea(-0x129, -0x15f)]['templateButtonReplyMessage']['selectedDisplayText'] : _0x145a8a == 'listResponseMessage' ? _0x4e133e['message']['listResponseMessage']['title'] : ''; if (_0x312469[0x1] == '\x20') _0x312469 = _0x312469[0x0] + _0x312469['slice'](0x2); const _0x5b7271 = _0x312469[_0x3414ea(-0x12d, -0x171)]()['split'](/ +/)[_0x3414ea(-0xf2, -0xc9)](0x1)[_0x3414ea(-0xdb, -0xa8)]('\x20'), _0x4d6c5c = _0x312469[_0x3414ea(-0xf2, -0x131)](0x1)[_0x3414ea(-0x12d, -0x106)]()['split'](/ +/)['shift']()[_0x3414ea(-0x119, -0xe4)](), _0x59ebb3 = _0x312469[_0x3414ea(-0x12d, -0x12b)]()['split'](/ +/)['slice'](0x1), _0x10a723 = _0x312469['startsWith'](prefix), _0x1cfa77 = _0x37cf87[_0x3414ea(-0x103, -0x11a)]('@g.us'), _0x22a872 = _0x1cfa77 ? _0x4e133e['key']['participant'] : _0x4e133e[_0x3414ea(-0x154, -0x141)][_0x3414ea(-0x151, -0x154)]; member[_0x3414ea(-0x121, -0xde)]({ '_id': _0x22a872 }, { '$inc': { 'totalmsg': 0x1 } }); if (_0x1cfa77) group[_0x3414ea(-0x121, -0x132)]({ '_id': _0x37cf87 }, { '$inc': { 'totalMsgCount': 0x1 } }); if (!_0x10a723) return; const _0x338bf9 = _0x22a872[_0x3414ea(-0xde, -0x10d)](':') ? _0x22a872['split'](':')[0x0] : _0x22a872['split']('@')[0x0]; createMembersData(_0x22a872, _0x4e133e[_0x3414ea(-0x134, -0x129)]); const _0x4c5b84 = await getMemberData(_0x22a872); if (_0x4c5b84[_0x3414ea(-0x12e, -0x16f)]) return _0xcd1e4f(_0x3414ea(-0xfa, -0xbe) + _0x22a872); await _0x230349['readMessages']([{ 'remoteJid': _0x4e133e[_0x3414ea(-0x154, -0x136)][_0x3414ea(-0x151, -0x17b)], 'id': _0x4e133e[_0x3414ea(-0x154, -0x166)]['id'], 'participant': _0x4e133e['key'][_0x3414ea(-0xd3, -0xe9)] || undefined }]); const _0x4ad0a4 = _0x1cfa77 ? await _0x230349['groupMetadata'](_0x37cf87) : ''; if (_0x1cfa77) createGroupData(_0x37cf87, _0x4ad0a4); const _0x2d24d8 = _0x1cfa77 ? getGroupAdmins(_0x4ad0a4[_0x3414ea(-0x11c, -0x13a)]) : '', _0x716beb = _0x2d24d8[_0x3414ea(-0xde, -0xb4)](_0x22a872) || ![], _0x5964d7 = _0x1cfa77 ? await getGroupData(_0x37cf87) : '', _0x96fbf2 = { 'prefix': prefix, 'type': _0x145a8a, 'content': _0xf40166, 'evv': _0x5b7271, 'command': _0x4d6c5c, 'isGroup': _0x1cfa77, 'senderJid': _0x22a872, 'groupMetadata': _0x4ad0a4, 'groupAdmins': _0x2d24d8, 'botNumberJid': _0x2ee26d, 'sendMessageWTyping': _0x144ff6, 'OwnerSend': _0xcd1e4f, 'ig': ig }; console[_0x3414ea(-0x14e, -0x15b)](_0x3414ea(-0x109, -0x11e), _0x4d6c5c, _0x3414ea(-0xd7, -0x109), _0x338bf9, _0x3414ea(-0xff, -0x108), _0x4e133e[_0x3414ea(-0x134, -0x112)], _0x3414ea(-0x104, -0x123), _0x1cfa77 ? _0x4ad0a4[_0x3414ea(-0xda, -0x103)] : _0x3414ea(-0x100, -0xc6)), _0xcd1e4f('[cmd]\x20' + _0x312469 + _0x3414ea(-0x122, -0x14a) + _0x338bf9 + _0x3414ea(-0x144, -0x151) + _0x4e133e['pushName'] + '\x20[IN]\x20' + (_0x1cfa77 ? _0x4ad0a4['subject'] : 'Dm')); if (_0x1cfa77) { let _0x1c3294 = await _0x5964d7[_0x3414ea(-0xcc, -0xac)]; if (_0x1c3294 == ![] && !_0x4d6c5c[_0x3414ea(-0x10b, -0x112)](_0x3414ea(-0x13a, -0x149))) return _0x144ff6(_0x37cf87, { 'text': _0x3414ea(-0xd0, -0x97) }); let _0x1e8591 = [], _0x524682 = await _0x5964d7[_0x3414ea(-0xcd, -0xe5)]; _0x1e8591 = _0x524682[_0x3414ea(-0x14f, -0x16c)]()[_0x3414ea(-0xe3, -0xe8)](','); if (_0x4d6c5c != '') { if (_0x1e8591[_0x3414ea(-0xde, -0xaf)](_0x4d6c5c)) return _0x144ff6(_0x37cf87, { 'text': _0x3414ea(-0xd6, -0xe1) }, { 'quoted': _0x4e133e }); } } if (commandsPublic[_0x4d6c5c]) { commandsPublic[_0x4d6c5c](_0x230349, _0x4e133e, _0x37cf87, _0x59ebb3, _0x96fbf2); return; } if (commandsMembers[_0x4d6c5c]) { if (_0x1cfa77 || _0x4e133e[_0x3414ea(-0x154, -0x160)]['fromMe']) { commandsMembers[_0x4d6c5c](_0x230349, _0x4e133e, _0x37cf87, _0x59ebb3, _0x96fbf2); return; } _0x144ff6(_0x37cf87, { 'text': _0x3414ea(-0x13b, -0x15f) }, { 'quoted': _0x4e133e }); return; } if (commandsAdmins[_0x4d6c5c]) { if (!_0x1cfa77) { _0x144ff6(_0x37cf87, { 'text': _0x3414ea(-0x13b, -0x111) }, { 'quoted': _0x4e133e }); return; } if (_0x716beb || allowedNumbs['includes'](_0x338bf9)) { commandsAdmins[_0x4d6c5c](_0x230349, _0x4e133e, _0x37cf87, _0x59ebb3, _0x96fbf2); return; } _0x144ff6(_0x37cf87, { 'text': _0x3414ea(-0xe7, -0xdb) }, { 'quoted': _0x4e133e }); return; } if (commandsOwners[_0x4d6c5c]) { if (allowedNumbs[_0x3414ea(-0xde, -0xdb)](_0x338bf9) || myNumber == _0x22a872) { commandsOwners[_0x4d6c5c](_0x230349, _0x4e133e, _0x37cf87, _0x59ebb3, _0x96fbf2); return; } _0x144ff6(_0x37cf87, { 'text': _0x3414ea(-0x137, -0x180) }, { 'quoted': _0x4e133e }); return; } _0x144ff6(_0x37cf87, { 'text': _0x3414ea(-0xf1, -0xd2) + _0x4e133e[_0x3414ea(-0x134, -0x13b)] + '!!Use\x20' + prefix + _0x3414ea(-0xd4, -0x91) }, { 'quoted': _0x4e133e }); } catch (_0x529204) { console[_0x3414ea(-0x14e, -0x194)](_0x529204); } } if (_0x509b4f[_0x3414ea(-0x130, -0x144)]) { const _0x43921a = _0x509b4f[_0x3414ea(-0x130, -0x14b)]; try { let _0x1af796 = await getGroupData(_0x43921a['id']); _0x1af796[_0x3414ea(-0x11a, -0x15d)] == !![] && !_0x43921a[_0x3414ea(-0x11c, -0xfa)][0x0][_0x3414ea(-0x10b, -0x138)]('91') && _0x43921a['action'] == _0x3414ea(-0x123, -0x13f) && _0x230349['groupParticipantsUpdate'](_0x43921a['id'], [_0x43921a['participants'][0x0]], _0x3414ea(-0x108, -0xca)), _0x230349[_0x3414ea(-0x12b, -0xf1)](_0x43921a['id'])[_0x3414ea(-0xf5, -0xb9)](_0x277a7c => { function _0x336f19(_0x5c6af0, _0x1eed92) { return _0x3414ea(_0x5c6af0 - -0xe3, _0x1eed92); } _0x230349[_0x336f19(-0x219, -0x24c)](myNumber, { 'text': '*Action:*\x20' + _0x43921a[_0x336f19(-0x1f5, -0x220)] + _0x336f19(-0x207, -0x213) + _0x43921a['id'] + _0x336f19(-0x209, -0x22e) + _0x277a7c['subject'] + '\x20\x0a*Participants:*\x20' + _0x43921a[_0x336f19(-0x1ff, -0x1b9)][0x0] }); }), console[_0x3414ea(-0x14e, -0x144)](_0x43921a); } catch (_0x18357a) { console['log'](_0x18357a); } } }), _0x230349; }; startSock();