(function (_0x44efec, _0x472d2c) { function _0x37faf2(_0x1e4c2b, _0x2cacba) { return _0x579b(_0x1e4c2b - 0x26d, _0x2cacba); } const _0x22f44a = _0x44efec(); while (!![]) { try { const _0x23dd29 = -parseInt(_0x37faf2(0x434, 0x45b)) / 0x1 * (-parseInt(_0x37faf2(0x407, 0x450)) / 0x2) + -parseInt(_0x37faf2(0x457, 0x41f)) / 0x3 * (parseInt(_0x37faf2(0x463, 0x48b)) / 0x4) + -parseInt(_0x37faf2(0x403, 0x430)) / 0x5 * (parseInt(_0x37faf2(0x45c, 0x472)) / 0x6) + -parseInt(_0x37faf2(0x421, 0x428)) / 0x7 * (-parseInt(_0x37faf2(0x435, 0x47b)) / 0x8) + parseInt(_0x37faf2(0x425, 0x410)) / 0x9 + -parseInt(_0x37faf2(0x422, 0x3f9)) / 0xa + parseInt(_0x37faf2(0x464, 0x484)) / 0xb; if (_0x23dd29 === _0x472d2c) break; else _0x22f44a['push'](_0x22f44a['shift']()); } catch (_0x55435c) { _0x22f44a['push'](_0x22f44a['shift']()); } } }(_0x311d, 0xb5daf)); const express = require(_0x48202a(0xa2, 0x93)), app = express(); app[_0x48202a(0x59, 0x94)](express['urlencoded']({ 'extended': !![] })); const port = process[_0x48202a(0x88, 0x46)]['PORT'] || 0x1f40; app[_0x48202a(0x48, 0x72)]('/', (_0x2f9959, _0x57e113) => { _0x57e113['send']('Bot\x20is\x20running..\x20:)'); }), app[_0x48202a(0xc8, 0xaa)](port, () => { function _0x946f28(_0x1e90d6, _0x11744a) { return _0x48202a(_0x11744a, _0x1e90d6 - 0x34b); } console[_0x946f28(0x3cb, 0x3f8)]('\x0aWeb-server\x20running!\x0a'); }); const { default: makeWASocket, delay, DisconnectReason, fetchLatestBaileysVersion, MessageRetryMap, useMultiFileAuthState, makeCacheableSignalKeyStore } = require(_0x48202a(0x6e, 0x5d)), P = require('pino'); let MAIN_LOGGER = P({ 'timestamp': () => ',\x22time\x22:\x22' + new Date()[_0x48202a(0xc, 0x3e)]() + '\x22' }); function _0x579b(_0x59a759, _0x59028b) { const _0x311dfd = _0x311d(); return _0x579b = function (_0x579b32, _0x3615f9) { _0x579b32 = _0x579b32 - 0x17c; let _0x121651 = _0x311dfd[_0x579b32]; return _0x121651; }, _0x579b(_0x59a759, _0x59028b); } const logger = MAIN_LOGGER[_0x48202a(0x4c, 0x40)]({}); function _0x311d() { const _0x3f72ca = ['Creds\x20Already\x20there.', 'messages.upsert', 'findOne', 'listResponseMessage', 'toLowerCase', 'listen', 'contextInfo', 'dotenv', 'join', 'process', 'buttonsResponseMessage', 'key', './mongodb', 'error', 'title', 'remove', '.webp', 'baileys_auth_info', 'connection.update', 'add', '\x20\x0a*Group:*\x20', 'util', '.jpeg', 'stringify', 'endsWith', '[COMMAND]', '*Action:*\x20', 'groupParticipantsUpdate', '[FROM]', '\x20[by]\x20', './mongo-DB/groupDataDb', 'connection\x20update', 'handler', 'pushName', 'then', 'presenceSubscribe', 'admin', 'parse', '2635EhqBbG', 'Local\x20file\x20writing\x20errors\x20:', 'mongodb', '\x20[name]\x20', '1943294OWaVpK', 'participants', 'Db\x20updating\x20error\x20:\x20', 'group-participants.update', 'baileys_auth_info/creds.json', 'creds.update', 'sessionCount\x20logout\x20time', 'using\x20WA\x20v', '.mp4', 'toJSON', 'readFileSync', 'child', 'groupMetadata', 'superadmin', 'cmdBlocked', 'startsWith', 'conversation', 'env', 'myNumber', 'trim', '\x20\x0a*Grp\x20Name:*\x20', 'imageMessage', 'mkdirSync', 'caption', 'forEach', 'sendMessage', '301qpgxim', '10451250xziVAm', 'help*\x20```', '```*', '1210482xyhBPf', ',\x20isLatest:\x20', 'botNumber', 'find', './commands/owner/', '```❌\x20Group\x20command\x20only!```', 'selectedDisplayText', 'bot', 'Command\x20blocked\x20for\x20this\x20group.', '.js', '@adiwajshing/baileys', 'action', 'connect', 'Connection\x20closed.\x20You\x20are\x20logged\x20out.', 'insertOne', '1YBgwYz', '270232BeDLIA', 'text', '918318585418', '\x20[IN]\x20', 'sendPresenceUpdate', 'promisify', '[IN]', 'participant', 'PREFIX', 'rmSync', 'extendedTextMessage', '[cmd]\x20', '@s.whatsapp.net', 'INSTA_API_KEY', 'warn', 'get', './commands/group/members/', 'Local\x20file\x20written', 'sessionAuth', 'insta-fetcher', 'push', 'includes', 'split', 'setCookie', 'auth', 'config', 'MyBotDataDB', 'Session\x20Auth\x20Empty', 'keys', 'log', 'unlinkSync', 'fromMe', 'User\x20Blocked\x20:\x20', 'toString', '9ytIPuX', 'message', 'remoteJid', 'toArray', 'Directs', '4776VADbVt', '```By\x20Default\x20Bot\x20is\x20Not\x20active\x20in\x20this\x20group.\x0aAsk\x20the\x20Owner\x20to\x20activate.```😍👌', 'updateOne', 'cmd', 'level', './commands/public/', 'composing', '681744UyhBNw', '1783782tnpJkJ', 'express', 'use', 'videoMessage', 'isBotOn', 'templateButtonReplyMessage', 'slice', '@g.us', 'subject', '```🤭\x20kya\x20matlab\x20tum\x20admin\x20nhi\x20ho.```', 'output', '.mp3', 'isBlock', './baileys_auth_info', 'collection', '.png', 'AuthTable', 'user', 'readMessages']; _0x311d = function () { return _0x3f72ca; }; return _0x311d(); } logger[_0x48202a(0xa8, 0x8e)] = _0x48202a(0x81, 0x71), msgRetryCounterMap = MessageRetryMap; const fs = require('fs'), util = require(_0x48202a(0x50, 0x20)), readdir = util[_0x48202a(0x5b, 0x68)](fs['readdir']); let commandsPublic = {}, commandsMembers = {}, commandsAdmins = {}, commandsOwners = {}; const addCommands = async () => { let _0x3a7efe = _0x342a2a(0x53e, 0x540), _0x3442f3 = await readdir(_0x3a7efe); _0x3442f3[_0x342a2a(0x4be, 0x4fe)](_0x3e0814 => { function _0x1f2a56(_0xc0b238, _0x26f085) { return _0x342a2a(_0x26f085, _0xc0b238 - -0x273); } if (_0x3e0814[_0x1f2a56(0x261, 0x2a8)](_0x1f2a56(0x29a, 0x28a))) { let { command: _0x2f363d } = require(_0x3a7efe + _0x3e0814), _0xc5b3f6 = _0x2f363d(); for (let _0x487868 of _0xc5b3f6[_0x1f2a56(0x2cb, 0x2f5)]) { commandsPublic[_0x487868] = _0xc5b3f6['handler']; } } }), _0x3a7efe = _0x342a2a(0x4f6, 0x524), _0x3442f3 = await readdir(_0x3a7efe), _0x3442f3[_0x342a2a(0x52c, 0x4fe)](_0x166824 => { function _0x5cf4d9(_0x421350, _0x45934d) { return _0x342a2a(_0x421350, _0x45934d - -0x92); } if (_0x166824['endsWith']('.js')) { let { command: _0x37e88a } = require(_0x3a7efe + _0x166824), _0x2e1da8 = _0x37e88a(); for (let _0x4e2e4b of _0x2e1da8[_0x5cf4d9(0x4dd, 0x4ac)]) { commandsMembers[_0x4e2e4b] = _0x2e1da8[_0x5cf4d9(0x476, 0x44a)]; } } }), _0x3a7efe = './commands/group/admins/', _0x3442f3 = await readdir(_0x3a7efe), _0x3442f3[_0x342a2a(0x4e5, 0x4fe)](_0x27a79d => { function _0xb3b0a4(_0x2b2821, _0x5b9c55) { return _0x342a2a(_0x2b2821, _0x5b9c55 - -0xc8); } if (_0x27a79d[_0xb3b0a4(0x401, 0x40c)](_0xb3b0a4(0x40b, 0x445))) { let { command: _0x21db74 } = require(_0x3a7efe + _0x27a79d), _0x40f83f = _0x21db74(); for (let _0x535842 of _0x40f83f['cmd']) { commandsAdmins[_0x535842] = _0x40f83f[_0xb3b0a4(0x3cd, 0x414)]; } } }), _0x3a7efe = _0x342a2a(0x51d, 0x508), _0x3442f3 = await readdir(_0x3a7efe), _0x3442f3[_0x342a2a(0x4d4, 0x4fe)](_0x51b7d0 => { function _0x21f94d(_0x3ae162, _0x53d6da) { return _0x342a2a(_0x53d6da, _0x3ae162 - -0x43e); } if (_0x51b7d0['endsWith']('.js')) { let { command: _0x4c9a45 } = require(_0x3a7efe + _0x51b7d0), _0x357ddb = _0x4c9a45(); for (let _0x1e9924 of _0x357ddb[_0x21f94d(0x100, 0x113)]) { commandsOwners[_0x1e9924] = _0x357ddb[_0x21f94d(0x9e, 0xc5)]; } } }); function _0x342a2a(_0x283ed7, _0x12cded) { return _0x48202a(_0x283ed7, _0x12cded - 0x4b1); } _0x3a7efe = './', _0x3442f3 = await readdir(_0x3a7efe), _0x3442f3[_0x342a2a(0x518, 0x4fe)](_0x56aa8b => { function _0x63121c(_0x1a6b27, _0x4de67f) { return _0x342a2a(_0x1a6b27, _0x4de67f - -0x144); } (_0x56aa8b[_0x63121c(0x3b3, 0x390)](_0x63121c(0x353, 0x388)) || _0x56aa8b[_0x63121c(0x3b3, 0x390)](_0x63121c(0x378, 0x38e)) || _0x56aa8b[_0x63121c(0x399, 0x390)](_0x63121c(0x3c6, 0x40a)) || _0x56aa8b[_0x63121c(0x395, 0x390)](_0x63121c(0x3d0, 0x3aa)) || _0x56aa8b[_0x63121c(0x38b, 0x390)]('.jpg') || _0x56aa8b['endsWith'](_0x63121c(0x3e8, 0x40e)) || _0x56aa8b[_0x63121c(0x349, 0x390)]('.gif')) && fs[_0x63121c(0x408, 0x3ee)](_0x3a7efe + _0x56aa8b); }); }, mdClient = require(_0x48202a(0x2, 0x17)); mdClient[_0x48202a(0x43, 0x5f)](); let sessionCount = 0x1; function fetchauth() { function _0x53537e(_0x2657a1, _0x1ea2f2) { return _0x48202a(_0x1ea2f2, _0x2657a1 - 0x2a8); } try { !fs['existsSync'](_0x53537e(0x347, 0x322)) && fs[_0x53537e(0x2f3, 0x2d6)]('./baileys_auth_info'), mdClient['connect'](async _0x4e818d => { function _0x50396a(_0x508166, _0x5c8993) { return _0x53537e(_0x5c8993 - -0x52, _0x508166); } if (_0x4e818d) throw _0x4e818d; let _0x3e05bc = mdClient['db'](_0x50396a(0x2de, 0x2d3))[_0x50396a(0x2b9, 0x2f6)](_0x50396a(0x2ca, 0x2f8)); await _0x3e05bc[_0x50396a(0x31f, 0x2fd)]({ '_id': _0x50396a(0x298, 0x2d1) })[_0x50396a(0x247, 0x283)](_0x42a672 => { function _0x38d03f(_0x227b52, _0x41e6fc) { return _0x50396a(_0x41e6fc, _0x227b52 - 0x2d0); } _0x42a672 == null && _0x3e05bc[_0x38d03f(0x587, 0x5ac)]({ '_id': _0x38d03f(0x5a1, 0x5c6), 'sessionAuth': '' }); }), _0x3e05bc[_0x50396a(0x2e4, 0x2ac)]({ '_id': _0x50396a(0x2b4, 0x2d1) })[_0x50396a(0x2fa, 0x2de)](function (_0x397054, _0x2b7fb9) { if (_0x397054) throw _0x397054; function _0x5b2b99(_0xb99cee, _0x3f89d2) { return _0x50396a(_0x3f89d2, _0xb99cee - 0x1b7); } let _0x21821f = _0x2b7fb9[0x0][_0x5b2b99(0x482, 0x4a5)]; if (_0x21821f != '') { _0x21821f = JSON[_0x5b2b99(0x43d, 0x428)](_0x21821f), _0x21821f = JSON['stringify'](_0x21821f); if (sessionCount == 0x1) fs['writeFileSync'](_0x5b2b99(0x446, 0x41c), _0x21821f); else sessionCount == 0x0 ? fs[_0x5b2b99(0x479, 0x4a6)](_0x5b2b99(0x446, 0x42b), { 'recursive': !![], 'force': !![] }) : console[_0x5b2b99(0x48d, 0x455)](_0x5b2b99(0x4b2, 0x49b)); } else console[_0x5b2b99(0x48d, 0x460)](_0x5b2b99(0x48b, 0x4a6)); }); }), console[_0x53537e(0x328, 0x2f9)](_0x53537e(0x31c, 0x2e5)); } catch (_0x4dff36) { console[_0x53537e(0x2c0, 0x2c2)](_0x53537e(0x2da, 0x2ff), _0x4dff36); } } async function updateLogin() { let _0x57f492 = mdClient['db'](_0x286dd7(-0x56, -0xb))[_0x286dd7(-0x8, 0x18)](_0x286dd7(-0x20, 0x1a)); function _0x286dd7(_0xe3a52e, _0x581f78) { return _0x48202a(_0xe3a52e, _0x581f78 - -0x88); } try { let _0x497dd0 = fs[_0x286dd7(-0x7a, -0x49)](_0x286dd7(-0x38, -0x4f)); _0x497dd0 = JSON[_0x286dd7(-0x2c, -0x58)](_0x497dd0), _0x497dd0 = JSON[_0x286dd7(-0x30, -0x66)](_0x497dd0), _0x57f492[_0x286dd7(-0x19, 0x4)]({ '_id': _0x286dd7(-0x16, -0xd) }, { '$set': { 'sessionAuth': _0x497dd0 } }); } catch (_0x18ab25) { console[_0x286dd7(-0x22, -0x8)](_0x286dd7(-0x27, -0x51), _0x18ab25); } } require(_0x48202a(0x9e, 0xac))[_0x48202a(0xa6, 0x7c)](); const { createMembersData, getMemberData, member } = require('./mongo-DB/membersDataDb'), { createGroupData, getGroupData, group } = require(_0x48202a(0x29, 0x29)), myNumber = process[_0x48202a(0x7a, 0x46)][_0x48202a(0x1f, 0x47)] + _0x48202a(0x34, 0x6f), INSTA_API_KEY = process[_0x48202a(0x67, 0x46)][_0x48202a(0x43, 0x70)]; function _0x48202a(_0x96367d, _0x5647ed) { return _0x579b(_0x5647ed - -0x165, _0x96367d); } const { igApi, getSessionId } = require(_0x48202a(0x59, 0x76)), { Collection } = require(_0x48202a(0x21, 0x33)); let ig = new igApi(INSTA_API_KEY); ig[_0x48202a(0x4d, 0x7a)](INSTA_API_KEY); const prefix = '' + process[_0x48202a(0x43, 0x46)][_0x48202a(0x5c, 0x6b)] || '-', allowedNumbs = [_0x48202a(0x3a, 0x65), '' + process[_0x48202a(0xc, 0x46)][_0x48202a(0x82, 0x47)], '' + process[_0x48202a(0x71, 0x46)][_0x48202a(0x4e, 0x55)]], getGroupAdmins = _0x3cdefd => { admins = []; function _0x30bfb0(_0x297abb, _0x36d1f5) { return _0x48202a(_0x297abb, _0x36d1f5 - -0x88); } for (let _0x2ff274 of _0x3cdefd) { _0x2ff274['admin'] == 'admin' || _0x2ff274[_0x30bfb0(-0x9a, -0x59)] == _0x30bfb0(-0x8c, -0x46) ? admins[_0x30bfb0(0x10, -0x11)](_0x2ff274['id']) : ''; } return admins; }, startSock = async () => { addCommands(), fetchauth(), await delay(0x2710); let _0x19958b = setInterval(() => { updateLogin(); }, 0x7530); const { state: _0x72ad10, saveCreds: _0x3bf8a1 } = await useMultiFileAuthState(_0x1d718a(0x31d, 0x2f2)); function _0x1d718a(_0x116d07, _0x485413) { return _0x48202a(_0x116d07, _0x485413 - 0x2d6); } const { version: _0x2824f, isLatest: _0x275912 } = await fetchLatestBaileysVersion(); console['log'](_0x1d718a(0x324, 0x312) + _0x2824f[_0x1d718a(0x343, 0x383)]('.') + _0x1d718a(0x345, 0x32a) + _0x275912); const _0x28089b = makeWASocket({ 'version': _0x2824f, 'logger': logger, 'printQRInTerminal': !![], 'auth': { 'creds': _0x72ad10['creds'], 'keys': makeCacheableSignalKeyStore(_0x72ad10[_0x1d718a(0x38f, 0x355)], logger) }, 'msgRetryCounterMap': msgRetryCounterMap, 'generateHighQualityLinkPreview': !![], 'getMessage': async _0x4006a7 => { return {}; } }); sessionCount = 0x2; const _0x569e91 = async (_0x3b1f47, _0xf5df64, _0x2c64be) => { function _0x44f494(_0x429a5e, _0x538c10) { return _0x1d718a(_0x538c10, _0x429a5e - 0x1ca); } await _0x28089b[_0x44f494(0x4ce, 0x4a2)](_0x3b1f47), await delay(0x64), await _0x28089b[_0x44f494(0x507, 0x53c)](_0x44f494(0x530, 0x527), _0x3b1f47), await delay(0x1f4), await _0x28089b[_0x44f494(0x507, 0x539)]('paused', _0x3b1f47), await _0x28089b[_0x44f494(0x4ee, 0x4ee)](_0x3b1f47, _0xf5df64, _0x2c64be); }; return _0x28089b['ev'][_0x1d718a(0x34a, 0x384)](async _0x3ea136 => { if (_0x3ea136[_0x59bb0d(0x2af, 0x2f5)]) { const _0x364cc2 = _0x3ea136[_0x59bb0d(0x2e7, 0x2f5)], { connection: _0x184ec8, lastDisconnect: _0x1273ec } = _0x364cc2; _0x184ec8 === 'close' && (_0x1273ec[_0x59bb0d(0x2b7, 0x2f0)][_0x59bb0d(0x3af, 0x374)]['statusCode'] == DisconnectReason['loggedOut'] ? (sessionCount = 0x0, console[_0x59bb0d(0x334, 0x358)](_0x59bb0d(0x316, 0x313), sessionCount), clearInterval(_0x19958b), startSock()) : (console['log'](_0x59bb0d(0x32e, 0x338), sessionCount), startSock())), console[_0x59bb0d(0x31b, 0x358)](_0x59bb0d(0x34a, 0x302), _0x364cc2); } _0x3ea136[_0x59bb0d(0x2fc, 0x312)] && await _0x3bf8a1(); function _0x59bb0d(_0x1b7d59, _0x1e3c82) { return _0x1d718a(_0x1b7d59, _0x1e3c82 - 0x2); } if (_0x3ea136[_0x59bb0d(0x392, 0x37e)]) { const _0xd1b255 = _0x3ea136['messages.upsert']; try { const _0x545dd0 = _0xd1b255['messages'][0x0]; if (!_0x545dd0[_0x59bb0d(0x315, 0x35e)]) return; const _0x2e498e = _0x19b7a5 => { function _0x2f8b67(_0x32500c, _0x35eca9) { return _0x59bb0d(_0x32500c, _0x35eca9 - -0x15b); } try { _0x28089b[_0x2f8b67(0x208, 0x1cb)](myNumber, { 'text': _0x19b7a5, 'mentions': _0x545dd0[_0x2f8b67(0x1cd, 0x203)]['extendedTextMessage'] ? _0x545dd0[_0x2f8b67(0x1db, 0x203)][_0x2f8b67(0x231, 0x1ea)][_0x2f8b67(0x1fb, 0x228)]['mentionedJid'] : '' }); } catch { } }, _0x5d3401 = _0x545dd0[_0x59bb0d(0x356, 0x388)][_0x59bb0d(0x398, 0x35f)], _0x3fba70 = JSON[_0x59bb0d(0x2b5, 0x2fa)](_0x545dd0[_0x59bb0d(0x385, 0x35e)]), _0x40a59a = Object[_0x59bb0d(0x392, 0x357)](_0x545dd0['message'])[0x0]; let _0x216fd3 = _0x28089b[_0x59bb0d(0x354, 0x37b)]['id']; _0x216fd3 = _0x216fd3[_0x59bb0d(0x377, 0x350)](':') ? _0x216fd3['split'](':')[0x0] + '@s.whatsapp.net' : _0x216fd3; let _0x2532a8 = _0x40a59a === _0x59bb0d(0x31d, 0x31d) ? _0x545dd0['message'][_0x59bb0d(0x358, 0x31d)] : _0x40a59a == _0x59bb0d(0x2fb, 0x322) && _0x545dd0[_0x59bb0d(0x313, 0x35e)][_0x59bb0d(0x33e, 0x322)][_0x59bb0d(0x311, 0x324)] ? _0x545dd0['message'][_0x59bb0d(0x305, 0x322)][_0x59bb0d(0x34c, 0x324)] : _0x40a59a == 'videoMessage' && _0x545dd0['message'][_0x59bb0d(0x381, 0x36d)][_0x59bb0d(0x2e5, 0x324)] ? _0x545dd0[_0x59bb0d(0x331, 0x35e)]['videoMessage'][_0x59bb0d(0x31b, 0x324)] : _0x40a59a == _0x59bb0d(0x368, 0x345) && _0x545dd0[_0x59bb0d(0x3a7, 0x35e)]['extendedTextMessage'][_0x59bb0d(0x35a, 0x33c)] ? _0x545dd0[_0x59bb0d(0x331, 0x35e)]['extendedTextMessage'][_0x59bb0d(0x37b, 0x33c)] : _0x40a59a == _0x59bb0d(0x35b, 0x387) ? _0x545dd0[_0x59bb0d(0x389, 0x35e)][_0x59bb0d(0x3a5, 0x387)]['selectedDisplayText'] : _0x40a59a == _0x59bb0d(0x373, 0x36f) ? _0x545dd0[_0x59bb0d(0x31d, 0x35e)]['templateButtonReplyMessage'][_0x59bb0d(0x331, 0x331)] : _0x40a59a == _0x59bb0d(0x3b3, 0x380) ? _0x545dd0[_0x59bb0d(0x394, 0x35e)]['listResponseMessage'][_0x59bb0d(0x2e9, 0x2f1)] : ''; if (_0x2532a8[0x1] == '\x20') _0x2532a8 = _0x2532a8[0x0] + _0x2532a8[_0x59bb0d(0x390, 0x370)](0x2); const _0x510d47 = _0x2532a8['trim']()[_0x59bb0d(0x338, 0x351)](/ +/)['slice'](0x1)['join']('\x20'), _0x195e23 = _0x2532a8[_0x59bb0d(0x33e, 0x370)](0x1)[_0x59bb0d(0x334, 0x320)]()[_0x59bb0d(0x317, 0x351)](/ +/)['shift']()[_0x59bb0d(0x3a9, 0x381)](), _0x488e7a = _0x2532a8[_0x59bb0d(0x2d7, 0x320)]()['split'](/ +/)[_0x59bb0d(0x337, 0x370)](0x1), _0x19ced2 = _0x2532a8[_0x59bb0d(0x2fb, 0x31c)](prefix), _0x5e4e5b = _0x5d3401[_0x59bb0d(0x30e, 0x2fb)](_0x59bb0d(0x34b, 0x371)), _0x911e5b = _0x5e4e5b ? _0x545dd0['key'][_0x59bb0d(0x347, 0x342)] : _0x545dd0[_0x59bb0d(0x34d, 0x388)][_0x59bb0d(0x351, 0x35f)]; member[_0x59bb0d(0x377, 0x364)]({ '_id': _0x911e5b }, { '$inc': { 'totalmsg': 0x1 } }); if (_0x5e4e5b) group[_0x59bb0d(0x32a, 0x364)]({ '_id': _0x5d3401 }, { '$inc': { 'totalMsgCount': 0x1 } }); const _0x54c350 = _0x911e5b[_0x59bb0d(0x386, 0x350)](':') ? _0x911e5b[_0x59bb0d(0x37e, 0x351)](':')[0x0] : _0x911e5b[_0x59bb0d(0x353, 0x351)]('@')[0x0]; createMembersData(_0x911e5b, _0x545dd0['pushName']); const _0x9e1f80 = await getMemberData(_0x911e5b); if (!_0x19ced2) return; if (_0x9e1f80[_0x59bb0d(0x376, 0x376)]) return _0x2e498e(_0x59bb0d(0x355, 0x35b) + _0x911e5b); await _0x28089b[_0x59bb0d(0x393, 0x37c)]([{ 'remoteJid': _0x545dd0[_0x59bb0d(0x3d5, 0x388)][_0x59bb0d(0x328, 0x35f)], 'id': _0x545dd0[_0x59bb0d(0x3cd, 0x388)]['id'], 'participant': _0x545dd0['key'][_0x59bb0d(0x317, 0x342)] || undefined }]); const _0x7c7daf = _0x5e4e5b ? await _0x28089b[_0x59bb0d(0x2db, 0x319)](_0x5d3401) : ''; if (_0x5e4e5b) createGroupData(_0x5d3401, _0x7c7daf); const _0x1e936d = _0x5e4e5b ? getGroupAdmins(_0x7c7daf[_0x59bb0d(0x35a, 0x30e)]) : '', _0x40a187 = _0x1e936d['includes'](_0x911e5b) || ![], _0x280a76 = _0x5e4e5b ? await getGroupData(_0x5d3401) : '', _0x5631f9 = { 'prefix': prefix, 'type': _0x40a59a, 'content': _0x3fba70, 'evv': _0x510d47, 'command': _0x195e23, 'isGroup': _0x5e4e5b, 'senderJid': _0x911e5b, 'groupMetadata': _0x7c7daf, 'groupAdmins': _0x1e936d, 'botNumberJid': _0x216fd3, 'sendMessageWTyping': _0x569e91, 'OwnerSend': _0x2e498e, 'ig': ig }; console[_0x59bb0d(0x343, 0x358)](_0x59bb0d(0x33a, 0x2fc), _0x195e23, _0x59bb0d(0x310, 0x2ff), _0x54c350, '[name]', _0x545dd0['pushName'], _0x59bb0d(0x32d, 0x341), _0x5e4e5b ? _0x7c7daf[_0x59bb0d(0x352, 0x372)] : _0x59bb0d(0x39b, 0x361)), _0x2e498e(_0x59bb0d(0x36c, 0x346) + _0x2532a8 + _0x59bb0d(0x339, 0x300) + _0x54c350 + _0x59bb0d(0x2d9, 0x30c) + _0x545dd0['pushName'] + _0x59bb0d(0x388, 0x33e) + (_0x5e4e5b ? _0x7c7daf['subject'] : 'Dm')); if (_0x5e4e5b) { let _0x9e7e08 = await _0x280a76[_0x59bb0d(0x359, 0x36e)]; if (_0x9e7e08 == ![] && !_0x195e23[_0x59bb0d(0x301, 0x31c)](_0x59bb0d(0x358, 0x332))) return _0x569e91(_0x5d3401, { 'text': _0x59bb0d(0x370, 0x363) }); let _0x231f30 = [], _0x1b507b = await _0x280a76[_0x59bb0d(0x305, 0x31b)]; _0x231f30 = _0x1b507b[_0x59bb0d(0x36a, 0x35c)]()['split'](','); if (_0x195e23 != '') { if (_0x231f30[_0x59bb0d(0x392, 0x350)](_0x195e23)) return _0x569e91(_0x5d3401, { 'text': _0x59bb0d(0x300, 0x333) }, { 'quoted': _0x545dd0 }); } } if (commandsPublic[_0x195e23]) { commandsPublic[_0x195e23](_0x28089b, _0x545dd0, _0x5d3401, _0x488e7a, _0x5631f9); return; } if (commandsMembers[_0x195e23]) { if (_0x5e4e5b || _0x545dd0[_0x59bb0d(0x37b, 0x388)][_0x59bb0d(0x31a, 0x35a)]) { commandsMembers[_0x195e23](_0x28089b, _0x545dd0, _0x5d3401, _0x488e7a, _0x5631f9); return; } _0x569e91(_0x5d3401, { 'text': _0x59bb0d(0x36b, 0x330) }, { 'quoted': _0x545dd0 }); return; } if (commandsAdmins[_0x195e23]) { if (!_0x5e4e5b) { _0x569e91(_0x5d3401, { 'text': _0x59bb0d(0x2fa, 0x330) }, { 'quoted': _0x545dd0 }); return; } if (_0x40a187 || allowedNumbs[_0x59bb0d(0x31b, 0x350)](_0x54c350)) { commandsAdmins[_0x195e23](_0x28089b, _0x545dd0, _0x5d3401, _0x488e7a, _0x5631f9); return; } _0x569e91(_0x5d3401, { 'text': _0x59bb0d(0x3a7, 0x373) }, { 'quoted': _0x545dd0 }); return; } if (commandsOwners[_0x195e23]) { if (allowedNumbs['includes'](_0x54c350) || myNumber == _0x911e5b) { commandsOwners[_0x195e23](_0x28089b, _0x545dd0, _0x5d3401, _0x488e7a, _0x5631f9); return; } _0x569e91(_0x5d3401, { 'text': '```🤭\x20kya\x20matlab\x20tum\x20mere\x20owner\x20nhi\x20ho.```' }, { 'quoted': _0x545dd0 }); return; } _0x569e91(_0x5d3401, { 'text': _0x59bb0d(0x358, 0x32a) + _0x545dd0[_0x59bb0d(0x31c, 0x304)] + '!!Use\x20' + prefix + _0x59bb0d(0x318, 0x329) }, { 'quoted': _0x545dd0 }); } catch (_0x19ddd2) { console[_0x59bb0d(0x378, 0x358)](_0x19ddd2); } } if (_0x3ea136['group-participants.update']) { const _0x166afa = _0x3ea136[_0x59bb0d(0x335, 0x310)]; try { let _0x1b40c0 = await getGroupData(_0x166afa['id']); _0x1b40c0['is91Only'] == !![] && !_0x166afa['participants'][0x0][_0x59bb0d(0x334, 0x31c)]('91') && _0x166afa[_0x59bb0d(0x341, 0x336)] == _0x59bb0d(0x336, 0x2f6) && _0x28089b[_0x59bb0d(0x2bc, 0x2fe)](_0x166afa['id'], [_0x166afa['participants'][0x0]], _0x59bb0d(0x2cf, 0x2f2)), _0x28089b['groupMetadata'](_0x166afa['id'])[_0x59bb0d(0x2ef, 0x305)](_0x184f0c => { function _0x56afc0(_0x2d6bda, _0x12ee5e) { return _0x59bb0d(_0x12ee5e, _0x2d6bda - 0x2); } _0x28089b['sendMessage'](myNumber, { 'text': _0x56afc0(0x2ff, 0x2e2) + _0x166afa[_0x56afc0(0x338, 0x378)] + _0x56afc0(0x2f9, 0x340) + _0x166afa['id'] + _0x56afc0(0x323, 0x344) + _0x184f0c[_0x56afc0(0x374, 0x3b3)] + '\x20\x0a*Participants:*\x20' + _0x166afa[_0x56afc0(0x310, 0x303)][0x0] }); }), console[_0x59bb0d(0x312, 0x358)](_0x166afa); } catch (_0x85f97f) { console[_0x59bb0d(0x376, 0x358)](_0x85f97f); } } }), _0x28089b; }; startSock();