(function (_0x5a759e, _0x20ba4d) { const _0x2b684c = _0x5a759e(); function _0x1aa16f(_0x14ad66, _0x2c355a) { return _0x14f5(_0x2c355a - 0x24a, _0x14ad66); } while (!![]) { try { const _0x557a34 = -parseInt(_0x1aa16f(0x4ec, 0x4be)) / 0x1 + parseInt(_0x1aa16f(0x4f0, 0x4c1)) / 0x2 + parseInt(_0x1aa16f(0x445, 0x42f)) / 0x3 * (-parseInt(_0x1aa16f(0x420, 0x422)) / 0x4) + -parseInt(_0x1aa16f(0x4f0, 0x4a4)) / 0x5 * (parseInt(_0x1aa16f(0x445, 0x444)) / 0x6) + parseInt(_0x1aa16f(0x4da, 0x490)) / 0x7 + parseInt(_0x1aa16f(0x439, 0x47d)) / 0x8 * (-parseInt(_0x1aa16f(0x490, 0x44e)) / 0x9) + -parseInt(_0x1aa16f(0x4ec, 0x4a9)) / 0xa * (-parseInt(_0x1aa16f(0x3e1, 0x429)) / 0xb); if (_0x557a34 === _0x20ba4d) break; else _0x2b684c['push'](_0x2b684c['shift']()); } catch (_0x1e4623) { _0x2b684c['push'](_0x2b684c['shift']()); } } }(_0x1ae7, 0x76901)); const express = require(_0x7e15f8(-0x80, -0xb4)), app = express(); app[_0x7e15f8(-0x79, -0x77)](express['urlencoded']({ 'extended': !![] })); const port = process['env'][_0x7e15f8(-0x59, -0x77)] || 0x1f40; app[_0x7e15f8(-0xe1, -0xad)]('/', (_0x1771c4, _0x45c9c9) => { function _0x466510(_0x44b1af, _0x54c045) { return _0x7e15f8(_0x44b1af - 0x13e, _0x54c045); } _0x45c9c9['send'](_0x466510(0xb1, 0xf5)); }), app[_0x7e15f8(-0x48, -0x91)](port, () => { function _0x4d4c14(_0x3a7dd9, _0xae93fb) { return _0x7e15f8(_0xae93fb - 0x526, _0x3a7dd9); } console[_0x4d4c14(0x520, 0x4d6)](_0x4d4c14(0x51c, 0x4d7)); }); const { default: makeWASocket, delay, DisconnectReason, fetchLatestBaileysVersion, useMultiFileAuthState, makeCacheableSignalKeyStore } = require(_0x7e15f8(-0x54, -0xa)), P = require(_0x7e15f8(-0x6f, -0xad)); let MAIN_LOGGER = P({ 'timestamp': () => _0x7e15f8(-0xd0, -0xb4) + new Date()[_0x7e15f8(-0x85, -0xa2)]() + '\x22' }); const logger = MAIN_LOGGER[_0x7e15f8(-0x61, -0x71)]({}); logger[_0x7e15f8(-0x9f, -0xc7)] = _0x7e15f8(-0x7e, -0x79), MessageRetryMap = {}; const fs = require('fs'), util = require(_0x7e15f8(-0xb3, -0xf9)), readdir = util[_0x7e15f8(-0x5a, -0x46)](fs[_0x7e15f8(-0xd3, -0xcb)]); let commandsPublic = {}, commandsMembers = {}, commandsAdmins = {}, commandsOwners = {}; const addCommands = async () => { let _0x424ace = _0x23f8ea(0x2b, 0x64), _0x217daa = await readdir(_0x424ace); _0x217daa['forEach'](_0x48b29b => { function _0x412711(_0x1af6ad, _0x4592e9) { return _0x23f8ea(_0x4592e9, _0x1af6ad - 0x411); } if (_0x48b29b[_0x412711(0x43f, 0x44f)](_0x412711(0x431, 0x442))) { let { command: _0x3a8c5b } = require(_0x424ace + _0x48b29b), _0x337e30 = _0x3a8c5b(); for (let _0x52d17b of _0x337e30['cmd']) { commandsPublic[_0x52d17b] = _0x337e30['handler']; } } }), _0x424ace = _0x23f8ea(0xa4, 0x59), _0x217daa = await readdir(_0x424ace), _0x217daa['forEach'](_0x52af65 => { function _0x105806(_0x3c4c19, _0x1380ab) { return _0x23f8ea(_0x3c4c19, _0x1380ab - -0x78); } if (_0x52af65['endsWith']('.js')) { let { command: _0x3b5920 } = require(_0x424ace + _0x52af65), _0x29d1a5 = _0x3b5920(); for (let _0x161b01 of _0x29d1a5[_0x105806(0x6b, 0x29)]) { commandsMembers[_0x161b01] = _0x29d1a5['handler']; } } }), _0x424ace = _0x23f8ea(0x4, 0x32), _0x217daa = await readdir(_0x424ace), _0x217daa[_0x23f8ea(0x43, 0x19)](_0x107bb7 => { function _0xad057(_0x2fc13e, _0x5458aa) { return _0x23f8ea(_0x5458aa, _0x2fc13e - -0x17); } if (_0x107bb7[_0xad057(0x17, -0x2f)](_0xad057(0x9, 0x1c))) { let { command: _0x5ddb32 } = require(_0x424ace + _0x107bb7), _0x449078 = _0x5ddb32(); for (let _0x33fed3 of _0x449078['cmd']) { commandsAdmins[_0x33fed3] = _0x449078[_0xad057(0x6c, 0xa7)]; } } }), _0x424ace = _0x23f8ea(0x9b, 0x58), _0x217daa = await readdir(_0x424ace), _0x217daa[_0x23f8ea(-0x2b, 0x19)](_0x4ebad7 => { function _0x4d4820(_0x3b63c1, _0x150882) { return _0x23f8ea(_0x150882, _0x3b63c1 - 0x35d); } if (_0x4ebad7[_0x4d4820(0x38b, 0x3af)]('.js')) { let { command: _0x175ff } = require(_0x424ace + _0x4ebad7), _0x6648f = _0x175ff(); for (let _0x52abdd of _0x6648f[_0x4d4820(0x3fe, 0x416)]) { commandsOwners[_0x52abdd] = _0x6648f['handler']; } } }), _0x424ace = './'; function _0x23f8ea(_0x47293d, _0x3d3e3a) { return _0x7e15f8(_0x3d3e3a - 0xe8, _0x47293d); } _0x217daa = await readdir(_0x424ace), _0x217daa[_0x23f8ea(-0x23, 0x19)](_0x43775e => { function _0x4f24da(_0x92e266, _0x253ec9) { return _0x23f8ea(_0x92e266, _0x253ec9 - 0x36b); } (_0x43775e[_0x4f24da(0x383, 0x399)](_0x4f24da(0x32d, 0x37d)) || _0x43775e[_0x4f24da(0x360, 0x399)](_0x4f24da(0x3bc, 0x370)) || _0x43775e[_0x4f24da(0x378, 0x399)](_0x4f24da(0x3a2, 0x377)) || _0x43775e['endsWith'](_0x4f24da(0x33a, 0x38a)) || _0x43775e[_0x4f24da(0x3a4, 0x399)](_0x4f24da(0x3c2, 0x409)) || _0x43775e[_0x4f24da(0x398, 0x399)]('.png') || _0x43775e['endsWith'](_0x4f24da(0x3d0, 0x410))) && fs['unlinkSync'](_0x424ace + _0x43775e); }); }, mdClient = require(_0x7e15f8(-0x8e, -0x4a)); mdClient[_0x7e15f8(-0xa8, -0xb5)](); let sessionCount = 0x1; function fetchauth() { function _0x41396c(_0x5a2eaf, _0x45daec) { return _0x7e15f8(_0x5a2eaf - 0x42d, _0x45daec); } try { !fs[_0x41396c(0x36f, 0x3a1)](_0x41396c(0x384, 0x3c8)) && fs[_0x41396c(0x396, 0x34a)](_0x41396c(0x384, 0x38d)), mdClient[_0x41396c(0x385, 0x37c)](async _0x9016e9 => { function _0x54bccf(_0x37f48f, _0x1ad759) { return _0x41396c(_0x1ad759 - 0x1b6, _0x37f48f); } if (_0x9016e9) throw _0x9016e9; let _0x575064 = mdClient['db'](_0x54bccf(0x5be, 0x59f))['collection']('AuthTable'); await _0x575064[_0x54bccf(0x53d, 0x523)]({ '_id': _0x54bccf(0x5c4, 0x57f) })[_0x54bccf(0x5a4, 0x557)](_0x50220e => { function _0x5a3be3(_0x44fadd, _0x21060c) { return _0x54bccf(_0x44fadd, _0x21060c - -0x2dd); } _0x50220e == null && _0x575064[_0x5a3be3(0x214, 0x239)]({ '_id': _0x5a3be3(0x2ee, 0x2a2), 'sessionAuth': '' }); }), _0x575064['find']({ '_id': _0x54bccf(0x5a1, 0x57f) })['toArray'](function (_0x5071d4, _0x404148) { function _0x41dd1b(_0x2cfaa9, _0x1b9267) { return _0x54bccf(_0x1b9267, _0x2cfaa9 - -0x5f5); } if (_0x5071d4) throw _0x5071d4; let _0x2fa752 = _0x404148[0x0][_0x41dd1b(-0xe3, -0xc4)]; if (_0x2fa752 != '') { _0x2fa752 = JSON[_0x41dd1b(-0xe7, -0xbd)](_0x2fa752), _0x2fa752 = JSON[_0x41dd1b(-0xd3, -0x10c)](_0x2fa752); if (sessionCount == 0x1) fs['writeFileSync'](_0x41dd1b(-0xa6, -0xc6), _0x2fa752); else sessionCount == 0x0 ? fs['rmSync'](_0x41dd1b(-0xa6, -0x6e), { 'recursive': !![], 'force': !![] }) : console[_0x41dd1b(-0x62, -0x37)](_0x41dd1b(-0xa7, -0xb2)); } else console[_0x41dd1b(-0x62, -0x8f)](_0x41dd1b(-0x7f, -0xc3)); }); }), console[_0x41396c(0x3dd, 0x392)](_0x41396c(0x38f, 0x3be)); } catch (_0x726647) { console[_0x41396c(0x3db, 0x3a3)]('Local\x20file\x20writing\x20errors\x20:', _0x726647); } } async function updateLogin() { let _0x18f878 = mdClient['db']('MyBotDataDB')[_0x47a7b4(0x336, 0x382)](_0x47a7b4(0x2d4, 0x322)); function _0x47a7b4(_0xe77cd9, _0xd7ac66) { return _0x7e15f8(_0xe77cd9 - 0x381, _0xd7ac66); } try { let _0x53ecca = fs[_0x47a7b4(0x309, 0x2d8)](_0x47a7b4(0x2ed, 0x33a)); _0x53ecca = JSON['parse'](_0x53ecca), _0x53ecca = JSON[_0x47a7b4(0x2c0, 0x2c5)](_0x53ecca), _0x18f878[_0x47a7b4(0x313, 0x34a)]({ '_id': _0x47a7b4(0x31d, 0x315) }, { '$set': { 'sessionAuth': _0x53ecca } }); } catch (_0x17329b) { console[_0x47a7b4(0x331, 0x34c)]('Db\x20updating\x20error\x20:\x20', _0x17329b); } } require(_0x7e15f8(-0x87, -0xd5))['config'](); const { createMembersData, getMemberData, member } = require(_0x7e15f8(-0x72, -0x93)), { createGroupData, getGroupData, group } = require(_0x7e15f8(-0xb0, -0xe8)); function _0x7e15f8(_0x3faa74, _0x312068) { return _0x14f5(_0x3faa74 - -0x2bd, _0x312068); } const myNumber = process[_0x7e15f8(-0xd7, -0xb8)][_0x7e15f8(-0x4c, -0x10)] + _0x7e15f8(-0xc2, -0xc4), INSTA_API_KEY = process[_0x7e15f8(-0xd7, -0xa5)][_0x7e15f8(-0x5d, -0xa7)], { igApi, getSessionId } = require(_0x7e15f8(-0x6c, -0x4d)), { Collection } = require(_0x7e15f8(-0xcb, -0xfa)); let ig = new igApi(INSTA_API_KEY); ig['setCookie'](INSTA_API_KEY); const prefix = '' + process['env'][_0x7e15f8(-0xce, -0x120)] || '-', allowedNumbs = [_0x7e15f8(-0x81, -0xa2), '' + process[_0x7e15f8(-0xd7, -0xcf)][_0x7e15f8(-0x4c, -0x8)], '' + process[_0x7e15f8(-0xd7, -0x110)][_0x7e15f8(-0x86, -0x78)]], getGroupAdmins = _0x55aed3 => { function _0x111f8d(_0x47ada8, _0x595b68) { return _0x7e15f8(_0x595b68 - 0x56a, _0x47ada8); } admins = []; for (let _0x2c7529 of _0x55aed3) { _0x2c7529['admin'] == 'admin' || _0x2c7529[_0x111f8d(0x4dc, 0x504)] == _0x111f8d(0x4f7, 0x508) ? admins['push'](_0x2c7529['id']) : ''; } return admins; }, startSock = async () => { addCommands(), fetchauth(), await delay(0x2710); let _0x21fc2c = setInterval(() => { updateLogin(); }, 0x7530); const { state: _0x2494b6, saveCreds: _0x27a207 } = await useMultiFileAuthState(_0x54f626(0x34b, 0x33b)); function _0x54f626(_0x1d2d4d, _0x14e129) { return _0x7e15f8(_0x1d2d4d - 0x3be, _0x14e129); } const { version: _0x97c4db, isLatest: _0x5484d7 } = await fetchLatestBaileysVersion(); console[_0x54f626(0x36e, 0x38a)](_0x54f626(0x357, 0x367) + _0x97c4db['join']('.') + _0x54f626(0x34d, 0x327) + _0x5484d7); const _0x24110a = makeWASocket({ 'version': _0x97c4db, 'logger': logger, 'printQRInTerminal': !![], 'auth': { 'creds': _0x2494b6['creds'], 'keys': makeCacheableSignalKeyStore(_0x2494b6[_0x54f626(0x30a, 0x2ce)], logger) }, 'generateHighQualityLinkPreview': !![], 'getMessage': async _0x3fa496 => { return {}; } }); sessionCount = 0x2; const _0x2ea42b = async (_0x28eaa9, _0x3c34e7, _0x39c697) => { await _0x24110a['presenceSubscribe'](_0x28eaa9), await delay(0x64), await _0x24110a[_0x4b061b(0x5aa, 0x5e8)](_0x4b061b(0x614, 0x5f3), _0x28eaa9); function _0x4b061b(_0x402902, _0x57e87d) { return _0x54f626(_0x402902 - 0x2a9, _0x57e87d); } await delay(0x1f4), await _0x24110a['sendPresenceUpdate']('paused', _0x28eaa9), await _0x24110a['sendMessage'](_0x28eaa9, _0x3c34e7, _0x39c697); }; return _0x24110a['ev'][_0x54f626(0x2fa, 0x318)](async _0x422253 => { if (_0x422253[_0x51c4f5(0x52f, 0x4eb)]) { const _0x55a1e4 = _0x422253['connection.update'], { connection: _0x5c53fb, lastDisconnect: _0x436512 } = _0x55a1e4; if (_0x5c53fb === _0x51c4f5(0x4ff, 0x51a)) { if (_0x436512[_0x51c4f5(0x57f, 0x561)][_0x51c4f5(0x540, 0x508)][_0x51c4f5(0x584, 0x580)] == DisconnectReason[_0x51c4f5(0x583, 0x540)]) { try { path = './baileys_auth_info/', filenames = await readdir(path), filenames[_0x51c4f5(0x502, 0x4d6)](_0x3ab514 => { function _0x4fff93(_0x52936c, _0x121ab9) { return _0x51c4f5(_0x121ab9 - -0xdf, _0x52936c); } fs[_0x4fff93(0x453, 0x49a)](path + _0x3ab514); }); } catch { } sessionCount = 0x0, console[_0x51c4f5(0x581, 0x53b)]('sessionCount\x20logout\x20time', sessionCount), clearInterval(_0x21fc2c), startSock(); } else console[_0x51c4f5(0x581, 0x539)](_0x51c4f5(0x555, 0x51d), sessionCount), startSock(); } console['log'](_0x51c4f5(0x4f6, 0x524), _0x55a1e4); } _0x422253['creds.update'] && await _0x27a207(); if (_0x422253['messages.upsert']) { const _0x3d9f64 = _0x422253[_0x51c4f5(0x505, 0x516)]; try { const _0x205633 = _0x3d9f64[_0x51c4f5(0x567, 0x51f)][0x0]; if (!_0x205633[_0x51c4f5(0x538, 0x531)]) return; const _0x47acc3 = _0x30ba7f => { function _0x1669b2(_0x5510d3, _0x3dfbc8) { return _0x51c4f5(_0x3dfbc8 - -0x376, _0x5510d3); } try { _0x24110a[_0x1669b2(0x211, 0x1c0)](myNumber, { 'text': _0x30ba7f, 'mentions': _0x205633['message'][_0x1669b2(0x15a, 0x1a4)] ? _0x205633['message'][_0x1669b2(0x1e3, 0x1a4)][_0x1669b2(0x16f, 0x179)][_0x1669b2(0x1fb, 0x1ff)] : '' }); } catch { } }, _0x6ac423 = _0x205633['key'][_0x51c4f5(0x512, 0x4d5)], _0x47956f = JSON[_0x51c4f5(0x510, 0x4da)](_0x205633['message']), _0x415865 = Object[_0x51c4f5(0x51d, 0x4ce)](_0x205633[_0x51c4f5(0x538, 0x555)])[0x0]; let _0x2d1617 = _0x24110a[_0x51c4f5(0x4f7, 0x535)]['id']; _0x2d1617 = _0x2d1617[_0x51c4f5(0x515, 0x503)](':') ? _0x2d1617[_0x51c4f5(0x566, 0x587)](':')[0x0] + _0x51c4f5(0x50f, 0x531) : _0x2d1617; let _0x211132 = _0x415865 === _0x51c4f5(0x50b, 0x536) ? _0x205633[_0x51c4f5(0x538, 0x54d)][_0x51c4f5(0x50b, 0x4ec)] : _0x415865 == 'imageMessage' && _0x205633['message'][_0x51c4f5(0x534, 0x4f8)][_0x51c4f5(0x572, 0x545)] ? _0x205633[_0x51c4f5(0x538, 0x58a)][_0x51c4f5(0x534, 0x4e2)][_0x51c4f5(0x572, 0x529)] : _0x415865 == _0x51c4f5(0x520, 0x4db) && _0x205633[_0x51c4f5(0x538, 0x543)][_0x51c4f5(0x520, 0x524)][_0x51c4f5(0x572, 0x56c)] ? _0x205633[_0x51c4f5(0x538, 0x4ea)][_0x51c4f5(0x520, 0x536)]['caption'] : _0x415865 == _0x51c4f5(0x51a, 0x56b) && _0x205633[_0x51c4f5(0x538, 0x527)][_0x51c4f5(0x51a, 0x50b)][_0x51c4f5(0x55d, 0x53a)] ? _0x205633[_0x51c4f5(0x538, 0x52f)][_0x51c4f5(0x51a, 0x550)][_0x51c4f5(0x55d, 0x597)] : _0x415865 == _0x51c4f5(0x569, 0x553) ? _0x205633['message'][_0x51c4f5(0x569, 0x551)][_0x51c4f5(0x525, 0x548)] : _0x415865 == _0x51c4f5(0x552, 0x504) ? _0x205633['message'][_0x51c4f5(0x552, 0x502)][_0x51c4f5(0x525, 0x4de)] : _0x415865 == _0x51c4f5(0x576, 0x52f) ? _0x205633[_0x51c4f5(0x538, 0x505)][_0x51c4f5(0x576, 0x59d)][_0x51c4f5(0x523, 0x524)] : ''; if (_0x211132[0x1] == '\x20') _0x211132 = _0x211132[0x0] + _0x211132[_0x51c4f5(0x52e, 0x571)](0x2); const _0x2fe5d6 = _0x211132[_0x51c4f5(0x53b, 0x555)]()['split'](/ +/)['slice'](0x1)['join']('\x20'), _0x105f49 = _0x211132[_0x51c4f5(0x52e, 0x4eb)](0x1)[_0x51c4f5(0x53b, 0x51e)]()[_0x51c4f5(0x566, 0x57d)](/ +/)[_0x51c4f5(0x57b, 0x5a0)]()[_0x51c4f5(0x531, 0x564)](), _0x278077 = _0x211132['trim']()[_0x51c4f5(0x566, 0x53b)](/ +/)[_0x51c4f5(0x52e, 0x57d)](0x1), _0x2ab169 = _0x211132['startsWith'](prefix), _0x33bd60 = _0x6ac423[_0x51c4f5(0x517, 0x4d4)](_0x51c4f5(0x530, 0x50e)), _0x3da4d5 = _0x33bd60 ? _0x205633[_0x51c4f5(0x571, 0x547)][_0x51c4f5(0x55b, 0x549)] : _0x205633[_0x51c4f5(0x571, 0x554)][_0x51c4f5(0x512, 0x51b)], _0x5c1a64 = _0x205633[_0x51c4f5(0x571, 0x5ac)][_0x51c4f5(0x4f8, 0x516)] ? _0x2d1617 : _0x3da4d5, _0x58056e = _0x205633[_0x51c4f5(0x571, 0x582)]['fromMe'] ? _0x24110a[_0x51c4f5(0x4f7, 0x501)][_0x51c4f5(0x557, 0x579)] : _0x205633[_0x51c4f5(0x52b, 0x4f6)]; member['updateOne']({ '_id': _0x5c1a64 }, { '$inc': { 'totalmsg': 0x1 } }, { '$set': { 'username': _0x58056e } }), createMembersData(_0x5c1a64, _0x58056e); _0x33bd60 && (group[_0x51c4f5(0x563, 0x52a)]({ '_id': _0x6ac423, 'members.id': _0x5c1a64 }, { '$inc': { 'members.$.count': 0x1 } }, { '$set': { 'members.$.name': _0x58056e } })[_0x51c4f5(0x545, 0x548)](_0x610220 => { function _0x5ec0f6(_0x491962, _0x211928) { return _0x51c4f5(_0x211928 - -0x5f0, _0x491962); } _0x610220[_0x5ec0f6(-0x137, -0xfc)] == 0x0 && group[_0x5ec0f6(-0x73, -0x8d)]({ '_id': _0x6ac423 }, { '$push': { 'members': { 'id': _0x5c1a64, 'name': _0x58056e, 'count': 0x1 } } }); }), group[_0x51c4f5(0x563, 0x522)]({ '_id': _0x6ac423 }, { '$inc': { 'totalMsgCount': 0x1 } })); const _0x48e396 = _0x3da4d5[_0x51c4f5(0x515, 0x53f)](':') ? _0x3da4d5[_0x51c4f5(0x566, 0x5aa)](':')[0x0] : _0x3da4d5[_0x51c4f5(0x566, 0x522)]('@')[0x0], _0x5b1c6c = await getMemberData(_0x3da4d5); (_0x211132[_0x51c4f5(0x52a, 0x4f2)](_0x51c4f5(0x554, 0x53c)) || _0x211132[_0x51c4f5(0x52a, 0x51b)](_0x51c4f5(0x52c, 0x52b))) && (commandsPublic[_0x51c4f5(0x554, 0x594)](_0x24110a, _0x205633, _0x6ac423, _0x278077, { 'evv': _0x2fe5d6, 'sendMessageWTyping': _0x2ea42b, 'isGroup': _0x33bd60 }), _0x47acc3('[cmd]\x20' + _0x211132 + _0x51c4f5(0x526, 0x555) + _0x48e396 + _0x51c4f5(0x548, 0x574) + _0x205633['pushName'] + _0x51c4f5(0x527, 0x557) + (_0x33bd60 ? _0x55a956[_0x51c4f5(0x568, 0x591)] : 'Dm'))); if (!_0x2ab169) return; if (_0x5b1c6c[_0x51c4f5(0x52d, 0x4dc)]) return _0x47acc3(_0x51c4f5(0x4f2, 0x525) + _0x3da4d5); await _0x24110a[_0x51c4f5(0x55c, 0x578)]([{ 'remoteJid': _0x205633[_0x51c4f5(0x571, 0x552)][_0x51c4f5(0x512, 0x543)], 'id': _0x205633[_0x51c4f5(0x571, 0x558)]['id'], 'participant': _0x205633[_0x51c4f5(0x571, 0x520)]['participant'] || undefined }]); const _0x55a956 = _0x33bd60 ? await _0x24110a[_0x51c4f5(0x53e, 0x589)](_0x6ac423) : ''; if (_0x33bd60) createGroupData(_0x6ac423, _0x55a956); const _0x1d9caa = _0x33bd60 ? getGroupAdmins(_0x55a956['participants']) : '', _0x593263 = _0x1d9caa['includes'](_0x3da4d5) || ![], _0x45ebf7 = _0x33bd60 ? await getGroupData(_0x6ac423) : '', _0x69edfa = { 'prefix': prefix, 'type': _0x415865, 'content': _0x47956f, 'evv': _0x2fe5d6, 'command': _0x105f49, 'isGroup': _0x33bd60, 'senderJid': _0x3da4d5, 'groupMetadata': _0x55a956, 'groupAdmins': _0x1d9caa, 'botNumberJid': _0x2d1617, 'sendMessageWTyping': _0x2ea42b, 'OwnerSend': _0x47acc3, 'ig': ig }; console[_0x51c4f5(0x581, 0x5ae)](_0x51c4f5(0x549, 0x57e), _0x105f49, _0x51c4f5(0x50c, 0x507), _0x48e396, _0x51c4f5(0x507, 0x4e9), _0x205633[_0x51c4f5(0x52b, 0x4e9)], _0x51c4f5(0x51c, 0x51d), _0x33bd60 ? _0x55a956['subject'] : 'Directs'), _0x47acc3('[cmd]\x20' + _0x211132 + '\x20[by]\x20' + _0x48e396 + _0x51c4f5(0x548, 0x52d) + _0x205633[_0x51c4f5(0x52b, 0x551)] + _0x51c4f5(0x527, 0x530) + (_0x33bd60 ? _0x55a956[_0x51c4f5(0x568, 0x518)] : 'Dm')); if (_0x33bd60) { let _0x1cf561 = await _0x45ebf7[_0x51c4f5(0x4ed, 0x4fd)]; if (_0x1cf561 == ![] && !(_0x105f49[_0x51c4f5(0x52a, 0x52f)](_0x51c4f5(0x556, 0x526)) || _0x105f49[_0x51c4f5(0x52a, 0x53b)](_0x51c4f5(0x57a, 0x59f)))) return _0x2ea42b(_0x6ac423, { 'text': _0x51c4f5(0x54e, 0x590) + prefix + _0x51c4f5(0x57a, 0x5a2) }); let _0x272893 = [], _0x310e44 = await _0x45ebf7[_0x51c4f5(0x57c, 0x5a9)]; _0x272893 = _0x310e44[_0x51c4f5(0x516, 0x4e6)]()[_0x51c4f5(0x566, 0x5a3)](','); if (_0x105f49 != '') { if (_0x272893[_0x51c4f5(0x515, 0x51a)](_0x105f49)) return _0x2ea42b(_0x6ac423, { 'text': _0x51c4f5(0x4f1, 0x542) }, { 'quoted': _0x205633 }); } } if (commandsPublic[_0x105f49]) { commandsPublic[_0x105f49](_0x24110a, _0x205633, _0x6ac423, _0x278077, _0x69edfa); return; } if (commandsMembers[_0x105f49]) { if (_0x33bd60 || _0x205633[_0x51c4f5(0x571, 0x562)][_0x51c4f5(0x4f8, 0x4ea)]) { commandsMembers[_0x105f49](_0x24110a, _0x205633, _0x6ac423, _0x278077, _0x69edfa); return; } _0x2ea42b(_0x6ac423, { 'text': _0x51c4f5(0x58c, 0x5b0) }, { 'quoted': _0x205633 }); return; } if (commandsAdmins[_0x105f49]) { if (!_0x33bd60) { _0x2ea42b(_0x6ac423, { 'text': '```❌\x20Group\x20command\x20only!```' }, { 'quoted': _0x205633 }); return; } if (_0x593263 || allowedNumbs[_0x51c4f5(0x515, 0x500)](_0x48e396)) { commandsAdmins[_0x105f49](_0x24110a, _0x205633, _0x6ac423, _0x278077, _0x69edfa); return; } _0x2ea42b(_0x6ac423, { 'text': _0x51c4f5(0x537, 0x4e7) }, { 'quoted': _0x205633 }); return; } if (commandsOwners[_0x105f49]) { if (allowedNumbs[_0x51c4f5(0x515, 0x539)](_0x48e396) || myNumber == _0x3da4d5) { commandsOwners[_0x105f49](_0x24110a, _0x205633, _0x6ac423, _0x278077, _0x69edfa); return; } _0x2ea42b(_0x6ac423, { 'text': _0x51c4f5(0x51f, 0x4f7) }, { 'quoted': _0x205633 }); return; } _0x2ea42b(_0x6ac423, { 'text': _0x51c4f5(0x561, 0x55f) + _0x205633['pushName'] + _0x51c4f5(0x53f, 0x4fa) + prefix + _0x51c4f5(0x539, 0x57b) }, { 'quoted': _0x205633 }); } catch (_0x2e07cc) { console[_0x51c4f5(0x581, 0x5a1)](_0x2e07cc); } } function _0x51c4f5(_0x3a3b08, _0x30d832) { return _0x54f626(_0x3a3b08 - 0x213, _0x30d832); } if (_0x422253[_0x51c4f5(0x54f, 0x52d)]) { const _0x382a0c = _0x422253[_0x51c4f5(0x54f, 0x54f)]; try { let _0x182a89 = await getGroupData(_0x382a0c['id']); _0x382a0c['action'] == _0x51c4f5(0x522, 0x560) && (_0x182a89[_0x51c4f5(0x535, 0x580)] != '' && _0x2ea42b(_0x382a0c['id'], { 'text': _0x51c4f5(0x4eb, 0x4ea) + _0x382a0c[_0x51c4f5(0x519, 0x53a)][0x0][_0x51c4f5(0x566, 0x540)]('@')[0x0] + '\x20,\x20' + _0x182a89[_0x51c4f5(0x535, 0x502)], 'mentions': _0x382a0c[_0x51c4f5(0x519, 0x50b)] }), _0x182a89['is91Only'] == !![] && !_0x382a0c[_0x51c4f5(0x519, 0x54d)][0x0][_0x51c4f5(0x52a, 0x535)]('91') && _0x24110a[_0x51c4f5(0x50a, 0x4f7)](_0x382a0c['id'], [_0x382a0c[_0x51c4f5(0x519, 0x4d1)][0x0]], 'remove')), _0x24110a[_0x51c4f5(0x53e, 0x524)](_0x382a0c['id'])[_0x51c4f5(0x545, 0x527)](_0x1cf8ba => { function _0x2aaf2a(_0x3bad9c, _0x28b66f) { return _0x51c4f5(_0x28b66f - -0x99, _0x3bad9c); } _0x24110a[_0x2aaf2a(0x4da, 0x49d)](myNumber, { 'text': _0x2aaf2a(0x486, 0x4ad) + _0x382a0c['action'] + '\x20\x0a*Group:*\x20' + _0x382a0c['id'] + _0x2aaf2a(0x52d, 0x4e7) + _0x1cf8ba[_0x2aaf2a(0x49a, 0x4cf)] + _0x2aaf2a(0x4a8, 0x464) + _0x382a0c['participants'][0x0] }); }), console[_0x51c4f5(0x581, 0x568)](_0x382a0c); } catch (_0x55acdf) { console[_0x51c4f5(0x581, 0x539)](_0x55acdf); } } }), _0x24110a; }; function _0x14f5(_0x141f36, _0xeac5b5) { const _0x1ae761 = _0x1ae7(); return _0x14f5 = function (_0x14f521, _0x17358a) { _0x14f521 = _0x14f521 - 0x1d7; let _0x2b5a4b = _0x1ae761[_0x14f521]; return _0x2b5a4b; }, _0x14f5(_0x141f36, _0xeac5b5); } function _0x1ae7() { const _0x127d00 = ['help\x20```', 'mkdirSync', 'trim', 'Creds\x20Already\x20there.', 'baileys_auth_info/creds.json', 'groupMetadata', '\x20!!Use\x20', 'output', './commands/owner/', './commands/group/members/', './mongodb', 'Bot\x20is\x20running..\x20:)', 'then', '*Action:*\x20', '2060072RdFBwH', '\x20[name]\x20', '[COMMAND]', 'dotenv', 'botNumber', 'toJSON', './commands/public/', '```By\x20Default\x20Bot\x20is\x20Off\x20in\x20this\x20group.\x0aAsk\x20the\x20Owner\x20to\x20activate.\x0a\x0aUse\x20```', 'group-participants.update', '918318585418', 'express', 'templateButtonReplyMessage', 'silent', 'eva', 'Connection\x20closed.\x20You\x20are\x20logged\x20out.', 'group', 'name', 'use', 'readFileSync', '6037017XzbQIL', 'participant', 'readMessages', 'text', 'baileys_auth_info', './mongo-DB/membersDataDb', ',\x20isLatest:\x20', '```', 'pino', 'updateOne', 'Session\x20Auth\x20Empty', 'insta-fetcher', 'split', 'messages', 'subject', 'buttonsResponseMessage', 'using\x20WA\x20v', 'admin', 'handler', 'auth', '3233965WsJFSV', 'superadmin', 'child', 'key', 'caption', '386530GHiceX', 'INSTA_API_KEY', 'mentionedJid', 'listResponseMessage', 'promisify', 'PORT', 'unlinkSync', 'dev', 'shift', 'cmdBlocked', '@adiwajshing/baileys', 'composing', 'error', '\x20\x0a*Grp\x20Name:*\x20', 'log', '\x0aWeb-server\x20running!\x0a', 'loggedOut', 'statusCode', 'myNumber', 'collection', '.jpg', '298777cZhEpw', 'listen', 'cmd', '1723670VpejMq', '```❌\x20Group\x20command\x20only!```', 'MyBotDataDB', '.gif', 'Welcome\x20@', '69492fiCbdB', 'isBotOn', '.jpeg', 'contextInfo', 'get', 'Command\x20blocked\x20for\x20this\x20group.', 'User\x20Blocked\x20:\x20', '176LEBKBv', 'matchedCount', '.mp3', 'connection\x20update', 'user', 'fromMe', '24MSbEBv', 'env', '.webp', 'parse', '\x20\x0a*Participants:*\x20', 'readdir', 'close', 'sessionAuth', ',\x22time\x22:\x22', 'forEach', 'PREFIX', 'insertOne', 'messages.upsert', 'mongodb', '[name]', '.mp4', '.js', 'groupParticipantsUpdate', 'conversation', '[FROM]', 'process', '6KCEwPQ', '@s.whatsapp.net', 'stringify', 'findOne', 'remoteJid', 'existsSync', 'sendPresenceUpdate', 'includes', 'toString', 'endsWith', '27JBpjJU', 'participants', 'extendedTextMessage', './commands/group/admins/', '[IN]', 'keys', 'util', '```🤭\x20kya\x20matlab\x20tum\x20mere\x20owner\x20nhi\x20ho.```', 'videoMessage', './mongo-DB/groupDataDb', 'add', 'title', 'AuthTable', 'selectedDisplayText', '\x20[by]\x20', '\x20[IN]\x20', './baileys_auth_info', 'connect', 'startsWith', 'pushName', 'Eva', 'isBlock', 'slice', 'connection.update', '@g.us', 'toLowerCase', 'level', 'Local\x20file\x20written', 'imageMessage', 'welcome', 'sendMessage', '```🤭\x20kya\x20matlab\x20tum\x20admin\x20nhi\x20ho.```', 'message']; _0x1ae7 = function () { return _0x127d00; }; return _0x1ae7(); } startSock();