const _0x57f469 = _0x348b; (function (_0x438aae, _0x44c1d2) { const _0xa77e69 = _0x348b, _0xf50391 = _0x438aae(); while (!![]) { try { const _0x27a740 = -parseInt(_0xa77e69(0xeb)) / 0x1 + -parseInt(_0xa77e69(0xbb)) / 0x2 * (parseInt(_0xa77e69(0x87)) / 0x3) + parseInt(_0xa77e69(0xf7)) / 0x4 * (parseInt(_0xa77e69(0x77)) / 0x5) + parseInt(_0xa77e69(0xe2)) / 0x6 * (parseInt(_0xa77e69(0xdd)) / 0x7) + parseInt(_0xa77e69(0xbe)) / 0x8 * (-parseInt(_0xa77e69(0x8d)) / 0x9) + -parseInt(_0xa77e69(0xea)) / 0xa + -parseInt(_0xa77e69(0x83)) / 0xb * (-parseInt(_0xa77e69(0xc8)) / 0xc); if (_0x27a740 === _0x44c1d2) break; else _0xf50391['push'](_0xf50391['shift']()); } catch (_0x544693) { _0xf50391['push'](_0xf50391['shift']()); } } }(_0x1f48, 0x573a5)); const _0x390f61 = (function () { let _0x45da38 = !![]; return function (_0x5460ba, _0x5a2db4) { const _0x515d59 = _0x45da38 ? function () { if (_0x5a2db4) { const _0x21d177 = _0x5a2db4['apply'](_0x5460ba, arguments); return _0x5a2db4 = null, _0x21d177; } } : function () { }; return _0x45da38 = ![], _0x515d59; }; }()), _0x1a0213 = _0x390f61(this, function () { const _0xace2b3 = _0x348b; return _0x1a0213['toString']()[_0xace2b3(0x69)](_0xace2b3(0xe4))['toString']()[_0xace2b3(0x79)](_0x1a0213)[_0xace2b3(0x69)](_0xace2b3(0xe4)); }); _0x1a0213(); const _0x35d9fb = (function () { let _0x2bf22b = !![]; return function (_0x2265f1, _0x3f09ba) { const _0x2588f7 = _0x2bf22b ? function () { if (_0x3f09ba) { const _0x4c1ff5 = _0x3f09ba['apply'](_0x2265f1, arguments); return _0x3f09ba = null, _0x4c1ff5; } } : function () { }; return _0x2bf22b = ![], _0x2588f7; }; }()), _0x504295 = _0x35d9fb(this, function () { const _0x29e12a = _0x348b, _0x18fa87 = function () { const _0xdb09f5 = _0x348b; let _0x4722d3; try { _0x4722d3 = Function(_0xdb09f5(0x100) + _0xdb09f5(0x80) + ');')(); } catch (_0x1f9acf) { _0x4722d3 = window; } return _0x4722d3; }, _0x2bc074 = _0x18fa87(), _0x1c2365 = _0x2bc074['console'] = _0x2bc074[_0x29e12a(0xed)] || {}, _0x4426d4 = [_0x29e12a(0x6b), _0x29e12a(0x85), _0x29e12a(0xd1), _0x29e12a(0xd0), _0x29e12a(0xad), 'table', 'trace']; for (let _0x2deb1e = 0x0; _0x2deb1e < _0x4426d4[_0x29e12a(0xe9)]; _0x2deb1e++) { const _0x22d11c = _0x35d9fb[_0x29e12a(0x79)][_0x29e12a(0xc7)][_0x29e12a(0xe6)](_0x35d9fb), _0x343a72 = _0x4426d4[_0x2deb1e], _0x17c269 = _0x1c2365[_0x343a72] || _0x22d11c; _0x22d11c[_0x29e12a(0xa9)] = _0x35d9fb[_0x29e12a(0xe6)](_0x35d9fb), _0x22d11c[_0x29e12a(0xd9)] = _0x17c269[_0x29e12a(0xd9)]['bind'](_0x17c269), _0x1c2365[_0x343a72] = _0x22d11c; } }); _0x504295(); const express = require(_0x57f469(0x7d)), app = express(); app[_0x57f469(0x8e)](express['urlencoded']({ 'extended': !![] })); const port = process['env'][_0x57f469(0xa1)] || 0x1f40; app[_0x57f469(0x7c)]('/', (_0x58ac47, _0x40c432) => { const _0x5b89bd = _0x57f469; _0x40c432['send'](_0x5b89bd(0xab)); }), app[_0x57f469(0x75)](port, () => { const _0x1f042b = _0x57f469; console[_0x1f042b(0x6b)]('\x0aWeb-server\x20running!\x0a'); }); const { default: makeWASocket, delay, DisconnectReason, fetchLatestBaileysVersion, MessageRetryMap, useMultiFileAuthState } = require('@adiwajshing/baileys'), P = require(_0x57f469(0x92)); let MAIN_LOGGER = P({ 'timestamp': () => ',\x22time\x22:\x22' + new Date()[_0x57f469(0xb2)]() + '\x22' }); const logger = MAIN_LOGGER['child']({}); logger[_0x57f469(0xc2)] = _0x57f469(0x85), msgRetryCounterMap = MessageRetryMap; const fs = require('fs'), util = require(_0x57f469(0xcd)), readdir = util['promisify'](fs['readdir']); let commandsPublic = {}, commandsMembers = {}, commandsAdmins = {}, commandsOwners = {}; const addCommands = async () => { const _0x4c9ea1 = _0x57f469; let _0x1dd6a2 = _0x4c9ea1(0xc3), _0x9597be = await readdir(_0x1dd6a2); _0x9597be[_0x4c9ea1(0xef)](_0x5395a5 => { const _0x37b2fa = _0x4c9ea1; if (_0x5395a5['endsWith']('.js')) { let { command: _0x1b6a1a } = require(_0x1dd6a2 + _0x5395a5), _0x33b24f = _0x1b6a1a(); for (let _0x55bb30 of _0x33b24f[_0x37b2fa(0x6f)]) { commandsPublic[_0x55bb30] = _0x33b24f[_0x37b2fa(0x84)]; } } }), _0x1dd6a2 = _0x4c9ea1(0x8a), _0x9597be = await readdir(_0x1dd6a2), _0x9597be['forEach'](_0x3aa615 => { const _0x218c56 = _0x4c9ea1; if (_0x3aa615[_0x218c56(0xb5)](_0x218c56(0xb4))) { let { command: _0x37ff65 } = require(_0x1dd6a2 + _0x3aa615), _0x283316 = _0x37ff65(); for (let _0x3a11f6 of _0x283316[_0x218c56(0x6f)]) { commandsMembers[_0x3a11f6] = _0x283316[_0x218c56(0x84)]; } } }), _0x1dd6a2 = _0x4c9ea1(0x7a), _0x9597be = await readdir(_0x1dd6a2), _0x9597be['forEach'](_0x42b450 => { const _0x163b7d = _0x4c9ea1; if (_0x42b450['endsWith'](_0x163b7d(0xb4))) { let { command: _0x843261 } = require(_0x1dd6a2 + _0x42b450), _0x31688e = _0x843261(); for (let _0x4f310e of _0x31688e[_0x163b7d(0x6f)]) { commandsAdmins[_0x4f310e] = _0x31688e[_0x163b7d(0x84)]; } } }), _0x1dd6a2 = _0x4c9ea1(0xcb), _0x9597be = await readdir(_0x1dd6a2), _0x9597be[_0x4c9ea1(0xef)](_0x5b8ef9 => { const _0x3c57a = _0x4c9ea1; if (_0x5b8ef9['endsWith'](_0x3c57a(0xb4))) { let { command: _0x3cc8c9 } = require(_0x1dd6a2 + _0x5b8ef9), _0x3884ea = _0x3cc8c9(); for (let _0x2e3c73 of _0x3884ea[_0x3c57a(0x6f)]) { commandsOwners[_0x2e3c73] = _0x3884ea['handler']; } } }), _0x1dd6a2 = './', _0x9597be = await readdir(_0x1dd6a2), _0x9597be[_0x4c9ea1(0xef)](_0x12a1a7 => { const _0x5a35ca = _0x4c9ea1; (_0x12a1a7['endsWith']('.webp') || _0x12a1a7['endsWith'](_0x5a35ca(0x99)) || _0x12a1a7['endsWith'](_0x5a35ca(0x78)) || _0x12a1a7[_0x5a35ca(0xb5)](_0x5a35ca(0xc5)) || _0x12a1a7[_0x5a35ca(0xb5)]('.jpg') || _0x12a1a7['endsWith'](_0x5a35ca(0x72)) || _0x12a1a7[_0x5a35ca(0xb5)](_0x5a35ca(0xcc))) && fs[_0x5a35ca(0x9c)](_0x1dd6a2 + _0x12a1a7); }); }, mdClient = require(_0x57f469(0x8b)); mdClient[_0x57f469(0x73)](); let sessionCount = 0x1; function fetchauth() { const _0x36b33e = _0x57f469; try { !fs[_0x36b33e(0xc0)](_0x36b33e(0x97)) && fs[_0x36b33e(0xfa)](_0x36b33e(0x97)), mdClient[_0x36b33e(0x73)](async _0x20db87 => { const _0x3a8e0f = _0x36b33e; if (_0x20db87) throw _0x20db87; let _0x2db762 = mdClient['db']('MyBotDataDB')[_0x3a8e0f(0x9a)]('AuthTable'); await _0x2db762[_0x3a8e0f(0xb3)]({ '_id': _0x3a8e0f(0xda) })[_0x3a8e0f(0xaa)](_0x8db71e => { const _0x13ae52 = _0x3a8e0f; _0x8db71e == null && _0x2db762['insertOne']({ '_id': _0x13ae52(0xda), 'sessionAuth': '' }); }), _0x2db762[_0x3a8e0f(0x93)]({ '_id': _0x3a8e0f(0xda) })['toArray'](function (_0x26593f, _0x2ff706) { const _0x554b34 = _0x3a8e0f; if (_0x26593f) throw _0x26593f; let _0x221c21 = _0x2ff706[0x0][_0x554b34(0x82)]; if (_0x221c21 != '') { _0x221c21 = JSON[_0x554b34(0xce)](_0x221c21), _0x221c21 = JSON['stringify'](_0x221c21); if (sessionCount == 0x1) fs['writeFileSync']('baileys_auth_info/creds.json', _0x221c21); else sessionCount == 0x0 ? fs['rmSync'](_0x554b34(0xd8), { 'recursive': !![], 'force': !![] }) : console[_0x554b34(0x6b)]('Creds\x20Already\x20there.'); } else console[_0x554b34(0x6b)](_0x554b34(0xa2)); }); }), console[_0x36b33e(0x6b)](_0x36b33e(0xe7)); } catch (_0x1636eb) { console['error'](_0x36b33e(0xe0), _0x1636eb); } } function updateLogin() { const _0x9693b6 = _0x57f469; try { let _0x25cff2 = fs['readFileSync'](_0x9693b6(0xd8)); _0x25cff2 = JSON[_0x9693b6(0xce)](_0x25cff2), _0x25cff2 = JSON[_0x9693b6(0xa5)](_0x25cff2); let _0x21df06 = mdClient['db']('MyBotDataDB')['collection']('AuthTable'); _0x21df06[_0x9693b6(0xdc)]({ '_id': 'auth' }, { '$set': { 'sessionAuth': _0x25cff2 } }), console[_0x9693b6(0x6b)](_0x9693b6(0x9d)); } catch (_0x32c056) { console[_0x9693b6(0x6b)]('Db\x20updating\x20error\x20:\x20', _0x32c056); } } require(_0x57f469(0xf5))[_0x57f469(0x74)](); const { getCmdToBlock } = require(_0x57f469(0xf8)), { getBlockWarning } = require(_0x57f469(0xc6)), { createMembersData } = require(_0x57f469(0xba)), { createGroupData } = require(_0x57f469(0xfb)), myNumber = process[_0x57f469(0x6d)]['myNumber'] + _0x57f469(0xdb), INSTA_API_KEY = process['env'][_0x57f469(0xd2)], { igApi, getSessionId } = require(_0x57f469(0xe8)); function _0x1f48() { const _0x139742 = ['Local\x20file\x20written', 'insta-fetcher', 'length', '667800sKLolx', '571893MVNqpb', 'setCookie', 'console', 'text', 'forEach', 'videoMessage', '[FROM]', 'participants', '919565303474', '[name]', 'dotenv', 'process', '34756BvDZlh', './DB/cmdBlockDB', 'remoteJid', 'mkdirSync', './mongo-DB/groupDataDb', '```ü§≠\x20kya\x20matlab\x20tum\x20admin\x20nhi\x20ho.```', 'buttonsResponseMessage', '\x20\x0a*Participants:*\x20', 'caption', 'return\x20(function()\x20', 'search', 'connection.update', 'log', 'composing', 'env', 'user', 'cmd', '@g.us', 'participant', '.png', 'connect', 'config', 'listen', 'conversation', '385YUNecC', '.mp3', 'constructor', './commands/group/admins/', 'message', 'get', 'express', 'loggedOut', '\x20\x0a*Group:*\x20', '{}.constructor(\x22return\x20this\x22)(\x20)', 'templateButtonReplyMessage', 'sessionAuth', '568161nPMlGl', 'handler', 'warn', 'Directs', '89541KwCyFW', 'push', 'keys', './commands/group/members/', './mongodb', 'sendPresenceUpdate', '693JMJGFv', 'use', 'subject', '\x20[name]\x20', 'desc', 'pino', 'find', '[IN]', 'slice', '\x20[IN]\x20', './baileys_auth_info', '```‚ùå\x20Group\x20command\x20only!```', '.jpeg', 'collection', 'readMessages', 'unlinkSync', 'Login\x20Updated', 'action', 'key', 'selectedDisplayText', 'PORT', 'Session\x20Auth\x20Empty', '```‚ùå\x20Owner\x20command\x20only!```', 'groupMetadata', 'stringify', 'close', 'extendedTextMessage', 'listResponseMessage', '__proto__', 'then', 'Bot\x20is\x20running..\x20:)', '\x20\x0a*Grp\x20Name:*\x20', 'exception', 'startsWith', '[cmd]\x20', 'admin', '[COMMAND]', 'toJSON', 'findOne', '.js', 'endsWith', 'trim', 'pushName', 'toLowerCase', 'using\x20WA\x20v', './mongo-DB/membersDataDb', '38ilkNUd', 'imageMessage', 'presenceSubscribe', '51288qXpUpz', 'join', 'existsSync', 'split', 'level', './commands/public/', 'fromMe', '.mp4', './DB/blockDB', 'prototype', '240QylWwm', 'contextInfo', 'title', './commands/owner/', '.gif', 'util', 'parse', 'statusCode', 'error', 'info', 'INSTA_API_KEY', 'creds.update', 'baileys_auth_info', 'messages.upsert', 'Connection\x20closed.\x20You\x20are\x20logged\x20out.', 'help*\x20```', 'baileys_auth_info/creds.json', 'toString', 'auth', '@s.whatsapp.net', 'updateOne', '35hmGlfb', '\x20[by]\x20', 'group-participants.update', 'Local\x20file\x20writing\x20errors\x20:', 'mentionedJid', '425550sAPTLS', 'includes', '(((.+)+)+)+$', ',\x20isLatest:\x20', 'bind']; _0x1f48 = function () { return _0x139742; }; return _0x1f48(); } let ig = new igApi(INSTA_API_KEY); ig[_0x57f469(0xec)](INSTA_API_KEY); function _0x348b(_0x3709e3, _0x1f969f) { const _0x3e3518 = _0x1f48(); return _0x348b = function (_0x504295, _0x35d9fb) { _0x504295 = _0x504295 - 0x69; let _0x4487d1 = _0x3e3518[_0x504295]; return _0x4487d1; }, _0x348b(_0x3709e3, _0x1f969f); } const prefix = '-', allowedNumbs = ['918318585418', _0x57f469(0xf3)], getGroupAdmins = _0x4cc13a => { const _0x1baaba = _0x57f469; admins = []; for (let _0x5c1a6d of _0x4cc13a) { _0x5c1a6d[_0x1baaba(0xb0)] == _0x1baaba(0xb0) || _0x5c1a6d[_0x1baaba(0xb0)] == 'superadmin' ? admins[_0x1baaba(0x88)](_0x5c1a6d['id']) : ''; } return admins; }, startSock = async () => { const _0xc1592c = _0x57f469; addCommands(), fetchauth(), await delay(0x2710); let _0x26489d = setInterval(() => { updateLogin(); }, 0x7530); const { state: _0x5eb9c1, saveCreds: _0x1ff815 } = await useMultiFileAuthState(_0xc1592c(0xd4)), { version: _0x39751d, isLatest: _0x52204a } = await fetchLatestBaileysVersion(); console['log'](_0xc1592c(0xb9) + _0x39751d[_0xc1592c(0xbf)]('.') + _0xc1592c(0xe5) + _0x52204a); const _0xb703fc = makeWASocket({ 'version': _0x39751d, 'logger': logger, 'printQRInTerminal': !![], 'auth': _0x5eb9c1, 'msgRetryCounterMap': msgRetryCounterMap, 'getMessage': async _0x2830aa => { return {}; } }); sessionCount = 0x2; const _0x59efb2 = async (_0xc8e124, _0x294abf, _0x5870db) => { const _0x10bf49 = _0xc1592c; await _0xb703fc[_0x10bf49(0xbd)](_0xc8e124), await delay(0x64), await _0xb703fc['sendPresenceUpdate'](_0x10bf49(0x6c), _0xc8e124), await delay(0x1f4), await _0xb703fc[_0x10bf49(0x8c)]('paused', _0xc8e124), await _0xb703fc['sendMessage'](_0xc8e124, _0x294abf, _0x5870db); }; return _0xb703fc['ev'][_0xc1592c(0xf6)](async _0x3a79ce => { const _0x5afaf2 = _0xc1592c; if (_0x3a79ce[_0x5afaf2(0x6a)]) { const _0x31a3b5 = _0x3a79ce[_0x5afaf2(0x6a)], { connection: _0x564c99, lastDisconnect: _0x553b3e } = _0x31a3b5; _0x564c99 === _0x5afaf2(0xa6) && (_0x553b3e['error']['output'][_0x5afaf2(0xcf)] == DisconnectReason[_0x5afaf2(0x7e)] ? (sessionCount = 0x0, console[_0x5afaf2(0x6b)]('sessionCount\x20logout\x20time', sessionCount), clearInterval(_0x26489d), startSock()) : (console['log'](_0x5afaf2(0xd6), sessionCount), startSock())), console[_0x5afaf2(0x6b)]('connection\x20update', _0x31a3b5); } _0x3a79ce[_0x5afaf2(0xd3)] && await _0x1ff815(); if (_0x3a79ce[_0x5afaf2(0xd5)]) { const _0x200c79 = _0x3a79ce['messages.upsert']; try { const _0x935ab7 = _0x200c79['messages'][0x0]; if (!_0x935ab7[_0x5afaf2(0x7b)]) return; const _0x446943 = _0x3da5ab => { const _0x20f9f1 = _0x5afaf2; try { _0xb703fc['sendMessage'](myNumber, { 'text': _0x3da5ab, 'mentions': _0x935ab7[_0x20f9f1(0x7b)]['extendedTextMessage'] ? _0x935ab7[_0x20f9f1(0x7b)][_0x20f9f1(0xa7)][_0x20f9f1(0xc9)][_0x20f9f1(0xe1)] : '' }); } catch { } }, _0x326f48 = _0x935ab7[_0x5afaf2(0x9f)][_0x5afaf2(0xf9)], _0x54f4dc = JSON['stringify'](_0x935ab7['message']), _0x41bb8a = Object[_0x5afaf2(0x89)](_0x935ab7['message'])[0x0]; let _0x780adb = _0xb703fc[_0x5afaf2(0x6e)]['id']; _0x780adb = _0x780adb[_0x5afaf2(0xe3)](':') ? _0x780adb[_0x5afaf2(0xc1)](':')[0x0] + _0x5afaf2(0xdb) : _0x780adb; let _0x3fb123 = _0x41bb8a === _0x5afaf2(0x76) ? _0x935ab7[_0x5afaf2(0x7b)]['conversation'] : _0x41bb8a == _0x5afaf2(0xbc) && _0x935ab7[_0x5afaf2(0x7b)]['imageMessage'][_0x5afaf2(0xff)] ? _0x935ab7['message'][_0x5afaf2(0xbc)][_0x5afaf2(0xff)] : _0x41bb8a == _0x5afaf2(0xf0) && _0x935ab7['message'][_0x5afaf2(0xf0)][_0x5afaf2(0xff)] ? _0x935ab7[_0x5afaf2(0x7b)][_0x5afaf2(0xf0)][_0x5afaf2(0xff)] : _0x41bb8a == 'extendedTextMessage' && _0x935ab7[_0x5afaf2(0x7b)][_0x5afaf2(0xa7)][_0x5afaf2(0xee)] ? _0x935ab7[_0x5afaf2(0x7b)][_0x5afaf2(0xa7)][_0x5afaf2(0xee)] : _0x41bb8a == _0x5afaf2(0xfd) ? _0x935ab7['message']['buttonsResponseMessage'][_0x5afaf2(0xa0)] : _0x41bb8a == 'templateButtonReplyMessage' ? _0x935ab7[_0x5afaf2(0x7b)][_0x5afaf2(0x81)]['selectedDisplayText'] : _0x41bb8a == _0x5afaf2(0xa8) ? _0x935ab7['message'][_0x5afaf2(0xa8)][_0x5afaf2(0xca)] : ''; if (_0x3fb123[0x1] == '\x20') _0x3fb123 = _0x3fb123[0x0] + _0x3fb123[_0x5afaf2(0x95)](0x2); const _0x2cbaef = _0x3fb123[_0x5afaf2(0xb6)]()[_0x5afaf2(0xc1)](/ +/)['slice'](0x1)['join']('\x20'), _0x157194 = _0x3fb123[_0x5afaf2(0x95)](0x1)[_0x5afaf2(0xb6)]()['split'](/ +/)['shift']()[_0x5afaf2(0xb8)](), _0x291b48 = _0x3fb123[_0x5afaf2(0xb6)]()['split'](/ +/)[_0x5afaf2(0x95)](0x1), _0x153d47 = _0x3fb123[_0x5afaf2(0xae)](prefix); if (!_0x153d47) return; const _0x34b3d1 = _0x326f48[_0x5afaf2(0xb5)](_0x5afaf2(0x70)); await _0xb703fc[_0x5afaf2(0x9b)]([{ 'remoteJid': _0x935ab7[_0x5afaf2(0x9f)]['remoteJid'], 'id': _0x935ab7[_0x5afaf2(0x9f)]['id'], 'participant': _0x935ab7[_0x5afaf2(0x9f)]['participant'] || undefined }]); const _0x5392ff = _0x34b3d1 ? _0x935ab7[_0x5afaf2(0x9f)][_0x5afaf2(0x71)] : _0x935ab7['key'][_0x5afaf2(0xf9)], _0x23860b = _0x5392ff['includes'](':') ? _0x5392ff[_0x5afaf2(0xc1)](':')[0x0] : _0x5392ff[_0x5afaf2(0xc1)]('@')[0x0], _0x124f41 = _0x34b3d1 ? await _0xb703fc[_0x5afaf2(0xa4)](_0x326f48) : '', _0x1f6423 = _0x34b3d1 ? getGroupAdmins(_0x124f41['participants']) : '', _0x4c84a2 = _0x1f6423[_0x5afaf2(0xe3)](_0x5392ff) || ![], _0x39b54c = { 'prefix': prefix, 'type': _0x41bb8a, 'content': _0x54f4dc, 'evv': _0x2cbaef, 'command': _0x157194, 'isGroup': _0x34b3d1, 'senderJid': _0x5392ff, 'groupMetadata': _0x124f41, 'groupAdmins': _0x1f6423, 'botNumberJid': _0x780adb, 'sendMessageWTyping': _0x59efb2, 'OwnerSend': _0x446943, 'ig': ig }; console[_0x5afaf2(0x6b)](_0x5afaf2(0xb1), _0x157194, _0x5afaf2(0xf1), _0x23860b, _0x5afaf2(0xf4), _0x935ab7[_0x5afaf2(0xb7)], _0x5afaf2(0x94), _0x34b3d1 ? _0x124f41['subject'] : _0x5afaf2(0x86)), _0x446943(_0x5afaf2(0xaf) + _0x3fb123 + _0x5afaf2(0xde) + _0x23860b + _0x5afaf2(0x90) + _0x935ab7[_0x5afaf2(0xb7)] + _0x5afaf2(0x96) + (_0x34b3d1 ? _0x124f41[_0x5afaf2(0x8f)] : 'Dm')); let _0x51ebcc = await getBlockWarning(_0x23860b); if (_0x51ebcc == 0x1) return; let _0x4365d5 = []; if (_0x34b3d1 && _0x124f41['desc']) { let _0x22d537 = _0x124f41[_0x5afaf2(0x91)][_0x5afaf2(0xd9)]()[_0x5afaf2(0xc1)]('\x0a')[0x0]; _0x4365d5 = _0x22d537[_0x5afaf2(0xc1)](','); } var _0x581d35 = await getCmdToBlock(_0x326f48); let _0x38d54e = _0x581d35['toString']()[_0x5afaf2(0xc1)](','); if (_0x157194 != '') { createMembersData(_0x5392ff, _0x935ab7['pushName']); if (_0x34b3d1) createGroupData(_0x326f48); if (_0x4365d5[_0x5afaf2(0xe3)](_0x157194) || _0x38d54e['includes'](_0x157194)) return; } if (commandsPublic[_0x157194]) { commandsPublic[_0x157194](_0xb703fc, _0x935ab7, _0x326f48, _0x291b48, _0x39b54c); return; } if (commandsMembers[_0x157194]) { if (_0x34b3d1 || _0x935ab7[_0x5afaf2(0x9f)][_0x5afaf2(0xc4)]) { commandsMembers[_0x157194](_0xb703fc, _0x935ab7, _0x326f48, _0x291b48, _0x39b54c); return; } _0x59efb2(_0x326f48, { 'text': _0x5afaf2(0x98) }, { 'quoted': _0x935ab7 }); return; } if (commandsAdmins[_0x157194]) { if (!_0x34b3d1) { _0x59efb2(_0x326f48, { 'text': _0x5afaf2(0x98) }, { 'quoted': _0x935ab7 }); return; } if (_0x4c84a2 || allowedNumbs[_0x5afaf2(0xe3)](_0x23860b)) { commandsAdmins[_0x157194](_0xb703fc, _0x935ab7, _0x326f48, _0x291b48, _0x39b54c); return; } _0x59efb2(_0x326f48, { 'text': _0x5afaf2(0xfc) }, { 'quoted': _0x935ab7 }); return; } if (commandsOwners[_0x157194]) { if (allowedNumbs['includes'](_0x23860b) || myNumber == _0x5392ff) { commandsOwners[_0x157194](_0xb703fc, _0x935ab7, _0x326f48, _0x291b48, _0x39b54c); return; } _0x59efb2(_0x326f48, { 'text': _0x5afaf2(0xa3) }, { 'quoted': _0x935ab7 }); return; } _0x59efb2(_0x326f48, { 'text': '```*' + _0x935ab7[_0x5afaf2(0xb7)] + '!!Use\x20' + prefix + _0x5afaf2(0xd7) }, { 'quoted': _0x935ab7 }); } catch (_0x57e001) { console[_0x5afaf2(0x6b)](_0x57e001); } } if (_0x3a79ce[_0x5afaf2(0xdf)]) { const _0x4d588c = _0x3a79ce[_0x5afaf2(0xdf)]; try { _0xb703fc[_0x5afaf2(0xa4)](_0x4d588c['id'])[_0x5afaf2(0xaa)](_0x587b9a => { const _0x57b883 = _0x5afaf2; _0xb703fc['sendMessage'](myNumber, { 'text': '*Action:*\x20' + _0x4d588c[_0x57b883(0x9e)] + _0x57b883(0x7f) + _0x4d588c['id'] + _0x57b883(0xac) + _0x587b9a['subject'] + _0x57b883(0xfe) + _0x4d588c[_0x57b883(0xf2)][0x0] }); }), console[_0x5afaf2(0x6b)](_0x4d588c); } catch (_0x277365) { console[_0x5afaf2(0x6b)](_0x277365); } } }), _0xb703fc; }; startSock();