const _0x4b4cae = _0x30c4; (function (_0x5a8e5e, _0x5ed231) { const _0x304e51 = _0x30c4, _0x4885be = _0x5a8e5e(); while (!![]) { try { const _0x36a134 = -parseInt(_0x304e51(0x159)) / 0x1 + parseInt(_0x304e51(0x1ba)) / 0x2 * (parseInt(_0x304e51(0x14b)) / 0x3) + -parseInt(_0x304e51(0x13b)) / 0x4 * (-parseInt(_0x304e51(0x184)) / 0x5) + -parseInt(_0x304e51(0x138)) / 0x6 * (parseInt(_0x304e51(0x175)) / 0x7) + parseInt(_0x304e51(0x186)) / 0x8 * (parseInt(_0x304e51(0x169)) / 0x9) + -parseInt(_0x304e51(0x17a)) / 0xa + parseInt(_0x304e51(0x1b2)) / 0xb; if (_0x36a134 === _0x5ed231) break; else _0x4885be['push'](_0x4885be['shift']()); } catch (_0x3faf86) { _0x4885be['push'](_0x4885be['shift']()); } } }(_0x14c5, 0x7eeb9)); const _0x1c5d10 = (function () { let _0x17d475 = !![]; return function (_0x2ee884, _0x1d18ef) { const _0x1255f1 = _0x17d475 ? function () { const _0x25b55a = _0x30c4; if (_0x1d18ef) { const _0x1f6688 = _0x1d18ef[_0x25b55a(0x195)](_0x2ee884, arguments); return _0x1d18ef = null, _0x1f6688; } } : function () { }; return _0x17d475 = ![], _0x1255f1; }; }()), _0x2f7a48 = _0x1c5d10(this, function () { const _0x205994 = _0x30c4; return _0x2f7a48[_0x205994(0x1ca)]()[_0x205994(0x15b)](_0x205994(0x1c2))[_0x205994(0x1ca)]()['constructor'](_0x2f7a48)['search']('(((.+)+)+)+$'); }); _0x2f7a48(); function _0x30c4(_0x4f16e8, _0x295dc3) { const _0x26582d = _0x14c5(); return _0x30c4 = function (_0x3de05d, _0x581066) { _0x3de05d = _0x3de05d - 0x135; let _0x43ce50 = _0x26582d[_0x3de05d]; return _0x43ce50; }, _0x30c4(_0x4f16e8, _0x295dc3); } function _0x14c5() { const _0x51984d = ['shift', 'extendedTextMessage', 'findOne', 'env', '1345445GNaoqT', 'groupMetadata', '3943432aorAPb', 'send', 'baileys_auth_info', 'Directs', 'key', '[name]', 'participants', 'console', 'writeFileSync', 'mkdirSync', 'dotenv', 'sendMessage', '[COMMAND]', 'push', '\x20\x0a*Group:*\x20', 'apply', 'express', 'updateOne', 'close', 'prototype', 'unlinkSync', 'AuthTable', ',\x22time\x22:\x22', 'includes', 'return\x20(function()\x20', 'log', 'trim', 'info', 'remoteJid', 'desc', '\x0aWeb-server\x20running!\x0a', './commands/group/admins/', 'subject', 'conversation', 'error', 'participant', './commands/owner/', '```‚ùå\x20Owner\x20command\x20only!```', 'output', 'toArray', 'PORT', '.mp3', 'toJSON', 'MyBotDataDB', '1312828sOQalP', '{}.constructor(\x22return\x20this\x22)(\x20)', 'endsWith', 'length', 'statusCode', 'Local\x20file\x20written', '919565303474', 'startsWith', '18SFEziJ', '.webp', 'pushName', '```‚ùå\x20Group\x20command\x20only!```', 'using\x20WA\x20v', '@s.whatsapp.net', 'readFileSync', './baileys_auth_info', '(((.+)+)+)+$', 'split', 'join', 'fromMe', '[IN]', 'keys', 'creds.update', 'process', 'toString', 'auth', 'rmSync', 'slice', '1915944KXKrxK', 'connect', '__proto__', '4QYPlBx', 'message', 'parse', 'urlencoded', './mongodb', 'constructor', '\x20\x0a*Participants:*\x20', 'promisify', 'videoMessage', 'user', '918318585418', 'warn', '```*', 'imageMessage', 'collection', './mongo-DB/membersDataDb', '345183qXoAfD', 'exception', 'bind', 'Session\x20Auth\x20Empty', 'action', 'stringify', 'admin', 'Db\x20updation\x20error\x20:\x20', 'templateButtonReplyMessage', 'find', 'handler', 'messages', 'cmd', 'readMessages', '844290PwuIbq', 'use', 'search', 'existsSync', '\x20[by]\x20', '\x20\x0a*Grp\x20Name:*\x20', 'pino', 'group-participants.update', 'messages.upsert', '.js', '[cmd]\x20', './DB/cmdBlockDB', 'sendPresenceUpdate', 'buttonsResponseMessage', 'caption', 'then', '18SWQoLb', '@adiwajshing/baileys', 'text', 'baileys_auth_info/creds.json', 'trace', 'forEach', '*Action:*\x20', './commands/group/members/', '.jpg', 'connection\x20update', 'child', 'listResponseMessage', '21vSMSca', 'selectedDisplayText', 'superadmin', 'Connection\x20closed.\x20You\x20are\x20logged\x20out.', 'myNumber', '877170QlZTvL', '[FROM]', '```ü§≠\x20kya\x20matlab\x20tum\x20admin\x20nhi\x20ho.```', 'help*\x20```', '@g.us', 'connection.update']; _0x14c5 = function () { return _0x51984d; }; return _0x14c5(); } const _0x581066 = (function () { let _0x448e58 = !![]; return function (_0x3987cd, _0x95837f) { const _0x24da76 = _0x448e58 ? function () { const _0x7dcded = _0x30c4; if (_0x95837f) { const _0x2e5303 = _0x95837f[_0x7dcded(0x195)](_0x3987cd, arguments); return _0x95837f = null, _0x2e5303; } } : function () { }; return _0x448e58 = ![], _0x24da76; }; }()), _0x3de05d = _0x581066(this, function () { const _0x881e2a = _0x30c4, _0x4de0bd = function () { const _0x2322d3 = _0x30c4; let _0x59ae2c; try { _0x59ae2c = Function(_0x2322d3(0x19e) + _0x2322d3(0x1b3) + ');')(); } catch (_0x416608) { _0x59ae2c = window; } return _0x59ae2c; }, _0x2d1a54 = _0x4de0bd(), _0x21bce9 = _0x2d1a54['console'] = _0x2d1a54[_0x881e2a(0x18d)] || {}, _0x3cf9cd = [_0x881e2a(0x19f), _0x881e2a(0x146), _0x881e2a(0x1a1), _0x881e2a(0x1a8), _0x881e2a(0x14c), 'table', _0x881e2a(0x16d)]; for (let _0x39b206 = 0x0; _0x39b206 < _0x3cf9cd[_0x881e2a(0x1b5)]; _0x39b206++) { const _0x28e3d1 = _0x581066[_0x881e2a(0x140)][_0x881e2a(0x199)][_0x881e2a(0x14d)](_0x581066), _0x2ee502 = _0x3cf9cd[_0x39b206], _0x309b5e = _0x21bce9[_0x2ee502] || _0x28e3d1; _0x28e3d1[_0x881e2a(0x13a)] = _0x581066[_0x881e2a(0x14d)](_0x581066), _0x28e3d1[_0x881e2a(0x1ca)] = _0x309b5e[_0x881e2a(0x1ca)]['bind'](_0x309b5e), _0x21bce9[_0x2ee502] = _0x28e3d1; } }); _0x3de05d(); const express = require(_0x4b4cae(0x196)), app = express(); app[_0x4b4cae(0x15a)](express[_0x4b4cae(0x13e)]({ 'extended': !![] })); const port = process[_0x4b4cae(0x183)][_0x4b4cae(0x1ae)] || 0x1f40; app['get']('/', (_0x2b1fa0, _0x473f0c) => { const _0x1ad857 = _0x4b4cae; _0x473f0c[_0x1ad857(0x187)]('Bot\x20is\x20running..\x20:)'); }), app['listen'](port, () => { const _0x4f4d01 = _0x4b4cae; console['log'](_0x4f4d01(0x1a4)); }); const { default: makeWASocket, delay, DisconnectReason, fetchLatestBaileysVersion, MessageRetryMap, useMultiFileAuthState } = require(_0x4b4cae(0x16a)), P = require(_0x4b4cae(0x15f)); let MAIN_LOGGER = P({ 'timestamp': () => _0x4b4cae(0x19c) + new Date()[_0x4b4cae(0x1b0)]() + '\x22' }); const logger = MAIN_LOGGER[_0x4b4cae(0x173)]({}); logger['level'] = _0x4b4cae(0x146), msgRetryCounterMap = MessageRetryMap; const fs = require('fs'), util = require('util'), readdir = util[_0x4b4cae(0x142)](fs['readdir']); let commandsPublic = {}, commandsMembers = {}, commandsAdmins = {}, commandsOwners = {}; const addCommands = async () => { const _0xe94a68 = _0x4b4cae; let _0x2a117a = './commands/public/', _0x450e3f = await readdir(_0x2a117a); _0x450e3f[_0xe94a68(0x16e)](_0x381bac => { const _0x12b0c6 = _0xe94a68; if (_0x381bac[_0x12b0c6(0x1b4)](_0x12b0c6(0x162))) { let { command: _0x17331c } = require(_0x2a117a + _0x381bac), _0x52d11e = _0x17331c(); for (let _0x2f9d8e of _0x52d11e[_0x12b0c6(0x157)]) { commandsPublic[_0x2f9d8e] = _0x52d11e['handler']; } } }), _0x2a117a = _0xe94a68(0x170), _0x450e3f = await readdir(_0x2a117a), _0x450e3f['forEach'](_0x1b9208 => { const _0x1b0575 = _0xe94a68; if (_0x1b9208[_0x1b0575(0x1b4)](_0x1b0575(0x162))) { let { command: _0x2198a4 } = require(_0x2a117a + _0x1b9208), _0x2a0a44 = _0x2198a4(); for (let _0x5f8bb4 of _0x2a0a44[_0x1b0575(0x157)]) { commandsMembers[_0x5f8bb4] = _0x2a0a44[_0x1b0575(0x155)]; } } }), _0x2a117a = _0xe94a68(0x1a5), _0x450e3f = await readdir(_0x2a117a), _0x450e3f[_0xe94a68(0x16e)](_0x4e8127 => { const _0x384a2c = _0xe94a68; if (_0x4e8127[_0x384a2c(0x1b4)](_0x384a2c(0x162))) { let { command: _0x119f36 } = require(_0x2a117a + _0x4e8127), _0x5aa2bd = _0x119f36(); for (let _0x5bf513 of _0x5aa2bd[_0x384a2c(0x157)]) { commandsAdmins[_0x5bf513] = _0x5aa2bd[_0x384a2c(0x155)]; } } }), _0x2a117a = _0xe94a68(0x1aa), _0x450e3f = await readdir(_0x2a117a), _0x450e3f[_0xe94a68(0x16e)](_0xe717c => { const _0x61277 = _0xe94a68; if (_0xe717c[_0x61277(0x1b4)](_0x61277(0x162))) { let { command: _0xf6487f } = require(_0x2a117a + _0xe717c), _0xb6219c = _0xf6487f(); for (let _0x1b81c7 of _0xb6219c[_0x61277(0x157)]) { commandsOwners[_0x1b81c7] = _0xb6219c[_0x61277(0x155)]; } } }), _0x2a117a = './', _0x450e3f = await readdir(_0x2a117a), _0x450e3f[_0xe94a68(0x16e)](_0x1896f0 => { const _0x2e6519 = _0xe94a68; (_0x1896f0[_0x2e6519(0x1b4)](_0x2e6519(0x1bb)) || _0x1896f0[_0x2e6519(0x1b4)]('.jpeg') || _0x1896f0[_0x2e6519(0x1b4)](_0x2e6519(0x1af)) || _0x1896f0[_0x2e6519(0x1b4)]('.mp4') || _0x1896f0['endsWith'](_0x2e6519(0x171)) || _0x1896f0[_0x2e6519(0x1b4)]('.png') || _0x1896f0[_0x2e6519(0x1b4)]('.gif')) && fs[_0x2e6519(0x19a)](_0x2a117a + _0x1896f0); }); }, mdClient = require(_0x4b4cae(0x13f)); mdClient['connect'](); let sessionCount = 0x1; function fetchauth() { const _0x34dfc4 = _0x4b4cae; try { !fs[_0x34dfc4(0x15c)](_0x34dfc4(0x1c1)) && fs[_0x34dfc4(0x18f)](_0x34dfc4(0x1c1)), mdClient[_0x34dfc4(0x139)](async _0x539c52 => { const _0x148577 = _0x34dfc4; if (_0x539c52) throw _0x539c52; let _0x314f4a = mdClient['db'](_0x148577(0x1b1))[_0x148577(0x149)](_0x148577(0x19b)); await _0x314f4a[_0x148577(0x182)]({ '_id': _0x148577(0x135) })[_0x148577(0x168)](_0x5c1dc8 => { _0x5c1dc8 == null && _0x314f4a['insertOne']({ '_id': 'auth', 'sessionAuth': '' }); }), _0x314f4a[_0x148577(0x154)]({ '_id': 'auth' })[_0x148577(0x1ad)](function (_0x2f9798, _0x4f0a22) { const _0x3b69bc = _0x148577; if (_0x2f9798) throw _0x2f9798; let _0x157c43 = _0x4f0a22[0x0]['sessionAuth']; if (_0x157c43 != '') { _0x157c43 = JSON[_0x3b69bc(0x13d)](_0x157c43), _0x157c43 = JSON[_0x3b69bc(0x150)](_0x157c43); if (sessionCount == 0x1) fs[_0x3b69bc(0x18e)]('baileys_auth_info/creds.json', _0x157c43); else sessionCount == 0x0 ? fs[_0x3b69bc(0x136)](_0x3b69bc(0x16c), { 'recursive': !![], 'force': !![] }) : console[_0x3b69bc(0x19f)]('Creds\x20Already\x20there.'); } else console[_0x3b69bc(0x19f)](_0x3b69bc(0x14e)); }); }), console[_0x34dfc4(0x19f)](_0x34dfc4(0x1b7)); } catch (_0x37f57c) { console[_0x34dfc4(0x1a8)]('Local\x20file\x20writing\x20errors\x20:', _0x37f57c); } } function updateLogin() { const _0x3fad76 = _0x4b4cae; try { let _0x183d35 = fs[_0x3fad76(0x1c0)]('baileys_auth_info/creds.json'); _0x183d35 = JSON[_0x3fad76(0x13d)](_0x183d35), _0x183d35 = JSON[_0x3fad76(0x150)](_0x183d35); let _0x2cf6aa = mdClient['db'](_0x3fad76(0x1b1))[_0x3fad76(0x149)](_0x3fad76(0x19b)); _0x2cf6aa[_0x3fad76(0x197)]({ '_id': _0x3fad76(0x135) }, { '$set': { 'sessionAuth': _0x183d35 } }), console[_0x3fad76(0x19f)]('Login\x20Updated'); } catch (_0x4ebf79) { console[_0x3fad76(0x19f)](_0x3fad76(0x152), _0x4ebf79); } } require(_0x4b4cae(0x190))['config'](); const { getCmdToBlock } = require(_0x4b4cae(0x164)), { getBlockWarning } = require('./DB/blockDB'), { createMembersData } = require(_0x4b4cae(0x14a)), myNumber = process[_0x4b4cae(0x183)][_0x4b4cae(0x179)] + _0x4b4cae(0x1bf), prefix = '-', allowedNumbs = [_0x4b4cae(0x145), _0x4b4cae(0x1b8)], getGroupAdmins = _0x544811 => { const _0x8ae798 = _0x4b4cae; admins = []; for (let _0x3310cf of _0x544811) { _0x3310cf[_0x8ae798(0x151)] == _0x8ae798(0x151) || _0x3310cf[_0x8ae798(0x151)] == _0x8ae798(0x177) ? admins[_0x8ae798(0x193)](_0x3310cf['id']) : ''; } return admins; }, startSock = async () => { const _0x1eabd = _0x4b4cae; addCommands(), fetchauth(), await delay(0x2710); let _0x333b1f = setInterval(() => { updateLogin(); }, 0x7530); const { state: _0x4503c8, saveCreds: _0x15008e } = await useMultiFileAuthState(_0x1eabd(0x188)), { version: _0x44581b, isLatest: _0x3ca221 } = await fetchLatestBaileysVersion(); console[_0x1eabd(0x19f)](_0x1eabd(0x1be) + _0x44581b[_0x1eabd(0x1c4)]('.') + ',\x20isLatest:\x20' + _0x3ca221); const _0x483946 = makeWASocket({ 'version': _0x44581b, 'logger': logger, 'printQRInTerminal': !![], 'auth': _0x4503c8, 'msgRetryCounterMap': msgRetryCounterMap, 'getMessage': async _0x2bc379 => { return {}; } }); sessionCount = 0x2; const _0x361832 = async (_0x43549b, _0x579117, _0x3ae9f4) => { const _0x3744c2 = _0x1eabd; await _0x483946['presenceSubscribe'](_0x43549b), await delay(0x64), await _0x483946['sendPresenceUpdate']('composing', _0x43549b), await delay(0x1f4), await _0x483946[_0x3744c2(0x165)]('paused', _0x43549b), await _0x483946[_0x3744c2(0x191)](_0x43549b, _0x579117, _0x3ae9f4); }; return _0x483946['ev'][_0x1eabd(0x1c9)](async _0x4e7649 => { const _0x282e4b = _0x1eabd; if (_0x4e7649[_0x282e4b(0x17f)]) { const _0x2724d9 = _0x4e7649['connection.update'], { connection: _0x1f0d05, lastDisconnect: _0x25af0c } = _0x2724d9; _0x1f0d05 === _0x282e4b(0x198) && (_0x25af0c[_0x282e4b(0x1a8)][_0x282e4b(0x1ac)][_0x282e4b(0x1b6)] == DisconnectReason['loggedOut'] ? (sessionCount = 0x0, console[_0x282e4b(0x19f)]('sessionCount\x20logout\x20time', sessionCount), clearInterval(_0x333b1f), startSock()) : (console[_0x282e4b(0x19f)](_0x282e4b(0x178), sessionCount), startSock())), console[_0x282e4b(0x19f)](_0x282e4b(0x172), _0x2724d9); } _0x4e7649[_0x282e4b(0x1c8)] && await _0x15008e(); if (_0x4e7649[_0x282e4b(0x161)]) { const _0x2bfaab = _0x4e7649[_0x282e4b(0x161)]; try { const _0x27cf57 = _0x2bfaab[_0x282e4b(0x156)][0x0]; if (!_0x27cf57[_0x282e4b(0x13c)]) return; const _0xea12b3 = _0x5e5fef => { const _0x2ae1e1 = _0x282e4b; try { _0x483946['sendMessage'](myNumber, { 'text': _0x5e5fef, 'mentions': _0x27cf57['message'][_0x2ae1e1(0x181)] ? _0x27cf57[_0x2ae1e1(0x13c)][_0x2ae1e1(0x181)]['contextInfo']['mentionedJid'] : '' }); } catch { } }, _0x5cae66 = _0x27cf57[_0x282e4b(0x18a)][_0x282e4b(0x1a2)], _0x5eb7f5 = JSON[_0x282e4b(0x150)](_0x27cf57[_0x282e4b(0x13c)]), _0x43bcbe = Object[_0x282e4b(0x1c7)](_0x27cf57[_0x282e4b(0x13c)])[0x0]; let _0x49bf38 = _0x483946[_0x282e4b(0x144)]['id']; _0x49bf38 = _0x49bf38[_0x282e4b(0x19d)](':') ? _0x49bf38[_0x282e4b(0x1c3)](':')[0x0] + _0x282e4b(0x1bf) : _0x49bf38; let _0x5570ff = _0x43bcbe === _0x282e4b(0x1a7) ? _0x27cf57[_0x282e4b(0x13c)][_0x282e4b(0x1a7)] : _0x43bcbe == _0x282e4b(0x148) && _0x27cf57[_0x282e4b(0x13c)][_0x282e4b(0x148)][_0x282e4b(0x167)] ? _0x27cf57['message']['imageMessage'][_0x282e4b(0x167)] : _0x43bcbe == _0x282e4b(0x143) && _0x27cf57[_0x282e4b(0x13c)][_0x282e4b(0x143)][_0x282e4b(0x167)] ? _0x27cf57[_0x282e4b(0x13c)]['videoMessage'][_0x282e4b(0x167)] : _0x43bcbe == _0x282e4b(0x181) && _0x27cf57[_0x282e4b(0x13c)][_0x282e4b(0x181)][_0x282e4b(0x16b)] ? _0x27cf57[_0x282e4b(0x13c)][_0x282e4b(0x181)][_0x282e4b(0x16b)] : _0x43bcbe == _0x282e4b(0x166) ? _0x27cf57[_0x282e4b(0x13c)][_0x282e4b(0x166)]['selectedDisplayText'] : _0x43bcbe == _0x282e4b(0x153) ? _0x27cf57[_0x282e4b(0x13c)][_0x282e4b(0x153)][_0x282e4b(0x176)] : _0x43bcbe == 'listResponseMessage' ? _0x27cf57[_0x282e4b(0x13c)][_0x282e4b(0x174)]['title'] : ''; if (_0x5570ff[0x1] == '\x20') _0x5570ff = _0x5570ff[0x0] + _0x5570ff[_0x282e4b(0x137)](0x2); const _0x305da7 = _0x5570ff[_0x282e4b(0x1a0)]()[_0x282e4b(0x1c3)](/ +/)[_0x282e4b(0x137)](0x1)[_0x282e4b(0x1c4)]('\x20'), _0x25c320 = _0x5570ff['slice'](0x1)[_0x282e4b(0x1a0)]()[_0x282e4b(0x1c3)](/ +/)[_0x282e4b(0x180)]()['toLowerCase'](), _0x50ec32 = _0x5570ff['trim']()[_0x282e4b(0x1c3)](/ +/)[_0x282e4b(0x137)](0x1), _0x54ee28 = _0x5570ff[_0x282e4b(0x1b9)](prefix); if (!_0x54ee28) return; const _0x230a57 = _0x5cae66['endsWith'](_0x282e4b(0x17e)); await _0x483946[_0x282e4b(0x158)]([{ 'remoteJid': _0x27cf57[_0x282e4b(0x18a)][_0x282e4b(0x1a2)], 'id': _0x27cf57['key']['id'], 'participant': _0x27cf57[_0x282e4b(0x18a)][_0x282e4b(0x1a9)] || undefined }]); const _0xebe2d2 = _0x230a57 ? _0x27cf57['key'][_0x282e4b(0x1a9)] : _0x27cf57[_0x282e4b(0x18a)][_0x282e4b(0x1a2)], _0x2fa51f = _0xebe2d2['split']('@')[0x0], _0xbe888c = _0x230a57 ? await _0x483946[_0x282e4b(0x185)](_0x5cae66) : '', _0x3d7402 = _0x230a57 ? getGroupAdmins(_0xbe888c['participants']) : '', _0x2a4a7e = _0x3d7402[_0x282e4b(0x19d)](_0xebe2d2) || ![], _0x4148b0 = { 'prefix': prefix, 'type': _0x43bcbe, 'content': _0x5eb7f5, 'evv': _0x305da7, 'command': _0x25c320, 'isGroup': _0x230a57, 'senderJid': _0xebe2d2, 'groupMetadata': _0xbe888c, 'groupAdmins': _0x3d7402, 'botNumberJid': _0x49bf38, 'sendMessageWTyping': _0x361832, 'OwnerSend': _0xea12b3 }; console[_0x282e4b(0x19f)](_0x282e4b(0x192), _0x25c320, _0x282e4b(0x17b), _0x2fa51f, _0x282e4b(0x18b), _0x27cf57[_0x282e4b(0x1bc)], _0x282e4b(0x1c6), _0x230a57 ? _0xbe888c[_0x282e4b(0x1a6)] : _0x282e4b(0x189)), _0xea12b3(_0x282e4b(0x163) + _0x5570ff + _0x282e4b(0x15d) + _0x2fa51f + '\x20[name]\x20' + _0x27cf57['pushName'] + '\x20[IN]\x20' + (_0x230a57 ? _0xbe888c[_0x282e4b(0x1a6)] : 'Dm')); let _0x28edf6 = await getBlockWarning(_0x2fa51f); if (_0x28edf6 == 0x1) return; let _0xcb3a95 = []; if (_0x230a57 && _0xbe888c[_0x282e4b(0x1a3)]) { let _0x348bcb = _0xbe888c[_0x282e4b(0x1a3)]['toString']()[_0x282e4b(0x1c3)]('\x0a')[0x0]; _0xcb3a95 = _0x348bcb[_0x282e4b(0x1c3)](','); } var _0x33c304 = await getCmdToBlock(_0x5cae66); let _0x7a9825 = _0x33c304[_0x282e4b(0x1ca)]()[_0x282e4b(0x1c3)](','); if (_0x25c320 != '') { createMembersData(_0xebe2d2, _0x27cf57['pushName']); if (_0xcb3a95[_0x282e4b(0x19d)](_0x25c320) || _0x7a9825['includes'](_0x25c320)) return; } if (commandsPublic[_0x25c320]) { commandsPublic[_0x25c320](_0x483946, _0x27cf57, _0x5cae66, _0x50ec32, _0x4148b0); return; } if (commandsMembers[_0x25c320]) { if (_0x230a57 || _0x27cf57[_0x282e4b(0x18a)][_0x282e4b(0x1c5)]) { commandsMembers[_0x25c320](_0x483946, _0x27cf57, _0x5cae66, _0x50ec32, _0x4148b0); return; } _0x361832(_0x5cae66, { 'text': '```‚ùå\x20Group\x20command\x20only!```' }, { 'quoted': _0x27cf57 }); return; } if (commandsAdmins[_0x25c320]) { if (!_0x230a57) { _0x361832(_0x5cae66, { 'text': _0x282e4b(0x1bd) }, { 'quoted': _0x27cf57 }); return; } if (_0x2a4a7e || allowedNumbs['includes'](_0x2fa51f)) { commandsAdmins[_0x25c320](_0x483946, _0x27cf57, _0x5cae66, _0x50ec32, _0x4148b0); return; } _0x361832(_0x5cae66, { 'text': _0x282e4b(0x17c) }, { 'quoted': _0x27cf57 }); return; } if (commandsOwners[_0x25c320]) { if (allowedNumbs[_0x282e4b(0x19d)](_0x2fa51f) || myNumber == _0xebe2d2) { commandsOwners[_0x25c320](_0x483946, _0x27cf57, _0x5cae66, _0x50ec32, _0x4148b0); return; } _0x361832(_0x5cae66, { 'text': _0x282e4b(0x1ab) }, { 'quoted': _0x27cf57 }); return; } _0x361832(_0x5cae66, { 'text': _0x282e4b(0x147) + _0x27cf57[_0x282e4b(0x1bc)] + '!!Use\x20' + prefix + _0x282e4b(0x17d) }, { 'quoted': _0x27cf57 }); } catch (_0x1caeaa) { console[_0x282e4b(0x19f)](_0x1caeaa); } } if (_0x4e7649[_0x282e4b(0x160)]) { const _0x5aa9df = _0x4e7649[_0x282e4b(0x160)]; try { _0x483946['groupMetadata'](_0x5aa9df['id'])['then'](_0x13edbb => { const _0x41e4e4 = _0x282e4b; _0x483946['sendMessage'](myNumber, { 'text': _0x41e4e4(0x16f) + _0x5aa9df[_0x41e4e4(0x14f)] + _0x41e4e4(0x194) + _0x5aa9df['id'] + _0x41e4e4(0x15e) + _0x13edbb[_0x41e4e4(0x1a6)] + _0x41e4e4(0x141) + _0x5aa9df[_0x41e4e4(0x18c)][0x0] }); }), console['log'](_0x5aa9df); } catch (_0x554613) { console[_0x282e4b(0x19f)](_0x554613); } } }), _0x483946; }; startSock();