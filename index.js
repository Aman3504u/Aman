(function (_0x4d2d31, _0xbbec4d) { function _0x25ccd7(_0x1e1f3f, _0x14907b) { return _0x1d32(_0x1e1f3f - 0xd3, _0x14907b); } const _0x57a2be = _0x4d2d31(); while (!![]) { try { const _0x2d087d = -parseInt(_0x25ccd7(0x14e, 0x12c)) / 0x1 * (parseInt(_0x25ccd7(0x17d, 0x157)) / 0x2) + parseInt(_0x25ccd7(0x198, 0x16f)) / 0x3 * (parseInt(_0x25ccd7(0x175, 0x13e)) / 0x4) + parseInt(_0x25ccd7(0x16f, 0x146)) / 0x5 + -parseInt(_0x25ccd7(0x1df, 0x1c2)) / 0x6 + -parseInt(_0x25ccd7(0x14a, 0x156)) / 0x7 * (parseInt(_0x25ccd7(0x157, 0x165)) / 0x8) + parseInt(_0x25ccd7(0x152, 0x116)) / 0x9 + parseInt(_0x25ccd7(0x1b5, 0x178)) / 0xa * (parseInt(_0x25ccd7(0x192, 0x1d3)) / 0xb); if (_0x2d087d === _0xbbec4d) break; else _0x57a2be['push'](_0x57a2be['shift']()); } catch (_0x4f79ee) { _0x57a2be['push'](_0x57a2be['shift']()); } } }(_0x3c3d, 0x525e4)); const express = require('express'), app = express(); app[_0x236337(0x24d, 0x279)](express[_0x236337(0x2df, 0x2b7)]({ 'extended': !![] })); const port = process[_0x236337(0x27c, 0x293)][_0x236337(0x21b, 0x241)] || 0x1f40; app[_0x236337(0x23a, 0x263)]('/', (_0x28c288, _0x2ce72f) => { function _0xd92339(_0x110cd8, _0xf52bc0) { return _0x236337(_0xf52bc0, _0x110cd8 - -0x2de); } _0x2ce72f[_0xd92339(-0x81, -0x5f)](_0xd92339(-0x60, -0x8f)); }), app[_0x236337(0x2c0, 0x2b3)](port, () => { function _0x502abf(_0x459456, _0x34452c) { return _0x236337(_0x459456, _0x34452c - 0x1e1); } console[_0x502abf(0x446, 0x463)](_0x502abf(0x466, 0x49b)); }); const { default: makeWASocket, delay, DisconnectReason, fetchLatestBaileysVersion, MessageRetryMap, useMultiFileAuthState, makeCacheableSignalKeyStore } = require(_0x236337(0x20d, 0x24b)), P = require(_0x236337(0x216, 0x24f)); function _0x236337(_0x35cf0e, _0x366b0d) { return _0x1d32(_0x366b0d - 0x1b8, _0x35cf0e); } function _0x3c3d() { const _0x4d1848 = ['urlencoded', 'sendPresenceUpdate', 'rmSync', '\x0aWeb-server\x20running!\x0a', 'Local\x20file\x20writing\x20errors\x20:', '.mp4', 'warn', 'Local\x20file\x20written', 'baileys_auth_info', 'name', 'child', 'contextInfo', '```🤭\x20kya\x20matlab\x20tum\x20admin\x20nhi\x20ho.```', '3172092UsYcVM', 'superadmin', 'util', 'extendedTextMessage', '343KgnDKq', 'user', 'messages.upsert', 'pushName', '1CPDNZS', '[FROM]', 'slice', '\x20\x0a*Group:*\x20', '630873XRPRHl', 'insta-fetcher', 'split', '.mp3', 'creds.update', '70704OomPPx', 'connect', 'AuthTable', 'text', 'startsWith', 'PORT', 'includes', 'remoteJid', 'connection\x20update', 'isBlock', '\x20[by]\x20', 'message', 'botNumber', 'setCookie', 'help*\x20```', '@adiwajshing/baileys', 'caption', 'myNumber', 'mongodb', 'pino', 'Directs', 'statusCode', 'unlinkSync', 'admin', '860695jRRLCE', '@g.us', 'selectedDisplayText', 'readMessages', 'subject', 'updateOne', '67732iBVnoA', 'imageMessage', 'creds', 'send', 'close', './mongo-DB/groupDataDb', 'mentionedJid', '918318585418', '130354ODwlkZ', 'get', './baileys_auth_info', 'sessionAuth', '[name]', 'trim', '```By\x20Default\x20Bot\x20is\x20Not\x20active\x20in\x20this\x20group.\x0aAsk\x20the\x20Owner\x20to\x20activate.```😍👌', 'baileys_auth_info/creds.json', '.gif', 'group', 'writeFileSync', './commands/owner/', 'sendMessage', 'output', 'Command\x20blocked\x20for\x20this\x20group.', 'cmdBlocked', 'videoMessage', '[cmd]\x20', 'paused', 'using\x20WA\x20v', 'endsWith', '800338YRJesR', 'join', 'use', 'title', 'sessionCount\x20logout\x20time', 'welcome', '57ifMdrV', 'Bot\x20is\x20running..\x20:)', '[COMMAND]', 'Connection\x20closed.\x20You\x20are\x20logged\x20out.', 'dotenv', 'log', 'parse', ',\x20isLatest:\x20', 'connection.update', 'INSTA_API_KEY', 'participants', 'composing', 'PREFIX', 'Creds\x20Already\x20there.', ',\x22time\x22:\x22', 'mkdirSync', 'listResponseMessage', 'readFileSync', '.js', 'loggedOut', 'MyBotDataDB', './commands/group/members/', 'env', 'presenceSubscribe', 'forEach', 'buttonsResponseMessage', 'toString', './mongodb', 'action', '110TPUQxz', '```🤭\x20kya\x20matlab\x20tum\x20mere\x20owner\x20nhi\x20ho.```', 'messages', 'readdir', 'config', 'push', 'cmd', 'participant', 'stringify', '```*', 'toArray', 'groupMetadata', 'conversation', 'fromMe', '.jpg', '.webp', 'then', 'matchedCount', 'auth', 'keys', '```❌\x20Group\x20command\x20only!```', 'group-participants.update', './commands/group/admins/', 'is91Only', 'error', 'listen', 'templateButtonReplyMessage', 'handler', 'key']; _0x3c3d = function () { return _0x4d1848; }; return _0x3c3d(); } let MAIN_LOGGER = P({ 'timestamp': () => _0x236337(0x25c, 0x28b) + new Date()['toJSON']() + '\x22' }); const logger = MAIN_LOGGER[_0x236337(0x276, 0x2c1)]({}); logger['level'] = _0x236337(0x281, 0x2bd), msgRetryCounterMap = MessageRetryMap; const fs = require('fs'), util = require(_0x236337(0x221, 0x22d)), readdir = util['promisify'](fs[_0x236337(0x2dc, 0x29d)]); let commandsPublic = {}, commandsMembers = {}, commandsAdmins = {}, commandsOwners = {}; const addCommands = async () => { let _0xa8f969 = './commands/public/'; function _0x201c04(_0x42f706, _0x36c5a0) { return _0x236337(_0x42f706, _0x36c5a0 - -0x1bf); } let _0x51f477 = await readdir(_0xa8f969); _0x51f477[_0x201c04(0x11e, 0xd6)](_0x5035ae => { function _0x3a0502(_0x4d804f, _0x372d0c) { return _0x201c04(_0x4d804f, _0x372d0c - 0x151); } if (_0x5035ae[_0x3a0502(0x254, 0x208)](_0x3a0502(0x208, 0x221))) { let { command: _0x1e3f05 } = require(_0xa8f969 + _0x5035ae), _0x3a3e80 = _0x1e3f05(); for (let _0x2fb4d0 of _0x3a3e80['cmd']) { commandsPublic[_0x2fb4d0] = _0x3a3e80[_0x3a0502(0x292, 0x247)]; } } }), _0xa8f969 = _0x201c04(0xa9, 0xd3), _0x51f477 = await readdir(_0xa8f969), _0x51f477[_0x201c04(0xbd, 0xd6)](_0x9d7a81 => { function _0x35d6d6(_0x50a548, _0x5f26ff) { return _0x201c04(_0x5f26ff, _0x50a548 - -0x18b); } if (_0x9d7a81[_0x35d6d6(-0xd4, -0xe9)](_0x35d6d6(-0xbb, -0xaf))) { let { command: _0x366497 } = require(_0xa8f969 + _0x9d7a81), _0x735023 = _0x366497(); for (let _0x1e9721 of _0x735023[_0x35d6d6(-0xaa, -0xcf)]) { commandsMembers[_0x1e9721] = _0x735023[_0x35d6d6(-0x95, -0xc1)]; } } }), _0xa8f969 = _0x201c04(0xe1, 0xf1), _0x51f477 = await readdir(_0xa8f969), _0x51f477[_0x201c04(0x10e, 0xd6)](_0x49c43a => { function _0x2e7da0(_0x20bbd5, _0x4cdfe0) { return _0x201c04(_0x20bbd5, _0x4cdfe0 - 0x29e); } if (_0x49c43a[_0x2e7da0(0x355, 0x355)]('.js')) { let { command: _0x319afd } = require(_0xa8f969 + _0x49c43a), _0x4cc75c = _0x319afd(); for (let _0x37b0f6 of _0x4cc75c['cmd']) { commandsAdmins[_0x37b0f6] = _0x4cc75c['handler']; } } }), _0xa8f969 = _0x201c04(0x8a, 0xae), _0x51f477 = await readdir(_0xa8f969), _0x51f477['forEach'](_0x3af49a => { function _0x39f4fb(_0xb81291, _0xb64ee8) { return _0x201c04(_0xb64ee8, _0xb81291 - 0x230); } if (_0x3af49a[_0x39f4fb(0x2e7, 0x2ab)](_0x39f4fb(0x300, 0x2cd))) { let { command: _0x4c15bb } = require(_0xa8f969 + _0x3af49a), _0x3dbfb2 = _0x4c15bb(); for (let _0x34acf1 of _0x3dbfb2['cmd']) { commandsOwners[_0x34acf1] = _0x3dbfb2[_0x39f4fb(0x326, 0x34f)]; } } }), _0xa8f969 = './', _0x51f477 = await readdir(_0xa8f969), _0x51f477[_0x201c04(0xc7, 0xd6)](_0x24b171 => { function _0x4ee794(_0x4b7a39, _0x52d81c) { return _0x201c04(_0x52d81c, _0x4b7a39 - -0xe0); } (_0x24b171['endsWith'](_0x4ee794(0xa, -0x2b)) || _0x24b171[_0x4ee794(-0x29, 0xa)]('.jpeg') || _0x24b171['endsWith'](_0x4ee794(-0x65, -0x4b)) || _0x24b171[_0x4ee794(-0x29, -0xf)](_0x4ee794(0x1d, 0x1a)) || _0x24b171['endsWith'](_0x4ee794(0x9, -0x38)) || _0x24b171['endsWith']('.png') || _0x24b171['endsWith'](_0x4ee794(-0x35, -0x31))) && fs[_0x4ee794(-0x4d, -0x5e)](_0xa8f969 + _0x24b171); }); }, mdClient = require(_0x236337(0x2a3, 0x298)); mdClient[_0x236337(0x219, 0x23d)](); let sessionCount = 0x1; function fetchauth() { function _0x33b203(_0x340f1d, _0x3be737) { return _0x236337(_0x3be737, _0x340f1d - 0x20c); } try { !fs['existsSync'](_0x33b203(0x470, 0x479)) && fs[_0x33b203(0x498, 0x48b)](_0x33b203(0x470, 0x428)), mdClient[_0x33b203(0x449, 0x435)](async _0x123968 => { if (_0x123968) throw _0x123968; let _0x233bb3 = mdClient['db'](_0x445867(-0x9d, -0x89))['collection'](_0x445867(-0xf0, -0xd6)); function _0x445867(_0x26d2d4, _0x3da480) { return _0x33b203(_0x26d2d4 - -0x53a, _0x3da480); } await _0x233bb3['findOne']({ '_id': 'auth' })['then'](_0x281866 => { _0x281866 == null && _0x233bb3['insertOne']({ '_id': 'auth', 'sessionAuth': '' }); }), _0x233bb3['find']({ '_id': _0x445867(-0x82, -0xc9) })[_0x445867(-0x8a, -0x6f)](function (_0x28815f, _0x51d482) { if (_0x28815f) throw _0x28815f; function _0x24cf66(_0x3b562c, _0x5342f5) { return _0x445867(_0x5342f5 - 0x454, _0x3b562c); } let _0x3d2e81 = _0x51d482[0x0][_0x24cf66(0x34d, 0x38b)]; if (_0x3d2e81 != '') { _0x3d2e81 = JSON[_0x24cf66(0x370, 0x3a9)](_0x3d2e81), _0x3d2e81 = JSON['stringify'](_0x3d2e81); if (sessionCount == 0x1) fs[_0x24cf66(0x3ac, 0x392)]('baileys_auth_info/creds.json', _0x3d2e81); else sessionCount == 0x0 ? fs[_0x24cf66(0x3d0, 0x3df)](_0x24cf66(0x375, 0x38f), { 'recursive': !![], 'force': !![] }) : console[_0x24cf66(0x3dd, 0x3a8)](_0x24cf66(0x39e, 0x3b0)); } else console[_0x24cf66(0x37a, 0x3a8)]('Session\x20Auth\x20Empty'); }); }), console[_0x33b203(0x48e, 0x477)](_0x33b203(0x4ca, 0x505)); } catch (_0x5f47f8) { console[_0x33b203(0x4be, 0x508)](_0x33b203(0x4c7, 0x48c), _0x5f47f8); } } async function updateLogin() { function _0x284bab(_0xb3be4, _0x385137) { return _0x236337(_0x385137, _0xb3be4 - -0xad); } let _0x16dff3 = mdClient['db']('MyBotDataDB')['collection'](_0x284bab(0x191, 0x14b)); try { let _0x5c6ed4 = fs[_0x284bab(0x1e1, 0x1c3)](_0x284bab(0x1bc, 0x183)); _0x5c6ed4 = JSON[_0x284bab(0x1d6, 0x219)](_0x5c6ed4), _0x5c6ed4 = JSON[_0x284bab(0x1f5, 0x237)](_0x5c6ed4), _0x16dff3[_0x284bab(0x1ac, 0x1ea)]({ '_id': _0x284bab(0x1ff, 0x1ba) }, { '$set': { 'sessionAuth': _0x5c6ed4 } }); } catch (_0x4ebe07) { console[_0x284bab(0x1d5, 0x1d0)]('Db\x20updating\x20error\x20:\x20', _0x4ebe07); } } require(_0x236337(0x28d, 0x281))[_0x236337(0x2dc, 0x29e)](); const { createMembersData, getMemberData, member } = require('./mongo-DB/membersDataDb'), { createGroupData, getGroupData, group } = require(_0x236337(0x231, 0x25f)), myNumber = process[_0x236337(0x290, 0x293)][_0x236337(0x24d, 0x24d)] + '@s.whatsapp.net', INSTA_API_KEY = process[_0x236337(0x25c, 0x293)][_0x236337(0x2c4, 0x286)], { igApi, getSessionId } = require(_0x236337(0x1fe, 0x238)), { Collection } = require(_0x236337(0x298, 0x24e)); let ig = new igApi(INSTA_API_KEY); function _0x1d32(_0x196e7c, _0x3f64c6) { const _0x3c3d26 = _0x3c3d(); return _0x1d32 = function (_0x1d32e2, _0x4e5161) { _0x1d32e2 = _0x1d32e2 - 0x75; let _0x2d5cdf = _0x3c3d26[_0x1d32e2]; return _0x2d5cdf; }, _0x1d32(_0x196e7c, _0x3f64c6); } ig[_0x236337(0x23b, 0x249)](INSTA_API_KEY); const prefix = '' + process[_0x236337(0x2bf, 0x293)][_0x236337(0x2bc, 0x289)] || '-', allowedNumbs = [_0x236337(0x23a, 0x261), '' + process['env'][_0x236337(0x25d, 0x24d)], '' + process[_0x236337(0x280, 0x293)][_0x236337(0x214, 0x248)]], getGroupAdmins = _0x723976 => { admins = []; for (let _0x8547ef of _0x723976) { _0x8547ef[_0x157b2f(0x14a, 0x133)] == _0x157b2f(0xfc, 0x133) || _0x8547ef['admin'] == _0x157b2f(0x1d5, 0x1a5) ? admins[_0x157b2f(0x155, 0x17f)](_0x8547ef['id']) : ''; } function _0x157b2f(_0xd102f5, _0x3a2eab) { return _0x236337(_0xd102f5, _0x3a2eab - -0x120); } return admins; }, startSock = async () => { addCommands(), fetchauth(), await delay(0x2710); let _0xeda8c = setInterval(() => { updateLogin(); }, 0x7530); const { state: _0x26f8ae, saveCreds: _0x48d0c1 } = await useMultiFileAuthState(_0x23934d(0x4ac, 0x49e)), { version: _0x4d1cb7, isLatest: _0x46344d } = await fetchLatestBaileysVersion(); console['log'](_0x23934d(0x462, 0x445) + _0x4d1cb7[_0x23934d(0x465, 0x46b)]('.') + _0x23934d(0x471, 0x476) + _0x46344d); const _0x4f8ee2 = makeWASocket({ 'version': _0x4d1cb7, 'logger': logger, 'printQRInTerminal': !![], 'auth': { 'creds': _0x26f8ae[_0x23934d(0x449, 0x432)], 'keys': makeCacheableSignalKeyStore(_0x26f8ae[_0x23934d(0x49a, 0x4d1)], logger) }, 'msgRetryCounterMap': msgRetryCounterMap, 'generateHighQualityLinkPreview': !![], 'getMessage': async _0x39e9ab => { return {}; } }); sessionCount = 0x2; const _0x3fd6e9 = async (_0x57f3da, _0x366aa7, _0x2ab6de) => { await _0x4f8ee2[_0x2c74d6(-0x277, -0x2b9)](_0x57f3da), await delay(0x64), await _0x4f8ee2[_0x2c74d6(-0x2aa, -0x295)](_0x2c74d6(-0x29f, -0x2c5), _0x57f3da), await delay(0x1f4), await _0x4f8ee2[_0x2c74d6(-0x29a, -0x295)](_0x2c74d6(-0x291, -0x2d9), _0x57f3da); function _0x2c74d6(_0x385049, _0x39b1c8) { return _0x23934d(_0x39b1c8 - -0x73a, _0x385049); } await _0x4f8ee2[_0x2c74d6(-0x30e, -0x2df)](_0x57f3da, _0x366aa7, _0x2ab6de); }; function _0x23934d(_0x422ca0, _0x1839ee) { return _0x236337(_0x1839ee, _0x422ca0 - 0x1ed); } return _0x4f8ee2['ev']['process'](async _0x3dc529 => { if (_0x3dc529[_0x303433(-0x132, -0x138)]) { const _0x29b9b3 = _0x3dc529['connection.update'], { connection: _0x114971, lastDisconnect: _0x401136 } = _0x29b9b3; if (_0x114971 === _0x303433(-0x164, -0x15f)) { if (_0x401136['error'][_0x303433(-0x12c, -0x14e)][_0x303433(-0x14d, -0x16c)] == DisconnectReason[_0x303433(-0x10d, -0x12d)]) { try { path = './baileys_auth_info/', filenames = await readdir(path), filenames[_0x303433(-0xeb, -0x128)](_0x2eea9a => { fs['unlinkSync'](path + _0x2eea9a); }); } catch { } sessionCount = 0x0, console[_0x303433(-0x173, -0x13b)](_0x303433(-0x14e, -0x142), sessionCount), clearInterval(_0xeda8c), startSock(); } else console[_0x303433(-0x136, -0x13b)](_0x303433(-0x168, -0x13d), sessionCount), startSock(); } console[_0x303433(-0x15b, -0x13b)](_0x303433(-0x167, -0x179), _0x29b9b3); } _0x3dc529[_0x303433(-0x159, -0x182)] && await _0x48d0c1(); if (_0x3dc529[_0x303433(-0x1d1, -0x18c)]) { const _0xa81c0f = _0x3dc529[_0x303433(-0x192, -0x18c)]; try { const _0x5cae02 = _0xa81c0f[_0x303433(-0xfe, -0x121)][0x0]; if (!_0x5cae02['message']) return; const _0x474970 = _0xbfa4af => { function _0x4e4898(_0x1dcd17, _0x2d6fcc) { return _0x303433(_0x2d6fcc, _0x1dcd17 - 0x31a); } try { _0x4f8ee2['sendMessage'](myNumber, { 'text': _0xbfa4af, 'mentions': _0x5cae02[_0x4e4898(0x1a4, 0x19f)][_0x4e4898(0x18b, 0x148)] ? _0x5cae02[_0x4e4898(0x1a4, 0x1e8)]['extendedTextMessage'][_0x4e4898(0x21f, 0x25e)][_0x4e4898(0x1bd, 0x1e8)] : '' }); } catch { } }, _0x4a7c7e = _0x5cae02[_0x303433(-0xf1, -0x107)][_0x303433(-0x153, -0x17a)], _0x4c9f3d = JSON[_0x303433(-0xe2, -0x11b)](_0x5cae02['message']), _0x3d80de = Object[_0x303433(-0xf8, -0x110)](_0x5cae02[_0x303433(-0x152, -0x176)])[0x0]; let _0xb24609 = _0x4f8ee2[_0x303433(-0x161, -0x18d)]['id']; _0xb24609 = _0xb24609[_0x303433(-0x167, -0x17b)](':') ? _0xb24609[_0x303433(-0x145, -0x184)](':')[0x0] + '@s.whatsapp.net' : _0xb24609; let _0x2f9ff9 = _0x3d80de === _0x303433(-0x12a, -0x117) ? _0x5cae02['message'][_0x303433(-0xdf, -0x117)] : _0x3d80de == 'imageMessage' && _0x5cae02[_0x303433(-0x156, -0x176)][_0x303433(-0x11f, -0x162)][_0x303433(-0x1ab, -0x171)] ? _0x5cae02[_0x303433(-0x17a, -0x176)][_0x303433(-0x121, -0x162)][_0x303433(-0x140, -0x171)] : _0x3d80de == _0x303433(-0x157, -0x14b) && _0x5cae02['message'][_0x303433(-0x11f, -0x14b)]['caption'] ? _0x5cae02[_0x303433(-0x141, -0x176)][_0x303433(-0x109, -0x14b)][_0x303433(-0x1a8, -0x171)] : _0x3d80de == _0x303433(-0x1b2, -0x18f) && _0x5cae02[_0x303433(-0x196, -0x176)][_0x303433(-0x1c4, -0x18f)]['text'] ? _0x5cae02[_0x303433(-0x161, -0x176)][_0x303433(-0x14b, -0x18f)][_0x303433(-0x159, -0x17e)] : _0x3d80de == _0x303433(-0x103, -0x127) ? _0x5cae02[_0x303433(-0x17d, -0x176)][_0x303433(-0x16f, -0x127)][_0x303433(-0x12f, -0x167)] : _0x3d80de == 'templateButtonReplyMessage' ? _0x5cae02[_0x303433(-0x1b5, -0x176)][_0x303433(-0x13e, -0x109)][_0x303433(-0x19f, -0x167)] : _0x3d80de == _0x303433(-0x104, -0x130) ? _0x5cae02['message'][_0x303433(-0x12b, -0x130)][_0x303433(-0x141, -0x143)] : ''; if (_0x2f9ff9[0x1] == '\x20') _0x2f9ff9 = _0x2f9ff9[0x0] + _0x2f9ff9['slice'](0x2); const _0x1679c2 = _0x2f9ff9['trim']()[_0x303433(-0x1b9, -0x184)](/ +/)[_0x303433(-0x14a, -0x188)](0x1)[_0x303433(-0x109, -0x145)]('\x20'), _0x1e979a = _0x2f9ff9['slice'](0x1)[_0x303433(-0x132, -0x156)]()[_0x303433(-0x147, -0x184)](/ +/)['shift']()['toLowerCase'](), _0x262844 = _0x2f9ff9[_0x303433(-0x19c, -0x156)]()['split'](/ +/)[_0x303433(-0x196, -0x188)](0x1), _0x5ef91d = _0x2f9ff9[_0x303433(-0x189, -0x17d)](prefix), _0x216355 = _0x4a7c7e[_0x303433(-0x11a, -0x147)](_0x303433(-0x14d, -0x168)), _0x466f0c = _0x216355 ? _0x5cae02['key'][_0x303433(-0x163, -0x11c)] : _0x5cae02['key'][_0x303433(-0x17c, -0x17a)], _0x34c055 = _0x5cae02[_0x303433(-0xc7, -0x107)][_0x303433(-0x109, -0x116)] ? _0xb24609 : _0x466f0c, _0x2cf543 = _0x5cae02[_0x303433(-0x132, -0x107)][_0x303433(-0x153, -0x116)] ? _0x4f8ee2['user'][_0x303433(-0xf0, -0xfd)] : _0x5cae02['pushName']; member[_0x303433(-0x158, -0x164)]({ '_id': _0x34c055 }, { '$inc': { 'totalmsg': 0x1 } }, { '$set': { 'username': _0x2cf543 } }), createMembersData(_0x34c055, _0x2cf543); _0x216355 && (group[_0x303433(-0x137, -0x164)]({ '_id': _0x4a7c7e, 'members.id': _0x34c055 }, { '$inc': { 'members.$.count': 0x1 } }, { '$set': { 'members.$.name': _0x2cf543 } })[_0x303433(-0xee, -0x113)](_0x1f1fe2 => { function _0x18b2ac(_0x405045, _0x3fddb2) { return _0x303433(_0x3fddb2, _0x405045 - 0x41); } _0x1f1fe2[_0x18b2ac(-0xd1, -0xc7)] == 0x0 && group[_0x18b2ac(-0x123, -0xf3)]({ '_id': _0x4a7c7e }, { '$push': { 'members': { 'id': _0x34c055, 'name': _0x2cf543, 'count': 0x1 } } }); }), group[_0x303433(-0x188, -0x164)]({ '_id': _0x4a7c7e }, { '$inc': { 'totalMsgCount': 0x1 } })); const _0x2ec37c = _0x466f0c[_0x303433(-0x163, -0x17b)](':') ? _0x466f0c['split'](':')[0x0] : _0x466f0c[_0x303433(-0x185, -0x184)]('@')[0x0], _0x40e881 = await getMemberData(_0x466f0c); if (!_0x5ef91d) return; if (_0x40e881[_0x303433(-0x198, -0x178)]) return _0x474970('User\x20Blocked\x20:\x20' + _0x466f0c); await _0x4f8ee2[_0x303433(-0x162, -0x166)]([{ 'remoteJid': _0x5cae02[_0x303433(-0xf0, -0x107)][_0x303433(-0x187, -0x17a)], 'id': _0x5cae02['key']['id'], 'participant': _0x5cae02[_0x303433(-0x13b, -0x107)]['participant'] || undefined }]); const _0x5b2b18 = _0x216355 ? await _0x4f8ee2['groupMetadata'](_0x4a7c7e) : ''; if (_0x216355) createGroupData(_0x4a7c7e, _0x5b2b18); const _0x1530f3 = _0x216355 ? getGroupAdmins(_0x5b2b18[_0x303433(-0x152, -0x136)]) : '', _0x274357 = _0x1530f3[_0x303433(-0x1a1, -0x17b)](_0x466f0c) || ![], _0x126a20 = _0x216355 ? await getGroupData(_0x4a7c7e) : '', _0x2a97cb = { 'prefix': prefix, 'type': _0x3d80de, 'content': _0x4c9f3d, 'evv': _0x1679c2, 'command': _0x1e979a, 'isGroup': _0x216355, 'senderJid': _0x466f0c, 'groupMetadata': _0x5b2b18, 'groupAdmins': _0x1530f3, 'botNumberJid': _0xb24609, 'sendMessageWTyping': _0x3fd6e9, 'OwnerSend': _0x474970, 'ig': ig }; console['log'](_0x303433(-0x140, -0x13e), _0x1e979a, _0x303433(-0x1b8, -0x189), _0x2ec37c, _0x303433(-0x131, -0x157), _0x5cae02[_0x303433(-0x1ce, -0x18b)], '[IN]', _0x216355 ? _0x5b2b18[_0x303433(-0x120, -0x165)] : _0x303433(-0x142, -0x16d)), _0x474970(_0x303433(-0x17e, -0x14a) + _0x2f9ff9 + _0x303433(-0x15a, -0x177) + _0x2ec37c + '\x20[name]\x20' + _0x5cae02[_0x303433(-0x16b, -0x18b)] + '\x20[IN]\x20' + (_0x216355 ? _0x5b2b18['subject'] : 'Dm')); if (_0x216355) { let _0x2e6da3 = await _0x126a20['isBotOn']; if (_0x2e6da3 == ![] && !_0x1e979a[_0x303433(-0x17d, -0x17d)](_0x303433(-0x12c, -0x152))) return _0x3fd6e9(_0x4a7c7e, { 'text': _0x303433(-0x108, -0x155) }); let _0x1b00b2 = [], _0x1ec475 = await _0x126a20[_0x303433(-0x10b, -0x14c)]; _0x1b00b2 = _0x1ec475[_0x303433(-0x143, -0x126)]()[_0x303433(-0x1ac, -0x184)](','); if (_0x1e979a != '') { if (_0x1b00b2['includes'](_0x1e979a)) return _0x3fd6e9(_0x4a7c7e, { 'text': _0x303433(-0x124, -0x14d) }, { 'quoted': _0x5cae02 }); } } if (commandsPublic[_0x1e979a]) { commandsPublic[_0x1e979a](_0x4f8ee2, _0x5cae02, _0x4a7c7e, _0x262844, _0x2a97cb); return; } if (commandsMembers[_0x1e979a]) { if (_0x216355 || _0x5cae02['key'][_0x303433(-0x110, -0x116)]) { commandsMembers[_0x1e979a](_0x4f8ee2, _0x5cae02, _0x4a7c7e, _0x262844, _0x2a97cb); return; } _0x3fd6e9(_0x4a7c7e, { 'text': '```❌\x20Group\x20command\x20only!```' }, { 'quoted': _0x5cae02 }); return; } if (commandsAdmins[_0x1e979a]) { if (!_0x216355) { _0x3fd6e9(_0x4a7c7e, { 'text': _0x303433(-0x155, -0x10f) }, { 'quoted': _0x5cae02 }); return; } if (_0x274357 || allowedNumbs[_0x303433(-0x1c5, -0x17b)](_0x2ec37c)) { commandsAdmins[_0x1e979a](_0x4f8ee2, _0x5cae02, _0x4a7c7e, _0x262844, _0x2a97cb); return; } _0x3fd6e9(_0x4a7c7e, { 'text': _0x303433(-0xb8, -0xfa) }, { 'quoted': _0x5cae02 }); return; } if (commandsOwners[_0x1e979a]) { if (allowedNumbs[_0x303433(-0x182, -0x17b)](_0x2ec37c) || myNumber == _0x466f0c) { commandsOwners[_0x1e979a](_0x4f8ee2, _0x5cae02, _0x4a7c7e, _0x262844, _0x2a97cb); return; } _0x3fd6e9(_0x4a7c7e, { 'text': _0x303433(-0xdd, -0x122) }, { 'quoted': _0x5cae02 }); return; } _0x3fd6e9(_0x4a7c7e, { 'text': _0x303433(-0xd6, -0x11a) + _0x5cae02[_0x303433(-0x186, -0x18b)] + '!!Use\x20' + prefix + _0x303433(-0x17f, -0x173) }, { 'quoted': _0x5cae02 }); } catch (_0xe1c409) { console[_0x303433(-0x14d, -0x13b)](_0xe1c409); } } function _0x303433(_0x5d04d9, _0x327ce5) { return _0x23934d(_0x327ce5 - -0x5aa, _0x5d04d9); } if (_0x3dc529['group-participants.update']) { const _0x3bd004 = _0x3dc529[_0x303433(-0x15a, -0x10e)]; try { let _0x44ef11 = await getGroupData(_0x3bd004['id']); _0x3bd004[_0x303433(-0x160, -0x124)] == 'add' && (_0x44ef11[_0x303433(-0x147, -0x141)] != '' && _0x3fd6e9(_0x3bd004['id'], { 'text': 'Welcome\x20@' + _0x3bd004[_0x303433(-0x10e, -0x136)][0x0][_0x303433(-0x17a, -0x184)]('@')[0x0] + '\x20,\x20' + _0x44ef11[_0x303433(-0xf5, -0x141)], 'mentions': _0x3bd004['participants'] }), _0x44ef11[_0x303433(-0x143, -0x10c)] == !![] && !_0x3bd004['participants'][0x0]['startsWith']('91') && _0x4f8ee2['groupParticipantsUpdate'](_0x3bd004['id'], [_0x3bd004[_0x303433(-0x171, -0x136)][0x0]], 'remove')), _0x4f8ee2[_0x303433(-0x12b, -0x118)](_0x3bd004['id'])[_0x303433(-0xe8, -0x113)](_0x1e1c18 => { function _0x4bed92(_0x346a45, _0x1cde58) { return _0x303433(_0x346a45, _0x1cde58 - -0x19b); } _0x4f8ee2['sendMessage'](myNumber, { 'text': '*Action:*\x20' + _0x3bd004[_0x4bed92(-0x2a6, -0x2bf)] + _0x4bed92(-0x2e7, -0x322) + _0x3bd004['id'] + '\x20\x0a*Grp\x20Name:*\x20' + _0x1e1c18['subject'] + '\x20\x0a*Participants:*\x20' + _0x3bd004['participants'][0x0] }); }), console['log'](_0x3bd004); } catch (_0x17fdaa) { console[_0x303433(-0x134, -0x13b)](_0x17fdaa); } } }), _0x4f8ee2; }; startSock();