(function (_0x470795, _0x3d0473) { function _0x5a1647(_0x5c9006, _0x8ff1d) { return _0x26bd(_0x8ff1d - -0x18f, _0x5c9006); } const _0x3514f8 = _0x470795(); while (!![]) { try { const _0x3c1640 = -parseInt(_0x5a1647(-0x52, -0x1d)) / 0x1 * (parseInt(_0x5a1647(-0x4c, -0x34)) / 0x2) + -parseInt(_0x5a1647(0x14, 0x1d)) / 0x3 * (parseInt(_0x5a1647(-0x10, 0x20)) / 0x4) + -parseInt(_0x5a1647(-0x33, -0x1a)) / 0x5 * (-parseInt(_0x5a1647(-0x11, -0x3e)) / 0x6) + -parseInt(_0x5a1647(-0xb, -0x15)) / 0x7 * (parseInt(_0x5a1647(-0x4c, -0x13)) / 0x8) + parseInt(_0x5a1647(-0x34, -0x5d)) / 0x9 * (-parseInt(_0x5a1647(-0x2c, -0x69)) / 0xa) + -parseInt(_0x5a1647(-0x1f, 0x12)) / 0xb * (-parseInt(_0x5a1647(-0x3b, -0x2a)) / 0xc) + parseInt(_0x5a1647(0x4, 0x26)) / 0xd; if (_0x3c1640 === _0x3d0473) break; else _0x3514f8['push'](_0x3514f8['shift']()); } catch (_0x1b1af3) { _0x3514f8['push'](_0x3514f8['shift']()); } } }(_0xc573, 0xa9b74)); const express = require(_0x3cb995(0x123, 0x139)), app = express(); app[_0x3cb995(0xce, 0x116)](express['urlencoded']({ 'extended': !![] })); const port = process[_0x3cb995(0xb9, 0xf2)][_0x3cb995(0x12f, 0x101)] || 0x1f40; app[_0x3cb995(0x111, 0x106)]('/', (_0x188b80, _0x1fea4e) => { function _0x489375(_0x3b5422, _0x5d7660) { return _0x3cb995(_0x5d7660, _0x3b5422 - -0x18a); } _0x1fea4e[_0x489375(-0x2f, 0x10)]('Bot\x20is\x20running..\x20:)'); }), app['listen'](port, () => { function _0x4fcb8e(_0xfd7fc9, _0x1d78b3) { return _0x3cb995(_0xfd7fc9, _0x1d78b3 - 0x1a2); } console[_0x4fcb8e(0x2f3, 0x2e5)](_0x4fcb8e(0x2ee, 0x2b2)); }); function _0x3cb995(_0x4cb277, _0xb32548) { return _0x26bd(_0xb32548 - -0x3f, _0x4cb277); } const { default: makeWASocket, delay, DisconnectReason, fetchLatestBaileysVersion, MessageRetryMap, useMultiFileAuthState, makeCacheableSignalKeyStore } = require(_0x3cb995(0x165, 0x178)), P = require('pino'); let MAIN_LOGGER = P({ 'timestamp': () => ',\x22time\x22:\x22' + new Date()[_0x3cb995(0xe2, 0xe5)]() + '\x22' }); const logger = MAIN_LOGGER[_0x3cb995(0xf3, 0xf1)]({}); function _0xc573() { const _0x37d191 = ['slice', 'rmSync', 'conversation', 'creds.update', '\x0aWeb-server\x20running!\x0a', 'statusCode', '59196YJPvfC', 'toLowerCase', 'messages.upsert', 'forEach', 'use', 'subject', 'config', 'messages', 'pushName', '*Action:*\x20', '4qfmraO', 'auth', 'handler', 'stringify', 'connection.update', 'text', 'readMessages', 'Session\x20Auth\x20Empty', 'MyBotDataDB', './baileys_auth_info', '912264wYojiu', '```*', 'error', '918318585418', 'action', '\x20[by]\x20', 'imageMessage', 'cmd', '[cmd]\x20', 'readFileSync', 'PREFIX', 'existsSync', 'cmdBlocked', '30748hQKiDw', 'myNumber', 'listResponseMessage', '370LzitmO', 'shift', 'push', 'express', 'close', '369789fkqmwW', 'insta-fetcher', '200MHyqka', '@g.us', 'join', 'help*\x20```', 'creds', 'split', 'log', 'writeFileSync', 'output', '```By\x20Default\x20Bot\x20is\x20Not\x20active\x20in\x20this\x20group.\x0aAsk\x20the\x20Owner\x20to\x20activate.```😍👌', 'then', 'extendedTextMessage', '.jpg', 'add', 'includes', 'botNumber', 'sessionAuth', 'composing', '@s.whatsapp.net', 'presenceSubscribe', 'buttonsResponseMessage', '[COMMAND]', 'endsWith', 'warn', 'groupParticipantsUpdate', 'Local\x20file\x20written', 'insertOne', 'mongodb', 'user', 'templateButtonReplyMessage', 'send', 'sendPresenceUpdate', 'key', '.webp', 'baileys_auth_info/creds.json', 'trim', './commands/group/members/', '165svWQYM', '.mp4', '[FROM]', 'mentionedJid', 'baileys_auth_info', 'using\x20WA\x20v', 'sendMessage', 'groupMetadata', 'Local\x20file\x20writing\x20errors\x20:', 'loggedOut', './mongodb', '303zNlPjY', 'parse', '```❌\x20Group\x20command\x20only!```', '25468WkdyuT', '```🤭\x20kya\x20matlab\x20tum\x20mere\x20owner\x20nhi\x20ho.```', 'message', 'Directs', 'connect', 'videoMessage', '23436712minzLv', '.js', '@adiwajshing/baileys', 'util', 'toJSON', '\x20[IN]\x20', '20geDyUT', 'fromMe', 'level', 'updateOne', 'isBlock', 'collection', 'group-participants.update', 'keys', './commands/owner/', './commands/group/admins/', 'child', 'env', '4287798HlIGMx', '.png', 'User\x20Blocked\x20:\x20', 'connection\x20update', '\x20\x0a*Grp\x20Name:*\x20', 'participant', 'title', 'caption', '[IN]', 'INSTA_API_KEY', 'Creds\x20Already\x20there.', 'admin', 'startsWith', 'remoteJid', 'PORT', 'participants', 'selectedDisplayText', 'AuthTable', 'contextInfo', 'get', 'is91Only', '.gif', 'readdir', './commands/public/', '\x20\x0a*Group:*\x20']; _0xc573 = function () { return _0x37d191; }; return _0xc573(); } logger[_0x3cb995(0xe2, 0xe9)] = _0x3cb995(0x178, 0x154), msgRetryCounterMap = MessageRetryMap; const fs = require('fs'), util = require(_0x3cb995(0x19b, 0x179)), readdir = util['promisify'](fs[_0x3cb995(0xc5, 0x109)]); let commandsPublic = {}, commandsMembers = {}, commandsAdmins = {}, commandsOwners = {}; const addCommands = async () => { let _0x20935c = _0x38d71f(0x1d8, 0x1a7), _0x136c42 = await readdir(_0x20935c); _0x136c42[_0x38d71f(0x1e1, 0x1b2)](_0x33f963 => { function _0x6b16c(_0x3147be, _0x16d03c) { return _0x38d71f(_0x3147be, _0x16d03c - -0x40b); } if (_0x33f963[_0x6b16c(-0x20f, -0x21b)]('.js')) { let { command: _0x5bb5b4 } = require(_0x20935c + _0x33f963), _0x4edbc7 = _0x5bb5b4(); for (let _0xe69272 of _0x4edbc7[_0x6b16c(-0x206, -0x241)]) { commandsPublic[_0xe69272] = _0x4edbc7[_0x6b16c(-0x25f, -0x250)]; } } }), _0x20935c = _0x38d71f(0x1cd, 0x1fe), _0x136c42 = await readdir(_0x20935c), _0x136c42[_0x38d71f(0x1ac, 0x1b2)](_0x30710d => { function _0x239166(_0x98c81a, _0x491396) { return _0x38d71f(_0x491396, _0x98c81a - 0x92); } if (_0x30710d[_0x239166(0x282, 0x246)](_0x239166(0x2a6, 0x2af))) { let { command: _0x21faa3 } = require(_0x20935c + _0x30710d), _0x50e6e5 = _0x21faa3(); for (let _0x3040c6 of _0x50e6e5[_0x239166(0x25c, 0x29c)]) { commandsMembers[_0x3040c6] = _0x50e6e5[_0x239166(0x24d, 0x290)]; } } }), _0x20935c = _0x38d71f(0x1b0, 0x18d), _0x136c42 = await readdir(_0x20935c), _0x136c42[_0x38d71f(0x1e8, 0x1b2)](_0x358471 => { function _0x302e18(_0x801d11, _0x3c6718) { return _0x38d71f(_0x3c6718, _0x801d11 - -0x3d); } if (_0x358471[_0x302e18(0x1b3, 0x180)](_0x302e18(0x1d7, 0x1b4))) { let { command: _0x552dd5 } = require(_0x20935c + _0x358471), _0x120c68 = _0x552dd5(); for (let _0x155a05 of _0x120c68[_0x302e18(0x18d, 0x1cb)]) { commandsAdmins[_0x155a05] = _0x120c68[_0x302e18(0x17e, 0x155)]; } } }), _0x20935c = _0x38d71f(0x1c5, 0x18c), _0x136c42 = await readdir(_0x20935c), _0x136c42[_0x38d71f(0x187, 0x1b2)](_0x119870 => { function _0x55bbb2(_0x2b510f, _0x343770) { return _0x38d71f(_0x343770, _0x2b510f - 0x14b); } if (_0x119870['endsWith'](_0x55bbb2(0x35f, 0x36b))) { let { command: _0x44984d } = require(_0x20935c + _0x119870), _0x3107a2 = _0x44984d(); for (let _0x35bd6c of _0x3107a2[_0x55bbb2(0x315, 0x34f)]) { commandsOwners[_0x35bd6c] = _0x3107a2['handler']; } } }), _0x20935c = './'; function _0x38d71f(_0x3a3d3f, _0x1237d1) { return _0x3cb995(_0x3a3d3f, _0x1237d1 - 0x9d); } _0x136c42 = await readdir(_0x20935c), _0x136c42[_0x38d71f(0x183, 0x1b2)](_0x4ed3f1 => { function _0x496381(_0x115f62, _0xab44ac) { return _0x38d71f(_0xab44ac, _0x115f62 - 0x3c); } (_0x4ed3f1['endsWith'](_0x496381(0x237, 0x1f9)) || _0x4ed3f1['endsWith']('.jpeg') || _0x4ed3f1[_0x496381(0x22c, 0x1fb)]('.mp3') || _0x4ed3f1['endsWith'](_0x496381(0x23c, 0x27d)) || _0x4ed3f1[_0x496381(0x22c, 0x246)](_0x496381(0x222, 0x227)) || _0x4ed3f1[_0x496381(0x22c, 0x25f)](_0x496381(0x1cd, 0x1d9)) || _0x4ed3f1[_0x496381(0x22c, 0x265)](_0x496381(0x1e1, 0x1b3))) && fs['unlinkSync'](_0x20935c + _0x4ed3f1); }); }, mdClient = require(_0x3cb995(0x16d, 0x16c)); mdClient[_0x3cb995(0x172, 0x174)](); let sessionCount = 0x1; function fetchauth() { function _0x3b1e6f(_0x361ea9, _0x46aa08) { return _0x3cb995(_0x46aa08, _0x361ea9 - -0x2a5); } try { !fs[_0x3b1e6f(-0x174, -0x14a)](_0x3b1e6f(-0x180, -0x184)) && fs['mkdirSync'](_0x3b1e6f(-0x180, -0x13d)), mdClient[_0x3b1e6f(-0x131, -0x13b)](async _0x43434b => { if (_0x43434b) throw _0x43434b; function _0x10dc5e(_0x48b003, _0x3b788c) { return _0x3b1e6f(_0x3b788c - 0xf4, _0x48b003); } let _0x143479 = mdClient['db'](_0x10dc5e(-0xbe, -0x8d))[_0x10dc5e(-0x98, -0xc5)](_0x10dc5e(-0xd6, -0xad)); await _0x143479['findOne']({ '_id': _0x10dc5e(-0x6b, -0x94) })[_0x10dc5e(-0x6e, -0x6a)](_0x12afc2 => { function _0x5823f7(_0x165a0f, _0x36760e) { return _0x10dc5e(_0x36760e, _0x165a0f - 0x5bc); } _0x12afc2 == null && _0x143479[_0x5823f7(0x562, 0x5a2)]({ '_id': _0x5823f7(0x528, 0x507), 'sessionAuth': '' }); }), _0x143479['find']({ '_id': 'auth' })['toArray'](function (_0x923775, _0x50bac6) { function _0x960983(_0x20b0a8, _0x3a7754) { return _0x10dc5e(_0x3a7754, _0x20b0a8 - 0x169); } if (_0x923775) throw _0x923775; let _0x4e56ce = _0x50bac6[0x0][_0x960983(0x105, 0x140)]; if (_0x4e56ce != '') { _0x4e56ce = JSON[_0x960983(0x126, 0x134)](_0x4e56ce), _0x4e56ce = JSON[_0x960983(0xd7, 0xd4)](_0x4e56ce); if (sessionCount == 0x1) fs[_0x960983(0xfc, 0xcb)](_0x960983(0x117, 0xf3), _0x4e56ce); else sessionCount == 0x0 ? fs[_0x960983(0xc5, 0xfd)](_0x960983(0x117, 0x156), { 'recursive': !![], 'force': !![] }) : console[_0x960983(0xfb, 0x125)](_0x960983(0xb5, 0xe4)); } else console['log'](_0x960983(0xdb, 0xfe)); }); }), console['log'](_0x3b1e6f(-0x14f, -0x16c)); } catch (_0x56ebfe) { console['error'](_0x3b1e6f(-0x13b, -0x176), _0x56ebfe); } } async function updateLogin() { let _0x40e79f = mdClient['db'](_0x2c763d(-0x17e, -0x14a))[_0x2c763d(-0x138, -0x182)](_0x2c763d(-0x188, -0x16a)); function _0x2c763d(_0x7a3307, _0x363d3d) { return _0x3cb995(_0x7a3307, _0x363d3d - -0x26e); } try { let _0x1efc59 = fs[_0x2c763d(-0x105, -0x13f)]('baileys_auth_info/creds.json'); _0x1efc59 = JSON[_0x2c763d(-0x108, -0x100)](_0x1efc59), _0x1efc59 = JSON[_0x2c763d(-0x162, -0x14f)](_0x1efc59), _0x40e79f[_0x2c763d(-0x13c, -0x184)]({ '_id': 'auth' }, { '$set': { 'sessionAuth': _0x1efc59 } }); } catch (_0x4bed21) { console[_0x2c763d(-0x123, -0x12b)]('Db\x20updating\x20error\x20:\x20', _0x4bed21); } } require('dotenv')[_0x3cb995(0xfc, 0x118)](); const { createMembersData, getMemberData, member } = require('./mongo-DB/membersDataDb'), { createGroupData, getGroupData, group } = require('./mongo-DB/groupDataDb'), myNumber = process[_0x3cb995(0xb8, 0xf2)][_0x3cb995(0x157, 0x134)] + _0x3cb995(0x14d, 0x14f), INSTA_API_KEY = process[_0x3cb995(0x12e, 0xf2)][_0x3cb995(0x100, 0xfc)], { igApi, getSessionId } = require(_0x3cb995(0x152, 0x13c)), { Collection } = require(_0x3cb995(0x110, 0x158)); let ig = new igApi(INSTA_API_KEY); function _0x26bd(_0x2ee65c, _0x5120eb) { const _0xc573bb = _0xc573(); return _0x26bd = function (_0x26bd6d, _0x452aa6) { _0x26bd6d = _0x26bd6d - 0x124; let _0x83ccbe = _0xc573bb[_0x26bd6d]; return _0x83ccbe; }, _0x26bd(_0x2ee65c, _0x5120eb); } ig['setCookie'](INSTA_API_KEY); const prefix = '' + process[_0x3cb995(0xc7, 0xf2)][_0x3cb995(0x124, 0x130)] || '-', allowedNumbs = [_0x3cb995(0x146, 0x129), '' + process[_0x3cb995(0xbf, 0xf2)][_0x3cb995(0x152, 0x134)], '' + process[_0x3cb995(0xf6, 0xf2)][_0x3cb995(0x193, 0x14c)]], getGroupAdmins = _0x8527eb => { function _0xc067f7(_0x4b3673, _0x3174ba) { return _0x3cb995(_0x3174ba, _0x4b3673 - -0x103); } admins = []; for (let _0x44d9ba of _0x8527eb) { _0x44d9ba[_0xc067f7(-0x5, -0x13)] == _0xc067f7(-0x5, -0x37) || _0x44d9ba[_0xc067f7(-0x5, 0x1d)] == 'superadmin' ? admins[_0xc067f7(0x35, 0x7c)](_0x44d9ba['id']) : ''; } return admins; }, startSock = async () => { addCommands(), fetchauth(), await delay(0x2710); let _0x5b124f = setInterval(() => { updateLogin(); }, 0x7530); const { state: _0x59e828, saveCreds: _0x34bbd6 } = await useMultiFileAuthState(_0x1ba6a4(-0x5d, -0x1a)), { version: _0x16a453, isLatest: _0x257cb7 } = await fetchLatestBaileysVersion(); console[_0x1ba6a4(-0x70, -0x3d)](_0x1ba6a4(-0x2, -0x19) + _0x16a453[_0x1ba6a4(-0x49, -0x41)]('.') + ',\x20isLatest:\x20' + _0x257cb7); const _0x4b5e7f = makeWASocket({ 'version': _0x16a453, 'logger': logger, 'printQRInTerminal': !![], 'auth': { 'creds': _0x59e828[_0x1ba6a4(-0x83, -0x3f)], 'keys': makeCacheableSignalKeyStore(_0x59e828['keys'], logger) }, 'msgRetryCounterMap': msgRetryCounterMap, 'generateHighQualityLinkPreview': !![], 'getMessage': async _0x5309f2 => { return {}; } }); sessionCount = 0x2; const _0x502963 = async (_0x73b29d, _0x4f162c, _0xe0c27c) => { await _0x4b5e7f[_0x48a186(0xf1, 0x13c)](_0x73b29d), await delay(0x64); function _0x48a186(_0x3e0321, _0x41c9fa) { return _0x1ba6a4(_0x41c9fa, _0x3e0321 - 0x121); } await _0x4b5e7f[_0x48a186(0xfd, 0x107)](_0x48a186(0xef, 0xfd), _0x73b29d), await delay(0x1f4), await _0x4b5e7f[_0x48a186(0xfd, 0x120)]('paused', _0x73b29d), await _0x4b5e7f['sendMessage'](_0x73b29d, _0x4f162c, _0xe0c27c); }; function _0x1ba6a4(_0x536f67, _0x1995f2) { return _0x3cb995(_0x536f67, _0x1995f2 - -0x180); } return _0x4b5e7f['ev']['process'](async _0x459cfa => { function _0x47a527(_0x8a13c4, _0x5c38c2) { return _0x1ba6a4(_0x8a13c4, _0x5c38c2 - 0x2b6); } if (_0x459cfa[_0x47a527(0x230, 0x256)]) { const _0x197491 = _0x459cfa['connection.update'], { connection: _0x3abe0b, lastDisconnect: _0x519579 } = _0x197491; _0x3abe0b === _0x47a527(0x268, 0x270) && (_0x519579[_0x47a527(0x263, 0x25e)][_0x47a527(0x23b, 0x27b)][_0x47a527(0x22f, 0x247)] == DisconnectReason[_0x47a527(0x2e1, 0x2a1)] ? (sessionCount = 0x0, console['log']('sessionCount\x20logout\x20time', sessionCount), clearInterval(_0x5b124f), startSock()) : (console[_0x47a527(0x233, 0x279)]('Connection\x20closed.\x20You\x20are\x20logged\x20out.', sessionCount), startSock())), console[_0x47a527(0x276, 0x279)](_0x47a527(0x240, 0x22c), _0x197491); } _0x459cfa[_0x47a527(0x20d, 0x245)] && await _0x34bbd6(); if (_0x459cfa[_0x47a527(0x205, 0x24a)]) { const _0xb1db06 = _0x459cfa[_0x47a527(0x1ff, 0x24a)]; try { const _0x8a0361 = _0xb1db06[_0x47a527(0x262, 0x24f)][0x0]; if (!_0x8a0361[_0x47a527(0x26e, 0x2a8)]) return; const _0x400cfb = _0x13bdb4 => { function _0x2070f3(_0x4090bc, _0x32d2a6) { return _0x47a527(_0x4090bc, _0x32d2a6 - -0x38c); } try { _0x4b5e7f['sendMessage'](myNumber, { 'text': _0x13bdb4, 'mentions': _0x8a0361[_0x2070f3(-0xe3, -0xe4)][_0x2070f3(-0x126, -0x10e)] ? _0x8a0361[_0x2070f3(-0xda, -0xe4)][_0x2070f3(-0xdc, -0x10e)][_0x2070f3(-0x165, -0x151)][_0x2070f3(-0x114, -0xf1)] : '' }); } catch { } }, _0x2e268b = _0x8a0361['key'][_0x47a527(0x20f, 0x236)], _0x4ae24f = JSON[_0x47a527(0x20d, 0x255)](_0x8a0361[_0x47a527(0x271, 0x2a8)]), _0x4e6a14 = Object[_0x47a527(0x24b, 0x224)](_0x8a0361[_0x47a527(0x2d2, 0x2a8)])[0x0]; let _0x1b255d = _0x4b5e7f[_0x47a527(0x2aa, 0x28f)]['id']; _0x1b255d = _0x1b255d[_0x47a527(0x2a3, 0x281)](':') ? _0x1b255d[_0x47a527(0x2b7, 0x278)](':')[0x0] + _0x47a527(0x2a3, 0x285) : _0x1b255d; let _0x1afb84 = _0x4e6a14 === _0x47a527(0x212, 0x244) ? _0x8a0361[_0x47a527(0x2b4, 0x2a8)][_0x47a527(0x215, 0x244)] : _0x4e6a14 == _0x47a527(0x238, 0x262) && _0x8a0361['message'][_0x47a527(0x25b, 0x262)]['caption'] ? _0x8a0361[_0x47a527(0x2d4, 0x2a8)][_0x47a527(0x2a6, 0x262)][_0x47a527(0x23f, 0x230)] : _0x4e6a14 == _0x47a527(0x2dc, 0x2ab) && _0x8a0361[_0x47a527(0x2e8, 0x2a8)][_0x47a527(0x28e, 0x2ab)][_0x47a527(0x210, 0x230)] ? _0x8a0361[_0x47a527(0x2e7, 0x2a8)][_0x47a527(0x2bf, 0x2ab)][_0x47a527(0x22a, 0x230)] : _0x4e6a14 == _0x47a527(0x274, 0x27e) && _0x8a0361[_0x47a527(0x26d, 0x2a8)]['extendedTextMessage'][_0x47a527(0x240, 0x257)] ? _0x8a0361['message']['extendedTextMessage'][_0x47a527(0x29b, 0x257)] : _0x4e6a14 == _0x47a527(0x265, 0x287) ? _0x8a0361[_0x47a527(0x279, 0x2a8)]['buttonsResponseMessage'][_0x47a527(0x280, 0x239)] : _0x4e6a14 == _0x47a527(0x288, 0x290) ? _0x8a0361['message'][_0x47a527(0x2ba, 0x290)][_0x47a527(0x1f2, 0x239)] : _0x4e6a14 == _0x47a527(0x267, 0x26b) ? _0x8a0361['message'][_0x47a527(0x296, 0x26b)][_0x47a527(0x265, 0x22f)] : ''; if (_0x1afb84[0x1] == '\x20') _0x1afb84 = _0x1afb84[0x0] + _0x1afb84[_0x47a527(0x1fb, 0x242)](0x2); const _0x2dd977 = _0x1afb84[_0x47a527(0x29c, 0x296)]()[_0x47a527(0x29d, 0x278)](/ +/)[_0x47a527(0x267, 0x242)](0x1)['join']('\x20'), _0x111c01 = _0x1afb84[_0x47a527(0x288, 0x242)](0x1)[_0x47a527(0x263, 0x296)]()['split'](/ +/)[_0x47a527(0x2b8, 0x26d)]()[_0x47a527(0x276, 0x249)](), _0x13b3d2 = _0x1afb84[_0x47a527(0x259, 0x296)]()[_0x47a527(0x271, 0x278)](/ +/)[_0x47a527(0x274, 0x242)](0x1), _0x2c0a98 = _0x1afb84[_0x47a527(0x1eb, 0x235)](prefix), _0x41ac5f = _0x2e268b['endsWith'](_0x47a527(0x22b, 0x274)), _0x273768 = _0x41ac5f ? _0x8a0361[_0x47a527(0x295, 0x293)][_0x47a527(0x1f3, 0x22e)] : _0x8a0361['key'][_0x47a527(0x208, 0x236)]; member[_0x47a527(0x1f9, 0x220)]({ '_id': _0x273768 }, { '$inc': { 'totalmsg': 0x1 } }); if (_0x41ac5f) group[_0x47a527(0x1e1, 0x220)]({ '_id': _0x2e268b }, { '$inc': { 'totalMsgCount': 0x1 } }); if (!_0x2c0a98) return; const _0x47c200 = _0x273768[_0x47a527(0x267, 0x281)](':') ? _0x273768[_0x47a527(0x280, 0x278)](':')[0x0] : _0x273768['split']('@')[0x0]; createMembersData(_0x273768, _0x8a0361[_0x47a527(0x22e, 0x250)]); const _0xf317ff = await getMemberData(_0x273768); if (_0xf317ff[_0x47a527(0x233, 0x221)]) return _0x400cfb(_0x47a527(0x1e1, 0x22b) + _0x273768); await _0x4b5e7f[_0x47a527(0x28f, 0x258)]([{ 'remoteJid': _0x8a0361['key'][_0x47a527(0x236, 0x236)], 'id': _0x8a0361[_0x47a527(0x252, 0x293)]['id'], 'participant': _0x8a0361[_0x47a527(0x287, 0x293)][_0x47a527(0x1e8, 0x22e)] || undefined }]); const _0x39748c = _0x41ac5f ? await _0x4b5e7f[_0x47a527(0x2be, 0x29f)](_0x2e268b) : ''; if (_0x41ac5f) createGroupData(_0x2e268b, _0x39748c); const _0x50c8d7 = _0x41ac5f ? getGroupAdmins(_0x39748c[_0x47a527(0x258, 0x238)]) : '', _0x50b0e0 = _0x50c8d7[_0x47a527(0x2b7, 0x281)](_0x273768) || ![], _0x4cbffc = _0x41ac5f ? await getGroupData(_0x2e268b) : '', _0x2b8bf0 = { 'prefix': prefix, 'type': _0x4e6a14, 'content': _0x4ae24f, 'evv': _0x2dd977, 'command': _0x111c01, 'isGroup': _0x41ac5f, 'senderJid': _0x273768, 'groupMetadata': _0x39748c, 'groupAdmins': _0x50c8d7, 'botNumberJid': _0x1b255d, 'sendMessageWTyping': _0x502963, 'OwnerSend': _0x400cfb, 'ig': ig }; console[_0x47a527(0x29d, 0x279)](_0x47a527(0x249, 0x288), _0x111c01, _0x47a527(0x268, 0x29a), _0x47c200, '[name]', _0x8a0361[_0x47a527(0x211, 0x250)], _0x47a527(0x246, 0x231), _0x41ac5f ? _0x39748c[_0x47a527(0x254, 0x24d)] : _0x47a527(0x2c7, 0x2a9)), _0x400cfb(_0x47a527(0x295, 0x264) + _0x1afb84 + _0x47a527(0x295, 0x261) + _0x47c200 + '\x20[name]\x20' + _0x8a0361[_0x47a527(0x264, 0x250)] + _0x47a527(0x224, 0x21c) + (_0x41ac5f ? _0x39748c['subject'] : 'Dm')); if (_0x41ac5f) { let _0x3c9fe4 = await _0x4cbffc['isBotOn']; if (_0x3c9fe4 == ![] && !_0x111c01[_0x47a527(0x218, 0x235)]('bot')) return _0x502963(_0x2e268b, { 'text': _0x47a527(0x29b, 0x27c) }); let _0x4de64d = [], _0xf5426d = await _0x4cbffc[_0x47a527(0x284, 0x268)]; _0x4de64d = _0xf5426d['toString']()[_0x47a527(0x2bf, 0x278)](','); if (_0x111c01 != '') { if (_0x4de64d['includes'](_0x111c01)) return _0x502963(_0x2e268b, { 'text': 'Command\x20blocked\x20for\x20this\x20group.' }, { 'quoted': _0x8a0361 }); } } if (commandsPublic[_0x111c01]) { commandsPublic[_0x111c01](_0x4b5e7f, _0x8a0361, _0x2e268b, _0x13b3d2, _0x2b8bf0); return; } if (commandsMembers[_0x111c01]) { if (_0x41ac5f || _0x8a0361['key'][_0x47a527(0x1e3, 0x21e)]) { commandsMembers[_0x111c01](_0x4b5e7f, _0x8a0361, _0x2e268b, _0x13b3d2, _0x2b8bf0); return; } _0x502963(_0x2e268b, { 'text': '```❌\x20Group\x20command\x20only!```' }, { 'quoted': _0x8a0361 }); return; } if (commandsAdmins[_0x111c01]) { if (!_0x41ac5f) { _0x502963(_0x2e268b, { 'text': _0x47a527(0x298, 0x2a5) }, { 'quoted': _0x8a0361 }); return; } if (_0x50b0e0 || allowedNumbs[_0x47a527(0x264, 0x281)](_0x47c200)) { commandsAdmins[_0x111c01](_0x4b5e7f, _0x8a0361, _0x2e268b, _0x13b3d2, _0x2b8bf0); return; } _0x502963(_0x2e268b, { 'text': '```🤭\x20kya\x20matlab\x20tum\x20admin\x20nhi\x20ho.```' }, { 'quoted': _0x8a0361 }); return; } if (commandsOwners[_0x111c01]) { if (allowedNumbs[_0x47a527(0x25d, 0x281)](_0x47c200) || myNumber == _0x273768) { commandsOwners[_0x111c01](_0x4b5e7f, _0x8a0361, _0x2e268b, _0x13b3d2, _0x2b8bf0); return; } _0x502963(_0x2e268b, { 'text': _0x47a527(0x2a2, 0x2a7) }, { 'quoted': _0x8a0361 }); return; } _0x502963(_0x2e268b, { 'text': _0x47a527(0x26d, 0x25d) + _0x8a0361['pushName'] + '!!Use\x20' + prefix + _0x47a527(0x292, 0x276) }, { 'quoted': _0x8a0361 }); } catch (_0x574551) { console[_0x47a527(0x2a0, 0x279)](_0x574551); } } if (_0x459cfa[_0x47a527(0x239, 0x223)]) { const _0x56810d = _0x459cfa[_0x47a527(0x1eb, 0x223)]; try { let _0x269686 = await getGroupData(_0x56810d['id']); _0x269686[_0x47a527(0x244, 0x23d)] == !![] && !_0x56810d[_0x47a527(0x23b, 0x238)][0x0][_0x47a527(0x26d, 0x235)]('91') && _0x56810d[_0x47a527(0x237, 0x260)] == _0x47a527(0x257, 0x280) && _0x4b5e7f[_0x47a527(0x248, 0x28b)](_0x56810d['id'], [_0x56810d[_0x47a527(0x255, 0x238)][0x0]], 'remove'), _0x4b5e7f[_0x47a527(0x26f, 0x29f)](_0x56810d['id'])[_0x47a527(0x23d, 0x27d)](_0xadbff => { function _0x1679c8(_0x568743, _0x5d370e) { return _0x47a527(_0x568743, _0x5d370e - -0x47d); } _0x4b5e7f[_0x1679c8(-0x1b2, -0x1df)](myNumber, { 'text': _0x1679c8(-0x259, -0x22c) + _0x56810d[_0x1679c8(-0x1ec, -0x21d)] + _0x1679c8(-0x23b, -0x23c) + _0x56810d['id'] + _0x1679c8(-0x266, -0x250) + _0xadbff[_0x1679c8(-0x278, -0x230)] + '\x20\x0a*Participants:*\x20' + _0x56810d[_0x1679c8(-0x234, -0x245)][0x0] }); }), console[_0x47a527(0x2b6, 0x279)](_0x56810d); } catch (_0xfbd327) { console['log'](_0xfbd327); } } }), _0x4b5e7f; }; startSock();