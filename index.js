(function (_0x35f108, _0x9e19f2) { const _0x1341f4 = _0x35f108(); function _0x323619(_0xa829a6, _0x1f4d91) { return _0x9a28(_0x1f4d91 - -0x194, _0xa829a6); } while (!![]) { try { const _0x4bab84 = -parseInt(_0x323619(0x7d, 0xb0)) / 0x1 * (parseInt(_0x323619(0x9a, 0xc2)) / 0x2) + parseInt(_0x323619(0x5a, 0x54)) / 0x3 * (-parseInt(_0x323619(0x116, 0xe5)) / 0x4) + parseInt(_0x323619(0xa1, 0x83)) / 0x5 * (-parseInt(_0x323619(0x8a, 0xb5)) / 0x6) + parseInt(_0x323619(0xce, 0xce)) / 0x7 + -parseInt(_0x323619(0x93, 0xbb)) / 0x8 * (-parseInt(_0x323619(0x73, 0xac)) / 0x9) + parseInt(_0x323619(0x5a, 0x72)) / 0xa * (-parseInt(_0x323619(0x102, 0xd0)) / 0xb) + parseInt(_0x323619(0x97, 0xb2)) / 0xc * (parseInt(_0x323619(0x7b, 0x88)) / 0xd); if (_0x4bab84 === _0x9e19f2) break; else _0x1341f4['push'](_0x1341f4['shift']()); } catch (_0x5f30da) { _0x1341f4['push'](_0x1341f4['shift']()); } } }(_0x9488, 0x47229)); const express = require(_0x14b3b3(0x223, 0x241)), app = express(); app[_0x14b3b3(0x215, 0x22e)](express[_0x14b3b3(0x21b, 0x1f4)]({ 'extended': !![] })); const port = process[_0x14b3b3(0x234, 0x206)]['PORT'] || 0x1f40; app[_0x14b3b3(0x250, 0x24f)]('/', (_0x103052, _0x4b57d9) => { function _0x1a850d(_0x17dfb4, _0x36f13c) { return _0x14b3b3(_0x36f13c, _0x17dfb4 - -0x340); } _0x4b57d9['send'](_0x1a850d(-0x11a, -0xf5)); }), app[_0x14b3b3(0x243, 0x255)](port, () => { function _0x18fa6f(_0xdf667c, _0x5d56a2) { return _0x14b3b3(_0xdf667c, _0x5d56a2 - -0x28b); } console[_0x18fa6f(-0x7d, -0x5e)](_0x18fa6f(-0xb7, -0x99)); }); const { default: makeWASocket, delay, DisconnectReason, fetchLatestBaileysVersion, MessageRetryMap, useMultiFileAuthState } = require(_0x14b3b3(0x246, 0x23d)), P = require(_0x14b3b3(0x21d, 0x21a)); let MAIN_LOGGER = P({ 'timestamp': () => ',\x22time\x22:\x22' + new Date()[_0x14b3b3(0x203, 0x202)]() + '\x22' }); const logger = MAIN_LOGGER[_0x14b3b3(0x1b2, 0x1ee)]({}); logger[_0x14b3b3(0x200, 0x21d)] = _0x14b3b3(0x1fd, 0x230), msgRetryCounterMap = MessageRetryMap; const fs = require('fs'), util = require(_0x14b3b3(0x26f, 0x22f)), readdir = util[_0x14b3b3(0x268, 0x243)](fs['readdir']); let commandsPublic = {}, commandsMembers = {}, commandsAdmins = {}, commandsOwners = {}; function _0x9a28(_0x3cc4d2, _0x33f328) { const _0x94889d = _0x9488(); return _0x9a28 = function (_0x9a28db, _0x57b9d7) { _0x9a28db = _0x9a28db - 0x1e4; let _0x40353d = _0x94889d[_0x9a28db]; return _0x40353d; }, _0x9a28(_0x3cc4d2, _0x33f328); } const addCommands = async () => { let _0x11929e = _0xad5c34(0xc7, 0xf0), _0xc8c7ec = await readdir(_0x11929e); _0xc8c7ec[_0xad5c34(0x3a, 0x59)](_0x23c51f => { function _0x15c2c2(_0x4d59a8, _0x391214) { return _0xad5c34(_0x391214 - 0x431, _0x4d59a8); } if (_0x23c51f['endsWith'](_0x15c2c2(0x4a7, 0x4e4))) { let { command: _0x5bd885 } = require(_0x11929e + _0x23c51f), _0x3e3765 = _0x5bd885(); for (let _0x425dd6 of _0x3e3765[_0x15c2c2(0x462, 0x4a1)]) { commandsPublic[_0x425dd6] = _0x3e3765[_0x15c2c2(0x481, 0x47e)]; } } }), _0x11929e = _0xad5c34(0x48, 0x5f); function _0xad5c34(_0x325d5c, _0x517189) { return _0x14b3b3(_0x517189, _0x325d5c - -0x1af); } _0xc8c7ec = await readdir(_0x11929e), _0xc8c7ec[_0xad5c34(0x3a, 0x3d)](_0x3b1e7e => { function _0x317716(_0x1b29fe, _0x5a3caa) { return _0xad5c34(_0x1b29fe - 0x99, _0x5a3caa); } if (_0x3b1e7e['endsWith'](_0x317716(0x14c, 0x15d))) { let { command: _0x50824a } = require(_0x11929e + _0x3b1e7e), _0x4621be = _0x50824a(); for (let _0x1622a6 of _0x4621be[_0x317716(0x109, 0x131)]) { commandsMembers[_0x1622a6] = _0x4621be[_0x317716(0xe6, 0xaf)]; } } }), _0x11929e = _0xad5c34(0x67, 0x3f), _0xc8c7ec = await readdir(_0x11929e), _0xc8c7ec[_0xad5c34(0x3a, 0x44)](_0x143699 => { function _0x3b1b4b(_0x3c136d, _0x4c3eec) { return _0xad5c34(_0x3c136d - 0x54d, _0x4c3eec); } if (_0x143699[_0x3b1b4b(0x594, 0x5c2)]('.js')) { let { command: _0x153260 } = require(_0x11929e + _0x143699), _0x29b187 = _0x153260(); for (let _0x251905 of _0x29b187['cmd']) { commandsAdmins[_0x251905] = _0x29b187['handler']; } } }), _0x11929e = './commands/owner/', _0xc8c7ec = await readdir(_0x11929e), _0xc8c7ec[_0xad5c34(0x3a, 0x63)](_0x151891 => { function _0x3afeff(_0xb5006f, _0x2db235) { return _0xad5c34(_0x2db235 - 0x136, _0xb5006f); } if (_0x151891['endsWith'](_0x3afeff(0x21a, 0x1e9))) { let { command: _0x229b1d } = require(_0x11929e + _0x151891), _0x36cec9 = _0x229b1d(); for (let _0x33c5b7 of _0x36cec9[_0x3afeff(0x1b9, 0x1a6)]) { commandsOwners[_0x33c5b7] = _0x36cec9['handler']; } } }), _0x11929e = './', _0xc8c7ec = await readdir(_0x11929e), _0xc8c7ec['forEach'](_0x2a80d6 => { function _0x442c87(_0x54e9a7, _0x3737cf) { return _0xad5c34(_0x54e9a7 - 0xc5, _0x3737cf); } (_0x2a80d6[_0x442c87(0x10c, 0xc5)](_0x442c87(0x132, 0x140)) || _0x2a80d6[_0x442c87(0x10c, 0x131)](_0x442c87(0x11d, 0x126)) || _0x2a80d6[_0x442c87(0x10c, 0x13a)](_0x442c87(0x139, 0x12c)) || _0x2a80d6[_0x442c87(0x10c, 0xeb)](_0x442c87(0x134, 0x111)) || _0x2a80d6['endsWith'](_0x442c87(0x127, 0x137)) || _0x2a80d6['endsWith']('.png') || _0x2a80d6['endsWith'](_0x442c87(0x18e, 0x182))) && fs[_0x442c87(0x128, 0x151)](_0x11929e + _0x2a80d6); }); }, mdClient = require(_0x14b3b3(0x258, 0x26c)); mdClient[_0x14b3b3(0x21f, 0x261)](); let sessionCount = 0x1; function fetchauth() { function _0x4c61cb(_0x58cbac, _0x4e2785) { return _0x14b3b3(_0x4e2785, _0x58cbac - 0x17b); } try { !fs[_0x4c61cb(0x3b4, 0x3f0)](_0x4c61cb(0x36c, 0x349)) && fs[_0x4c61cb(0x390, 0x3b8)](_0x4c61cb(0x36c, 0x34f)), mdClient[_0x4c61cb(0x3dc, 0x41f)](async _0x24ea8e => { if (_0x24ea8e) throw _0x24ea8e; let _0x5c8c43 = mdClient['db'](_0x4a0246(0x7d, 0x60))[_0x4a0246(0x90, 0x63)](_0x4a0246(0x50, 0x3a)); await _0x5c8c43[_0x4a0246(0xd, 0x41)]({ '_id': 'auth' })[_0x4a0246(0x2f, 0x64)](_0x2b5c35 => { function _0x20f15a(_0x2ce938, _0x1e547c) { return _0x4a0246(_0x1e547c, _0x2ce938 - 0x4c7); } _0x2b5c35 == null && _0x5c8c43[_0x20f15a(0x4d7, 0x508)]({ '_id': _0x20f15a(0x4ee, 0x4c9), 'sessionAuth': '' }); }); function _0x4a0246(_0x5d5dea, _0x129161) { return _0x4c61cb(_0x129161 - -0x38c, _0x5d5dea); } _0x5c8c43[_0x4a0246(-0x37, -0x16)]({ '_id': _0x4a0246(0x42, 0x27) })[_0x4a0246(0xac, 0x62)](function (_0x5a161e, _0x24e1f3) { if (_0x5a161e) throw _0x5a161e; function _0x25600a(_0x4182e8, _0x5dcb5) { return _0x4a0246(_0x4182e8, _0x5dcb5 - 0x193); } let _0x56a4d0 = _0x24e1f3[0x0][_0x25600a(0x144, 0x17b)]; if (_0x56a4d0 != '') { _0x56a4d0 = JSON[_0x25600a(0x199, 0x183)](_0x56a4d0), _0x56a4d0 = JSON[_0x25600a(0x218, 0x1e9)](_0x56a4d0); if (sessionCount == 0x1) fs['writeFileSync']('baileys_auth_info/creds.json', _0x56a4d0); else sessionCount == 0x0 ? fs[_0x25600a(0x206, 0x1e1)]('baileys_auth_info/creds.json', { 'recursive': !![], 'force': !![] }) : console['log'](_0x25600a(0x16f, 0x19b)); } else console[_0x25600a(0x1b4, 0x1af)]('Session\x20Auth\x20Empty'); }); }), console[_0x4c61cb(0x3a8, 0x361)](_0x4c61cb(0x388, 0x387)); } catch (_0x25e6de) { console[_0x4c61cb(0x3d7, 0x3dd)]('Local\x20file\x20writing\x20errors\x20:', _0x25e6de); } } function updateLogin() { function _0x3bcff8(_0x51b9b4, _0x5ca27a) { return _0x14b3b3(_0x5ca27a, _0x51b9b4 - -0x10f); } try { let _0x229023 = fs[_0x3bcff8(0x15a, 0x144)](_0x3bcff8(0x122, 0x132)); _0x229023 = JSON['parse'](_0x229023), _0x229023 = JSON[_0x3bcff8(0x158, 0x139)](_0x229023); let _0x3b5e39 = mdClient['db'](_0x3bcff8(0x162, 0x148))[_0x3bcff8(0x165, 0x191)](_0x3bcff8(0x13c, 0x115)); _0x3b5e39[_0x3bcff8(0xf1, 0x102)]({ '_id': _0x3bcff8(0x129, 0x11a) }, { '$set': { 'sessionAuth': _0x229023 } }); } catch (_0x4fafd8) { console[_0x3bcff8(0x11e, 0x10b)](_0x3bcff8(0x118, 0x154), _0x4fafd8); } } require(_0x14b3b3(0x255, 0x22c))[_0x14b3b3(0x222, 0x25d)](); function _0x9488() { const _0x5f2d8e = ['startsWith', 'env', '.jpeg', 'imageMessage', 'group-participants.update', '3390evpQuI', 'message', '@g.us', 'Local\x20file\x20written', 'fromMe', 'participant', 'output', '.jpg', 'unlinkSync', ',\x20isLatest:\x20', 'cmdBlocked', 'mkdirSync', './commands/group/admins/', 'title', 'isBlock', 'Creds\x20Already\x20there.', 'pino', '1583155eiUWqi', '.webp', 'level', '.mp4', 'cmd', '91FrTWsq', 'insertOne', 'selectedDisplayText', '.mp3', '@s.whatsapp.net', 'remoteJid', 'Bot\x20is\x20running..\x20:)', 'Db\x20updating\x20error\x20:\x20', 'buttonsResponseMessage', 'join', '\x20\x0a*Participants:*\x20', 'text', 'dotenv', 'log', 'use', 'util', 'warn', 'baileys_auth_info/creds.json', 'videoMessage', 'sendPresenceUpdate', '[COMMAND]', 'user', 'composing', '\x20[name]\x20', 'auth', 'existsSync', 'participants', 'process', '```ü§≠\x20kya\x20matlab\x20tum\x20mere\x20owner\x20nhi\x20ho.```', '@adiwajshing/baileys', 'baileys_auth_info', 'messages.upsert', 'keys', 'express', '```*', 'promisify', '9ajIFxW', '919565303474', 'presenceSubscribe', 'caption', '2RWLxWN', 'groupMetadata', '2514084BxpGCg', 'AuthTable', '[cmd]\x20', '6qmrVoq', 'INSTA_API_KEY', 'get', 'templateButtonReplyMessage', 'includes', 'findOne', '1581616RyIiYL', 'creds.update', 'listen', 'shift', 'contextInfo', 'setCookie', 'admin', '535490TfyGGL', 'insta-fetcher', 'error', 'config', 'Directs', 'rmSync', 'slice', 'connect', '.js', 'readMessages', '```ü§≠\x20kya\x20matlab\x20tum\x20admin\x20nhi\x20ho.```', 'trim', '2765686PtdtAl', 'stringify', '11924iIaENB', 'readFileSync', 'subject', 'toLowerCase', './mongodb', 'split', 'myNumber', 'superadmin', 'key', 'MyBotDataDB', 'sendMessage', 'toArray', 'collection', 'then', './commands/public/', '```‚ùå\x20Group\x20command\x20only!```', '.gif', 'extendedTextMessage', 'loggedOut', 'toString', 'pushName', '199412RUDJJK', 'connection\x20update', 'forEach', 'sessionCount\x20logout\x20time', './mongo-DB/groupDataDb', '33SwlwNF', 'listResponseMessage', 'child', 'statusCode', '\x20[IN]\x20', './baileys_auth_info', '\x0aWeb-server\x20running!\x0a', 'conversation', 'urlencoded', '*Action:*\x20', 'endsWith', './commands/group/members/', 'Command\x20Blocked\x20For\x20this\x20group.', 'sessionAuth', 'push', 'find', 'handler', 'mentionedJid', 'connection.update', 'using\x20WA\x20v', 'updateOne', 'parse', 'toJSON', '[IN]', 'Connection\x20closed.\x20You\x20are\x20logged\x20out.']; _0x9488 = function () { return _0x5f2d8e; }; return _0x9488(); } const { createMembersData, getMemberData, member } = require('./mongo-DB/membersDataDb'), { createGroupData, getGroupData, group } = require(_0x14b3b3(0x1fb, 0x1eb)), myNumber = process[_0x14b3b3(0x21f, 0x206)][_0x14b3b3(0x240, 0x26e)] + _0x14b3b3(0x204, 0x224), INSTA_API_KEY = process[_0x14b3b3(0x22f, 0x206)][_0x14b3b3(0x264, 0x24e)], { igApi, getSessionId } = require(_0x14b3b3(0x246, 0x25b)); let ig = new igApi(INSTA_API_KEY); ig[_0x14b3b3(0x28c, 0x258)](INSTA_API_KEY); const prefix = '' + process[_0x14b3b3(0x1f4, 0x206)]['PREFIX']; function _0x14b3b3(_0x1d149f, _0x36e01b) { return _0x9a28(_0x36e01b - 0x4, _0x1d149f); } const allowedNumbs = ['918318585418', _0x14b3b3(0x23d, 0x245), '' + process[_0x14b3b3(0x216, 0x206)]['myNumber']], getGroupAdmins = _0x4da2bb => { admins = []; function _0x3b3ac2(_0xbba415, _0x1dfc6f) { return _0x14b3b3(_0xbba415, _0x1dfc6f - 0x168); } for (let _0x4f5cbf of _0x4da2bb) { _0x4f5cbf[_0x3b3ac2(0x401, 0x3c1)] == _0x3b3ac2(0x37f, 0x3c1) || _0x4f5cbf[_0x3b3ac2(0x384, 0x3c1)] == _0x3b3ac2(0x3d2, 0x3d7) ? admins[_0x3b3ac2(0x380, 0x362)](_0x4f5cbf['id']) : ''; } return admins; }, startSock = async () => { addCommands(), fetchauth(), await delay(0x2710); let _0x1ac6a8 = setInterval(() => { updateLogin(); }, 0x7530); const { state: _0x245840, saveCreds: _0x22cd22 } = await useMultiFileAuthState(_0x1b1822(-0xe3, -0xff)), { version: _0x34af0b, isLatest: _0x2c6a1a } = await fetchLatestBaileysVersion(); console[_0x1b1822(-0xf7, -0x110)](_0x1b1822(-0x138, -0x13e) + _0x34af0b[_0x1b1822(-0x138, -0x114)]('.') + _0x1b1822(-0x141, -0x12a) + _0x2c6a1a); const _0x3ded6f = makeWASocket({ 'version': _0x34af0b, 'logger': logger, 'printQRInTerminal': !![], 'auth': _0x245840, 'msgRetryCounterMap': msgRetryCounterMap, 'getMessage': async _0x153c9a => { return {}; } }); sessionCount = 0x2; function _0x1b1822(_0x1027e5, _0x20182a) { return _0x14b3b3(_0x1027e5, _0x20182a - -0x33d); } const _0x25b151 = async (_0x1d85f6, _0x2463d1, _0x5c968e) => { function _0x3fd133(_0x20dfd0, _0x502fbf) { return _0x1b1822(_0x502fbf, _0x20dfd0 - 0x4fe); } await _0x3ded6f[_0x3fd133(0x407, 0x40a)](_0x1d85f6), await delay(0x64), await _0x3ded6f[_0x3fd133(0x3f4, 0x422)](_0x3fd133(0x3f7, 0x3e5), _0x1d85f6), await delay(0x1f4), await _0x3ded6f[_0x3fd133(0x3f4, 0x3f3)]('paused', _0x1d85f6), await _0x3ded6f[_0x3fd133(0x433, 0x3fc)](_0x1d85f6, _0x2463d1, _0x5c968e); }; return _0x3ded6f['ev'][_0x1b1822(-0xc9, -0x102)](async _0x41dd8f => { if (_0x41dd8f[_0x5c3fa9(0x4d4, 0x4d6)]) { const _0xebb98 = _0x41dd8f[_0x5c3fa9(0x4d4, 0x4ff)], { connection: _0x3bc4fa, lastDisconnect: _0x54ee0b } = _0xebb98; _0x3bc4fa === 'close' && (_0x54ee0b[_0x5c3fa9(0x532, 0x4ef)][_0x5c3fa9(0x4e6, 0x4bb)][_0x5c3fa9(0x4c5, 0x4c6)] == DisconnectReason[_0x5c3fa9(0x550, 0x549)] ? (sessionCount = 0x0, console['log'](_0x5c3fa9(0x4c0, 0x4b0), sessionCount), clearInterval(_0x1ac6a8), startSock()) : (console[_0x5c3fa9(0x503, 0x4c3)](_0x5c3fa9(0x4da, 0x50f), sessionCount), startSock())), console[_0x5c3fa9(0x503, 0x50e)](_0x5c3fa9(0x4be, 0x4f6), _0xebb98); } function _0x5c3fa9(_0x25862e, _0x2fb27b) { return _0x1b1822(_0x2fb27b, _0x25862e - 0x613); } _0x41dd8f[_0x5c3fa9(0x52a, 0x573)] && await _0x22cd22(); if (_0x41dd8f[_0x5c3fa9(0x515, 0x53f)]) { const _0x1f5f98 = _0x41dd8f['messages.upsert']; try { const _0x8e6121 = _0x1f5f98['messages'][0x0]; if (!_0x8e6121[_0x5c3fa9(0x4e1, 0x50b)]) return; const _0x40729d = _0x293289 => { function _0x4650eb(_0x3b28e8, _0x43e906) { return _0x5c3fa9(_0x3b28e8 - 0xa7, _0x43e906); } try { _0x3ded6f['sendMessage'](myNumber, { 'text': _0x293289, 'mentions': _0x8e6121[_0x4650eb(0x588, 0x568)][_0x4650eb(0x5f6, 0x5f0)] ? _0x8e6121[_0x4650eb(0x588, 0x58c)]['extendedTextMessage'][_0x4650eb(0x5d4, 0x5d4)][_0x4650eb(0x57a, 0x554)] : '' }); } catch { } }, _0x592ab0 = _0x8e6121[_0x5c3fa9(0x546, 0x591)]['remoteJid'], _0x2c9f3f = JSON[_0x5c3fa9(0x53d, 0x571)](_0x8e6121[_0x5c3fa9(0x4e1, 0x50b)]), _0x3d668d = Object[_0x5c3fa9(0x516, 0x53a)](_0x8e6121[_0x5c3fa9(0x4e1, 0x4d7)])[0x0]; let _0x24e267 = _0x3ded6f[_0x5c3fa9(0x50b, 0x51e)]['id']; _0x24e267 = _0x24e267[_0x5c3fa9(0x527, 0x53b)](':') ? _0x24e267[_0x5c3fa9(0x543, 0x533)](':')[0x0] + _0x5c3fa9(0x4fa, 0x4e3) : _0x24e267; let _0x54faab = _0x3d668d === _0x5c3fa9(0x4c9, 0x4c3) ? _0x8e6121[_0x5c3fa9(0x4e1, 0x4ad)]['conversation'] : _0x3d668d == 'imageMessage' && _0x8e6121['message'][_0x5c3fa9(0x4de, 0x4db)]['caption'] ? _0x8e6121['message'][_0x5c3fa9(0x4de, 0x4ba)][_0x5c3fa9(0x51d, 0x53e)] : _0x3d668d == _0x5c3fa9(0x508, 0x52d) && _0x8e6121[_0x5c3fa9(0x4e1, 0x4e4)][_0x5c3fa9(0x508, 0x522)]['caption'] ? _0x8e6121[_0x5c3fa9(0x4e1, 0x4e9)][_0x5c3fa9(0x508, 0x4e1)][_0x5c3fa9(0x51d, 0x563)] : _0x3d668d == _0x5c3fa9(0x54f, 0x52c) && _0x8e6121[_0x5c3fa9(0x4e1, 0x4e8)][_0x5c3fa9(0x54f, 0x583)][_0x5c3fa9(0x501, 0x4d2)] ? _0x8e6121[_0x5c3fa9(0x4e1, 0x4c6)][_0x5c3fa9(0x54f, 0x545)][_0x5c3fa9(0x501, 0x521)] : _0x3d668d == 'buttonsResponseMessage' ? _0x8e6121[_0x5c3fa9(0x4e1, 0x49c)][_0x5c3fa9(0x4fe, 0x4d8)][_0x5c3fa9(0x4f8, 0x528)] : _0x3d668d == _0x5c3fa9(0x526, 0x4f8) ? _0x8e6121['message'][_0x5c3fa9(0x526, 0x52c)]['selectedDisplayText'] : _0x3d668d == _0x5c3fa9(0x4c3, 0x4e5) ? _0x8e6121[_0x5c3fa9(0x4e1, 0x4a1)][_0x5c3fa9(0x4c3, 0x493)][_0x5c3fa9(0x4ed, 0x4ac)] : ''; if (_0x54faab[0x1] == '\x20') _0x54faab = _0x54faab[0x0] + _0x54faab[_0x5c3fa9(0x536, 0x506)](0x2); const _0x540c4d = _0x54faab[_0x5c3fa9(0x53b, 0x56a)]()[_0x5c3fa9(0x543, 0x54d)](/ +/)[_0x5c3fa9(0x536, 0x4f1)](0x1)['join']('\x20'), _0x4b7ba6 = _0x54faab['slice'](0x1)['trim']()['split'](/ +/)[_0x5c3fa9(0x52c, 0x567)]()[_0x5c3fa9(0x541, 0x54a)](), _0x365740 = _0x54faab[_0x5c3fa9(0x53b, 0x542)]()[_0x5c3fa9(0x543, 0x527)](/ +/)['slice'](0x1), _0x562fcc = _0x54faab[_0x5c3fa9(0x4db, 0x4c1)](prefix), _0x11944d = _0x592ab0[_0x5c3fa9(0x4cc, 0x4fc)](_0x5c3fa9(0x4e2, 0x4a5)); await _0x3ded6f[_0x5c3fa9(0x539, 0x582)]([{ 'remoteJid': _0x8e6121[_0x5c3fa9(0x546, 0x575)][_0x5c3fa9(0x4fb, 0x4eb)], 'id': _0x8e6121[_0x5c3fa9(0x546, 0x53a)]['id'], 'participant': _0x8e6121[_0x5c3fa9(0x546, 0x53d)][_0x5c3fa9(0x4e5, 0x527)] || undefined }]); const _0x259c81 = _0x11944d ? _0x8e6121['key'][_0x5c3fa9(0x4e5, 0x515)] : _0x8e6121[_0x5c3fa9(0x546, 0x51c)][_0x5c3fa9(0x4fb, 0x516)], _0x2e301f = _0x259c81[_0x5c3fa9(0x527, 0x537)](':') ? _0x259c81[_0x5c3fa9(0x543, 0x502)](':')[0x0] : _0x259c81['split']('@')[0x0]; createMembersData(_0x259c81, _0x8e6121[_0x5c3fa9(0x552, 0x50d)]); const _0x340451 = await getMemberData(_0x259c81); if (_0x340451[_0x5c3fa9(0x4ee, 0x4ce)]) return _0x40729d('User\x20Blocked\x20:\x20' + _0x259c81); member['updateOne']({ '_id': _0x259c81 }, { '$inc': { 'totalmsg': 0x1 } }); if (_0x11944d) group['updateOne']({ '_id': _0x592ab0 }, { '$inc': { 'totalMsgCount': 0x1 } }); if (!_0x562fcc) return; const _0x49aba4 = _0x11944d ? await getGroupData(_0x592ab0) : '', _0x4c3390 = _0x11944d ? await _0x3ded6f[_0x5c3fa9(0x51f, 0x512)](_0x592ab0) : ''; if (_0x11944d) createGroupData(_0x592ab0, _0x4c3390); const _0x1485fe = _0x11944d ? getGroupAdmins(_0x4c3390[_0x5c3fa9(0x510, 0x52e)]) : '', _0x41924c = _0x1485fe[_0x5c3fa9(0x527, 0x510)](_0x259c81) || ![], _0x525b86 = { 'prefix': prefix, 'type': _0x3d668d, 'content': _0x2c9f3f, 'evv': _0x540c4d, 'command': _0x4b7ba6, 'isGroup': _0x11944d, 'senderJid': _0x259c81, 'groupMetadata': _0x4c3390, 'groupAdmins': _0x1485fe, 'botNumberJid': _0x24e267, 'sendMessageWTyping': _0x25b151, 'OwnerSend': _0x40729d, 'ig': ig }; console[_0x5c3fa9(0x503, 0x545)](_0x5c3fa9(0x50a, 0x4c9), _0x4b7ba6, '[FROM]', _0x2e301f, '[name]', _0x8e6121[_0x5c3fa9(0x552, 0x56d)], _0x5c3fa9(0x4d9, 0x4b1), _0x11944d ? _0x4c3390[_0x5c3fa9(0x540, 0x579)] : _0x5c3fa9(0x534, 0x547)), _0x40729d(_0x5c3fa9(0x522, 0x4e3) + _0x54faab + '\x20[by]\x20' + _0x2e301f + _0x5c3fa9(0x50d, 0x545) + _0x8e6121['pushName'] + _0x5c3fa9(0x4c6, 0x48e) + (_0x11944d ? _0x4c3390[_0x5c3fa9(0x540, 0x532)] : 'Dm')); if (_0x11944d) { let _0x2ab3ce = [], _0x2a637a = await _0x49aba4[_0x5c3fa9(0x4ea, 0x4bf)]; _0x2ab3ce = _0x2a637a[_0x5c3fa9(0x551, 0x540)]()[_0x5c3fa9(0x543, 0x583)](','); if (_0x4b7ba6 != '') { if (_0x2ab3ce['includes'](_0x4b7ba6)) return _0x25b151(_0x592ab0, { 'text': _0x5c3fa9(0x4ce, 0x489) }, { 'quoted': _0x8e6121 }); } } if (commandsPublic[_0x4b7ba6]) { commandsPublic[_0x4b7ba6](_0x3ded6f, _0x8e6121, _0x592ab0, _0x365740, _0x525b86); return; } if (commandsMembers[_0x4b7ba6]) { if (_0x11944d || _0x8e6121['key'][_0x5c3fa9(0x4e4, 0x4fa)]) { commandsMembers[_0x4b7ba6](_0x3ded6f, _0x8e6121, _0x592ab0, _0x365740, _0x525b86); return; } _0x25b151(_0x592ab0, { 'text': _0x5c3fa9(0x54d, 0x56f) }, { 'quoted': _0x8e6121 }); return; } if (commandsAdmins[_0x4b7ba6]) { if (!_0x11944d) { _0x25b151(_0x592ab0, { 'text': '```‚ùå\x20Group\x20command\x20only!```' }, { 'quoted': _0x8e6121 }); return; } if (_0x41924c || allowedNumbs['includes'](_0x2e301f)) { commandsAdmins[_0x4b7ba6](_0x3ded6f, _0x8e6121, _0x592ab0, _0x365740, _0x525b86); return; } _0x25b151(_0x592ab0, { 'text': _0x5c3fa9(0x53a, 0x566) }, { 'quoted': _0x8e6121 }); return; } if (commandsOwners[_0x4b7ba6]) { if (allowedNumbs[_0x5c3fa9(0x527, 0x4ea)](_0x2e301f) || myNumber == _0x259c81) { commandsOwners[_0x4b7ba6](_0x3ded6f, _0x8e6121, _0x592ab0, _0x365740, _0x525b86); return; } _0x25b151(_0x592ab0, { 'text': _0x5c3fa9(0x512, 0x53e) }, { 'quoted': _0x8e6121 }); return; } _0x25b151(_0x592ab0, { 'text': _0x5c3fa9(0x518, 0x541) + _0x8e6121[_0x5c3fa9(0x552, 0x511)] + '!!Use\x20' + prefix + 'help*\x20```' }, { 'quoted': _0x8e6121 }); } catch (_0x2967d5) { console[_0x5c3fa9(0x503, 0x516)](_0x2967d5); } } if (_0x41dd8f[_0x5c3fa9(0x4df, 0x522)]) { const _0x55e248 = _0x41dd8f[_0x5c3fa9(0x4df, 0x4a1)]; try { _0x3ded6f[_0x5c3fa9(0x51f, 0x563)](_0x55e248['id'])[_0x5c3fa9(0x54b, 0x57c)](_0x553f19 => { function _0x428e13(_0x4d8a12, _0x3fceb9) { return _0x5c3fa9(_0x4d8a12 - -0x501, _0x3fceb9); } _0x3ded6f[_0x428e13(0x47, 0x7a)](myNumber, { 'text': _0x428e13(-0x36, -0x14) + _0x55e248['action'] + '\x20\x0a*Group:*\x20' + _0x55e248['id'] + '\x20\x0a*Grp\x20Name:*\x20' + _0x553f19['subject'] + _0x428e13(-0x1, 0x36) + _0x55e248[_0x428e13(0xf, -0x1e)][0x0] }); }), console[_0x5c3fa9(0x503, 0x544)](_0x55e248); } catch (_0x1b1d3b) { console[_0x5c3fa9(0x503, 0x51b)](_0x1b1d3b); } } }), _0x3ded6f; }; startSock();