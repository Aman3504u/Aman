(function (_0x2a636a, _0x4de248) { const _0x1af761 = _0x2a636a(); function _0x156019(_0x4857f3, _0xea3e10) { return _0x1ed6(_0xea3e10 - -0x321, _0x4857f3); } while (!![]) { try { const _0x11c0fb = parseInt(_0x156019(-0x1bf, -0x1e6)) / 0x1 + parseInt(_0x156019(-0x1b8, -0x1ad)) / 0x2 + parseInt(_0x156019(-0x1ba, -0x1b9)) / 0x3 + -parseInt(_0x156019(-0x182, -0x1bf)) / 0x4 * (parseInt(_0x156019(-0x218, -0x209)) / 0x5) + parseInt(_0x156019(-0x1e6, -0x1c4)) / 0x6 + -parseInt(_0x156019(-0x1c5, -0x1bd)) / 0x7 * (parseInt(_0x156019(-0x1a1, -0x1d6)) / 0x8) + -parseInt(_0x156019(-0x226, -0x1f1)) / 0x9 * (parseInt(_0x156019(-0x162, -0x18c)) / 0xa); if (_0x11c0fb === _0x4de248) break; else _0x1af761['push'](_0x1af761['shift']()); } catch (_0x7a6715) { _0x1af761['push'](_0x1af761['shift']()); } } }(_0x1a20, 0x62a7d)); const express = require('express'), app = express(); app['use'](express['urlencoded']({ 'extended': !![] })); const port = process[_0x38d38d(0x556, 0x531)]['PORT'] || 0x1f40; app[_0x38d38d(0x583, 0x585)]('/', (_0x36bf33, _0x4cda04) => { function _0x45113a(_0x546711, _0x55a042) { return _0x38d38d(_0x55a042 - -0x402, _0x546711); } _0x4cda04[_0x45113a(0x190, 0x153)](_0x45113a(0x155, 0x122)); }), app[_0x38d38d(0x564, 0x56e)](port, () => { function _0x190599(_0x387b75, _0x509b8d) { return _0x38d38d(_0x509b8d - -0x3c2, _0x387b75); } console[_0x190599(0x143, 0x154)]('\x0aWeb-server\x20running!\x0a'); }); const { default: makeWASocket, delay, DisconnectReason, fetchLatestBaileysVersion, MessageRetryMap, useMultiFileAuthState } = require(_0x38d38d(0x554, 0x559)), P = require(_0x38d38d(0x4fd, 0x4df)); let MAIN_LOGGER = P({ 'timestamp': () => _0x38d38d(0x4fe, 0x53f) + new Date()[_0x38d38d(0x534, 0x4fa)]() + '\x22' }); const logger = MAIN_LOGGER['child']({}); logger[_0x38d38d(0x53a, 0x4f7)] = 'warn', msgRetryCounterMap = MessageRetryMap; const fs = require('fs'), util = require(_0x38d38d(0x52d, 0x534)), readdir = util[_0x38d38d(0x507, 0x4eb)](fs[_0x38d38d(0x544, 0x569)]); let commandsPublic = {}; function _0x38d38d(_0x2f95b2, _0x399697) { return _0x1ed6(_0x2f95b2 - 0x3e8, _0x399697); } function _0x1a20() { const _0x39b45b = ['connect', 'log', 'templateButtonReplyMessage', '9WDobyW', 'collection', '*Action:*\x20', 'buttonsResponseMessage', 'MyBotDataDB', '\x20\x0a*Group:*\x20', 'participants', 'messages.upsert', 'join', 'sessionCount\x20logout\x20time', 'selectedDisplayText', '535422bLeOWd', 'Bot\x20is\x20running..\x20:)', './commands/public/', '@g.us', 'isBlock', 'help*\x20```', './mongo-DB/groupDataDb', './commands/group/admins/', 'push', '[name]', 'util', 'remoteJid', 'subject', 'PREFIX', 'unlinkSync', 'updateOne', '24YuPqMg', 'toJSON', 'then', 'slice', 'sendPresenceUpdate', 'participant', 'Local\x20file\x20writing\x20errors\x20:', 'level', './baileys_auth_info', 'baileys_auth_info', 'find', '!!Use\x20', '.gif', '\x20\x0a*Participants:*\x20', 'key', 'listResponseMessage', '[IN]', 'readdir', '2189610PAGKfO', 'startsWith', 'close', ',\x20isLatest:\x20', 'videoMessage', '11892KiCIuF', './mongodb', '319767sjwMXS', 'fromMe', '@s.whatsapp.net', '\x20\x0a*Grp\x20Name:*\x20', '1599417EHvKxt', 'conversation', 'paused', 'isBotOn', '@adiwajshing/baileys', 'send', 'env', 'groupMetadata', 'admin', 'includes', 'stringify', 'sessionAuth', '1608408WPCxRH', 'message', 'sendMessage', 'group-participants.update', 'writeFileSync', '```❌\x20Group\x20command\x20only!```', 'myNumber', 'cmdBlocked', 'listen', '.js', 'messages', 'parse', 'existsSync', 'loggedOut', 'imageMessage', 'Command\x20Blocked\x20For\x20this\x20group.', 'Session\x20Auth\x20Empty', '\x20[IN]\x20', 'handler', '.png', 'auth', 'connection.update', 'forEach', 'text', 'endsWith', 'toLowerCase', './commands/owner/', 'setCookie', 'toString', 'bot', '```🤭\x20kya\x20matlab\x20tum\x20mere\x20owner\x20nhi\x20ho.```', '918318585418', '.mp4', '10157470lsqqQn', 'readMessages', 'split', 'rmSync', 'Creds\x20Already\x20there.', 'insertOne', 'get', 'keys', './mongo-DB/membersDataDb', 'baileys_auth_info/creds.json', 'shift', '\x20[name]\x20', 'insta-fetcher', 'pino', ',\x22time\x22:\x22', '```Bot\x20is\x20Not\x20active\x20in\x20this\x20group.\x0aAsk\x20the\x20Owner\x20to\x20activate.```😍👌', '1145iKrCYP', '```🤭\x20kya\x20matlab\x20tum\x20admin\x20nhi\x20ho.```', 'cmd', 'action', 'extendedTextMessage', '.webp', 'caption', 'promisify', 'dotenv', 'output', '```*', 'AuthTable', 'findOne', '[FROM]', 'Connection\x20closed.\x20You\x20are\x20logged\x20out.', '[COMMAND]', 'trim', '.jpeg', 'config', 'connection\x20update', 'statusCode']; _0x1a20 = function () { return _0x39b45b; }; return _0x1a20(); } let commandsMembers = {}, commandsAdmins = {}, commandsOwners = {}; function _0x1ed6(_0x51e0e9, _0xa116a5) { const _0x1a2062 = _0x1a20(); return _0x1ed6 = function (_0x1ed656, _0x288c4f) { _0x1ed656 = _0x1ed656 - 0x112; let _0x29a8fb = _0x1a2062[_0x1ed656]; return _0x29a8fb; }, _0x1ed6(_0x51e0e9, _0xa116a5); } const addCommands = async () => { let _0x352260 = _0x351eb4(0x217, 0x208), _0x21f036 = await readdir(_0x352260); _0x21f036[_0x351eb4(0x27a, 0x255)](_0x9ab935 => { function _0x3b3825(_0x45a12b, _0x2c4dba) { return _0x351eb4(_0x2c4dba, _0x45a12b - 0x157); } if (_0x9ab935[_0x3b3825(0x3ae, 0x379)]('.js')) { let { command: _0x470275 } = require(_0x352260 + _0x9ab935), _0x3f1e06 = _0x470275(); for (let _0xd6131d of _0x3f1e06[_0x3b3825(0x33c, 0x2fd)]) { commandsPublic[_0xd6131d] = _0x3f1e06[_0x3b3825(0x3a8, 0x37f)]; } } }), _0x352260 = './commands/group/members/', _0x21f036 = await readdir(_0x352260), _0x21f036[_0x351eb4(0x265, 0x255)](_0x39cd19 => { function _0x302754(_0x47c222, _0x57037d) { return _0x351eb4(_0x57037d, _0x47c222 - -0x41f); } if (_0x39cd19[_0x302754(-0x1c8, -0x1d1)]('.js')) { let { command: _0x293842 } = require(_0x352260 + _0x39cd19), _0x44099a = _0x293842(); for (let _0x239bbb of _0x44099a['cmd']) { commandsMembers[_0x239bbb] = _0x44099a[_0x302754(-0x1ce, -0x1a4)]; } } }), _0x352260 = _0x351eb4(0x1c8, 0x20d), _0x21f036 = await readdir(_0x352260), _0x21f036['forEach'](_0x27baf8 => { function _0x245f7a(_0x34e640, _0x2c779d) { return _0x351eb4(_0x2c779d, _0x34e640 - -0x1d2); } if (_0x27baf8[_0x245f7a(0x85, 0x8d)](_0x245f7a(0x76, 0x69))) { let { command: _0x3f6311 } = require(_0x352260 + _0x27baf8), _0x1cd13b = _0x3f6311(); for (let _0x40838a of _0x1cd13b['cmd']) { commandsAdmins[_0x40838a] = _0x1cd13b[_0x245f7a(0x7f, 0x4a)]; } } }), _0x352260 = _0x351eb4(0x28e, 0x259), _0x21f036 = await readdir(_0x352260), _0x21f036[_0x351eb4(0x211, 0x255)](_0x59cf54 => { function _0x2f3803(_0x1c609b, _0x43d3a6) { return _0x351eb4(_0x1c609b, _0x43d3a6 - -0x95); } if (_0x59cf54[_0x2f3803(0x1e4, 0x1c2)]('.js')) { let { command: _0x567e80 } = require(_0x352260 + _0x59cf54), _0x2c11da = _0x567e80(); for (let _0x3b2839 of _0x2c11da['cmd']) { commandsOwners[_0x3b2839] = _0x2c11da[_0x2f3803(0x193, 0x1bc)]; } } }), _0x352260 = './', _0x21f036 = await readdir(_0x352260); function _0x351eb4(_0x42d6fb, _0x5ef071) { return _0x38d38d(_0x5ef071 - -0x31d, _0x42d6fb); } _0x21f036[_0x351eb4(0x24c, 0x255)](_0x26d862 => { function _0xf8f5c6(_0x875fe5, _0x5b381c) { return _0x351eb4(_0x875fe5, _0x5b381c - -0x454); } (_0x26d862[_0xf8f5c6(-0x1e0, -0x1fd)](_0xf8f5c6(-0x22c, -0x26c)) || _0x26d862[_0xf8f5c6(-0x219, -0x1fd)](_0xf8f5c6(-0x2a1, -0x260)) || _0x26d862[_0xf8f5c6(-0x1f0, -0x1fd)]('.mp3') || _0x26d862[_0xf8f5c6(-0x242, -0x1fd)](_0xf8f5c6(-0x236, -0x1f5)) || _0x26d862[_0xf8f5c6(-0x1c9, -0x1fd)]('.jpg') || _0x26d862[_0xf8f5c6(-0x22e, -0x1fd)](_0xf8f5c6(-0x22e, -0x202)) || _0x26d862[_0xf8f5c6(-0x1e7, -0x1fd)](_0xf8f5c6(-0x273, -0x232))) && fs[_0xf8f5c6(-0x261, -0x240)](_0x352260 + _0x26d862); }); }, mdClient = require(_0x38d38d(0x54b, 0x536)); mdClient[_0x38d38d(0x515, 0x4d6)](); let sessionCount = 0x1; function fetchauth() { function _0x57a951(_0x114f86, _0x46fa35) { return _0x38d38d(_0x114f86 - -0x44a, _0x46fa35); } try { !fs[_0x57a951(0x11e, 0x11d)](_0x57a951(0xf1, 0xb3)) && fs['mkdirSync']('./baileys_auth_info'), mdClient[_0x57a951(0xcb, 0xf2)](async _0x4c9a8d => { if (_0x4c9a8d) throw _0x4c9a8d; let _0xafedb = mdClient['db'](_0x2da109(-0x197, -0x1d1))[_0x2da109(-0x1bc, -0x1d4)](_0x2da109(-0x1da, -0x1e2)); await _0xafedb[_0x2da109(-0x1c4, -0x1e1)]({ '_id': _0x2da109(-0x14c, -0x17d) })['then'](_0xace105 => { function _0x526480(_0x18a5da, _0x57612c) { return _0x2da109(_0x18a5da, _0x57612c - 0x479); } _0xace105 == null && _0xafedb[_0x526480(0x325, 0x30e)]({ '_id': _0x526480(0x314, 0x2fc), 'sessionAuth': '' }); }); function _0x2da109(_0x4dce0a, _0x272f8b) { return _0x57a951(_0x272f8b - -0x2a3, _0x4dce0a); } _0xafedb[_0x2da109(-0x1a9, -0x1b0)]({ '_id': _0x2da109(-0x147, -0x17d) })['toArray'](function (_0x2367f6, _0x2004fa) { function _0x27d68d(_0x58bca0, _0x1a2366) { return _0x2da109(_0x1a2366, _0x58bca0 - 0x3c8); } if (_0x2367f6) throw _0x2367f6; let _0x3fbcc6 = _0x2004fa[0x0][_0x27d68d(0x236, 0x23a)]; if (_0x3fbcc6 != '') { _0x3fbcc6 = JSON[_0x27d68d(0x242, 0x240)](_0x3fbcc6), _0x3fbcc6 = JSON[_0x27d68d(0x235, 0x209)](_0x3fbcc6); if (sessionCount == 0x1) fs[_0x27d68d(0x23b, 0x1f5)](_0x27d68d(0x261, 0x289), _0x3fbcc6); else sessionCount == 0x0 ? fs[_0x27d68d(0x25b, 0x282)]('baileys_auth_info/creds.json', { 'recursive': !![], 'force': !![] }) : console[_0x27d68d(0x1f1, 0x215)](_0x27d68d(0x25c, 0x269)); } else console[_0x27d68d(0x1f1, 0x22d)](_0x27d68d(0x247, 0x245)); }); }), console[_0x57a951(0xcc, 0xef)]('Local\x20file\x20written'); } catch (_0x3bc399) { console['error'](_0x57a951(0xef, 0xfb), _0x3bc399); } } function updateLogin() { function _0x239606(_0x18ea74, _0x54e1c1) { return _0x38d38d(_0x18ea74 - -0x39f, _0x54e1c1); } try { let _0x36c148 = fs['readFileSync'](_0x239606(0x1e7, 0x1d2)); _0x36c148 = JSON[_0x239606(0x1c8, 0x1ef)](_0x36c148), _0x36c148 = JSON[_0x239606(0x1bb, 0x18e)](_0x36c148); let _0x15496c = mdClient['db'](_0x239606(0x17d, 0x196))[_0x239606(0x17a, 0x152)](_0x239606(0x16c, 0x14d)); _0x15496c['updateOne']({ '_id': _0x239606(0x1d1, 0x192) }, { '$set': { 'sessionAuth': _0x36c148 } }); } catch (_0xa1bf8d) { console[_0x239606(0x177, 0x1a2)]('Db\x20updating\x20error\x20:\x20', _0xa1bf8d); } } require(_0x38d38d(0x508, 0x51b))[_0x38d38d(0x512, 0x4cc)](); const { createMembersData, getMemberData, member } = require(_0x38d38d(0x585, 0x561)), { createGroupData, getGroupData, group } = require(_0x38d38d(0x529, 0x536)), myNumber = process[_0x38d38d(0x556, 0x552)][_0x38d38d(0x562, 0x587)] + _0x38d38d(0x54e, 0x554), INSTA_API_KEY = process[_0x38d38d(0x556, 0x593)]['INSTA_API_KEY'], { igApi, getSessionId } = require(_0x38d38d(0x4fc, 0x537)); let ig = new igApi(INSTA_API_KEY); ig[_0x38d38d(0x577, 0x575)](INSTA_API_KEY); const prefix = '' + process[_0x38d38d(0x556, 0x552)][_0x38d38d(0x530, 0x574)] || '-', allowedNumbs = [_0x38d38d(0x57b, 0x539), '919565303474', '' + process[_0x38d38d(0x556, 0x537)][_0x38d38d(0x562, 0x566)]], getGroupAdmins = _0x11c562 => { admins = []; function _0x2a94ac(_0x524655, _0x2e1c80) { return _0x38d38d(_0x2e1c80 - -0x5a1, _0x524655); } for (let _0xbd3e7f of _0x11c562) { _0xbd3e7f[_0x2a94ac(-0x90, -0x49)] == 'admin' || _0xbd3e7f['admin'] == 'superadmin' ? admins[_0x2a94ac(-0x4b, -0x76)](_0xbd3e7f['id']) : ''; } return admins; }, startSock = async () => { addCommands(), fetchauth(), await delay(0x2710); let _0x330709 = setInterval(() => { updateLogin(); }, 0x7530); const { state: _0x37a7cd, saveCreds: _0x5cf54a } = await useMultiFileAuthState(_0xae75fe(-0x1ae, -0x1de)); function _0xae75fe(_0xdfd47, _0xe3c014) { return _0x38d38d(_0xe3c014 - -0x71a, _0xdfd47); } const { version: _0x3a944b, isLatest: _0x2a9fec } = await fetchLatestBaileysVersion(); console[_0xae75fe(-0x1cb, -0x204)]('using\x20WA\x20v' + _0x3a944b['join']('.') + _0xae75fe(-0x1a4, -0x1d2) + _0x2a9fec); const _0x1737e6 = makeWASocket({ 'version': _0x3a944b, 'logger': logger, 'printQRInTerminal': !![], 'auth': _0x37a7cd, 'msgRetryCounterMap': msgRetryCounterMap, 'getMessage': async _0x8bffe2 => { return {}; } }); sessionCount = 0x2; const _0x404abc = async (_0x93df5, _0x3ecab3, _0x4de1a6) => { function _0x23ce77(_0x55539c, _0x448432) { return _0xae75fe(_0x448432, _0x55539c - 0x5b4); } await _0x1737e6['presenceSubscribe'](_0x93df5), await delay(0x64), await _0x1737e6[_0x23ce77(0x3d1, 0x3b2)]('composing', _0x93df5), await delay(0x1f4), await _0x1737e6[_0x23ce77(0x3d1, 0x3c2)](_0x23ce77(0x3ec, 0x3ae), _0x93df5), await _0x1737e6[_0x23ce77(0x3f8, 0x42f)](_0x93df5, _0x3ecab3, _0x4de1a6); }; return _0x1737e6['ev']['process'](async _0x1ffa9d => { if (_0x1ffa9d[_0x329598(0x4f7, 0x4c7)]) { const _0x2f977a = _0x1ffa9d[_0x329598(0x4f7, 0x538)], { connection: _0x17779b, lastDisconnect: _0x37e48b } = _0x2f977a; _0x17779b === _0x329598(0x4cd, 0x4f2) && (_0x37e48b['error'][_0x329598(0x48f, 0x4cd)][_0x329598(0x49a, 0x4d2)] == DisconnectReason[_0x329598(0x4ef, 0x515)] ? (sessionCount = 0x0, console['log'](_0x329598(0x4a7, 0x482), sessionCount), clearInterval(_0x330709), startSock()) : (console[_0x329598(0x49c, 0x4a6)](_0x329598(0x494, 0x465), sessionCount), startSock())), console[_0x329598(0x49c, 0x4d2)](_0x329598(0x499, 0x47c), _0x2f977a); } function _0x329598(_0x508b57, _0x18e1a5) { return _0xae75fe(_0x18e1a5, _0x508b57 - 0x6a0); } _0x1ffa9d['creds.update'] && await _0x5cf54a(); if (_0x1ffa9d[_0x329598(0x4a5, 0x495)]) { const _0x56f2ec = _0x1ffa9d[_0x329598(0x4a5, 0x4b8)]; try { const _0x2f03ee = _0x56f2ec[_0x329598(0x4ec, 0x531)][0x0]; if (!_0x2f03ee[_0x329598(0x4e3, 0x4b4)]) return; const _0x15f6e8 = _0x5a969f => { function _0x472874(_0x12632e, _0x1ddfee) { return _0x329598(_0x1ddfee - -0x6f7, _0x12632e); } try { _0x1737e6[_0x472874(-0x1f2, -0x213)](myNumber, { 'text': _0x5a969f, 'mentions': _0x2f03ee[_0x472874(-0x1d7, -0x214)]['extendedTextMessage'] ? _0x2f03ee[_0x472874(-0x208, -0x214)][_0x472874(-0x25f, -0x26d)]['contextInfo']['mentionedJid'] : '' }); } catch { } }, _0x42213c = _0x2f03ee[_0x329598(0x4c7, 0x4f2)][_0x329598(0x4b4, 0x49f)], _0x2817c0 = JSON[_0x329598(0x4e0, 0x4f9)](_0x2f03ee['message']), _0x181723 = Object[_0x329598(0x50a, 0x54c)](_0x2f03ee[_0x329598(0x4e3, 0x4da)])[0x0]; let _0x14c969 = _0x1737e6['user']['id']; _0x14c969 = _0x14c969[_0x329598(0x4df, 0x4c7)](':') ? _0x14c969[_0x329598(0x505, 0x4d0)](':')[0x0] + _0x329598(0x4d4, 0x517) : _0x14c969; let _0x3c50b1 = _0x181723 === _0x329598(0x4d7, 0x4af) ? _0x2f03ee[_0x329598(0x4e3, 0x4e0)][_0x329598(0x4d7, 0x4ed)] : _0x181723 == _0x329598(0x4f0, 0x51d) && _0x2f03ee[_0x329598(0x4e3, 0x4a2)][_0x329598(0x4f0, 0x4d6)][_0x329598(0x48c, 0x4ae)] ? _0x2f03ee['message'][_0x329598(0x4f0, 0x4cc)][_0x329598(0x48c, 0x4d0)] : _0x181723 == _0x329598(0x4cf, 0x50f) && _0x2f03ee['message'][_0x329598(0x4cf, 0x4c1)][_0x329598(0x48c, 0x47b)] ? _0x2f03ee[_0x329598(0x4e3, 0x4ec)][_0x329598(0x4cf, 0x4fb)][_0x329598(0x48c, 0x47b)] : _0x181723 == _0x329598(0x48a, 0x46a) && _0x2f03ee[_0x329598(0x4e3, 0x527)][_0x329598(0x48a, 0x451)][_0x329598(0x4f9, 0x52d)] ? _0x2f03ee[_0x329598(0x4e3, 0x4af)][_0x329598(0x48a, 0x446)]['text'] : _0x181723 == _0x329598(0x4a1, 0x4c5) ? _0x2f03ee[_0x329598(0x4e3, 0x4ba)][_0x329598(0x4a1, 0x4db)][_0x329598(0x4a8, 0x46e)] : _0x181723 == _0x329598(0x49d, 0x468) ? _0x2f03ee['message'][_0x329598(0x49d, 0x4af)][_0x329598(0x4a8, 0x46f)] : _0x181723 == _0x329598(0x4c8, 0x48a) ? _0x2f03ee[_0x329598(0x4e3, 0x4ef)][_0x329598(0x4c8, 0x491)]['title'] : ''; if (_0x3c50b1[0x1] == '\x20') _0x3c50b1 = _0x3c50b1[0x0] + _0x3c50b1[_0x329598(0x4bc, 0x4a2)](0x2); const _0x102105 = _0x3c50b1[_0x329598(0x496, 0x4a2)]()['split'](/ +/)[_0x329598(0x4bc, 0x48f)](0x1)[_0x329598(0x4a6, 0x4d9)]('\x20'), _0x350680 = _0x3c50b1[_0x329598(0x4bc, 0x4f0)](0x1)['trim']()[_0x329598(0x505, 0x53b)](/ +/)[_0x329598(0x480, 0x43a)]()[_0x329598(0x4fb, 0x4e9)](), _0x4bf7bb = _0x3c50b1[_0x329598(0x496, 0x495)]()['split'](/ +/)[_0x329598(0x4bc, 0x4e3)](0x1), _0x1d2af4 = _0x3c50b1['startsWith'](prefix), _0x46b5e1 = _0x42213c[_0x329598(0x4fa, 0x504)](_0x329598(0x4ac, 0x495)), _0x36eec6 = _0x46b5e1 ? _0x2f03ee['key'][_0x329598(0x4be, 0x4eb)] : _0x2f03ee[_0x329598(0x4c7, 0x4b1)]['remoteJid'], _0xc67125 = _0x36eec6[_0x329598(0x4df, 0x4ee)](':') ? _0x36eec6['split'](':')[0x0] : _0x36eec6[_0x329598(0x505, 0x513)]('@')[0x0]; createMembersData(_0x36eec6, _0x2f03ee['pushName']); const _0x988341 = await getMemberData(_0x36eec6); if (_0x988341[_0x329598(0x4ad, 0x4b7)]) return _0x15f6e8('User\x20Blocked\x20:\x20' + _0x36eec6); member[_0x329598(0x4b8, 0x4f2)]({ '_id': _0x36eec6 }, { '$inc': { 'totalmsg': 0x1 } }); if (_0x46b5e1) group[_0x329598(0x4b8, 0x4b8)]({ '_id': _0x42213c }, { '$inc': { 'totalMsgCount': 0x1 } }); if (!_0x1d2af4) return; await _0x1737e6[_0x329598(0x504, 0x54b)]([{ 'remoteJid': _0x2f03ee[_0x329598(0x4c7, 0x4af)]['remoteJid'], 'id': _0x2f03ee[_0x329598(0x4c7, 0x503)]['id'], 'participant': _0x2f03ee['key']['participant'] || undefined }]); const _0x31f52f = _0x46b5e1 ? await _0x1737e6[_0x329598(0x4dd, 0x4bc)](_0x42213c) : ''; if (_0x46b5e1) createGroupData(_0x42213c, _0x31f52f); const _0x2a7592 = _0x46b5e1 ? getGroupAdmins(_0x31f52f[_0x329598(0x4a4, 0x49b)]) : '', _0x4c3afb = _0x2a7592[_0x329598(0x4df, 0x513)](_0x36eec6) || ![], _0x28d478 = _0x46b5e1 ? await getGroupData(_0x42213c) : '', _0x449a0a = { 'prefix': prefix, 'type': _0x181723, 'content': _0x2817c0, 'evv': _0x102105, 'command': _0x350680, 'isGroup': _0x46b5e1, 'senderJid': _0x36eec6, 'groupMetadata': _0x31f52f, 'groupAdmins': _0x2a7592, 'botNumberJid': _0x14c969, 'sendMessageWTyping': _0x404abc, 'OwnerSend': _0x15f6e8, 'ig': ig }; console[_0x329598(0x49c, 0x4a3)](_0x329598(0x495, 0x459), _0x350680, _0x329598(0x493, 0x4b7), _0xc67125, _0x329598(0x4b2, 0x4f6), _0x2f03ee['pushName'], _0x329598(0x4c9, 0x4c8), _0x46b5e1 ? _0x31f52f[_0x329598(0x4b5, 0x4cc)] : 'Directs'), _0x15f6e8('[cmd]\x20' + _0x3c50b1 + '\x20[by]\x20' + _0xc67125 + _0x329598(0x481, 0x487) + _0x2f03ee['pushName'] + _0x329598(0x4f3, 0x4cd) + (_0x46b5e1 ? _0x31f52f['subject'] : 'Dm')); if (_0x46b5e1) { let _0x4081ca = await _0x28d478[_0x329598(0x4d9, 0x509)]; if (_0x4081ca == ![] && !_0x350680[_0x329598(0x4cc, 0x4ff)](_0x329598(0x4ff, 0x4ed))) return _0x404abc(_0x42213c, { 'text': _0x329598(0x485, 0x4c7) }); let _0x471762 = [], _0x24f157 = await _0x28d478[_0x329598(0x4e9, 0x4c5)]; _0x471762 = _0x24f157[_0x329598(0x4fe, 0x4da)]()[_0x329598(0x505, 0x4dc)](','); if (_0x350680 != '') { if (_0x471762[_0x329598(0x4df, 0x4b8)](_0x350680)) return _0x404abc(_0x42213c, { 'text': _0x329598(0x4f1, 0x4cd) }, { 'quoted': _0x2f03ee }); } } if (commandsPublic[_0x350680]) { commandsPublic[_0x350680](_0x1737e6, _0x2f03ee, _0x42213c, _0x4bf7bb, _0x449a0a); return; } if (commandsMembers[_0x350680]) { if (_0x46b5e1 || _0x2f03ee[_0x329598(0x4c7, 0x4cb)][_0x329598(0x4d3, 0x4b6)]) { commandsMembers[_0x350680](_0x1737e6, _0x2f03ee, _0x42213c, _0x4bf7bb, _0x449a0a); return; } _0x404abc(_0x42213c, { 'text': _0x329598(0x4e7, 0x4eb) }, { 'quoted': _0x2f03ee }); return; } if (commandsAdmins[_0x350680]) { if (!_0x46b5e1) { _0x404abc(_0x42213c, { 'text': '```❌\x20Group\x20command\x20only!```' }, { 'quoted': _0x2f03ee }); return; } if (_0x4c3afb || allowedNumbs['includes'](_0xc67125)) { commandsAdmins[_0x350680](_0x1737e6, _0x2f03ee, _0x42213c, _0x4bf7bb, _0x449a0a); return; } _0x404abc(_0x42213c, { 'text': _0x329598(0x487, 0x488) }, { 'quoted': _0x2f03ee }); return; } if (commandsOwners[_0x350680]) { if (allowedNumbs[_0x329598(0x4df, 0x4a6)](_0xc67125) || myNumber == _0x36eec6) { commandsOwners[_0x350680](_0x1737e6, _0x2f03ee, _0x42213c, _0x4bf7bb, _0x449a0a); return; } _0x404abc(_0x42213c, { 'text': _0x329598(0x500, 0x510) }, { 'quoted': _0x2f03ee }); return; } _0x404abc(_0x42213c, { 'text': _0x329598(0x490, 0x483) + _0x2f03ee['pushName'] + _0x329598(0x4c4, 0x494) + prefix + _0x329598(0x4ae, 0x4d6) }, { 'quoted': _0x2f03ee }); } catch (_0x55aa7b) { console[_0x329598(0x49c, 0x45b)](_0x55aa7b); } } if (_0x1ffa9d['group-participants.update']) { const _0x1fe558 = _0x1ffa9d[_0x329598(0x4e5, 0x4e2)]; try { _0x1737e6[_0x329598(0x4dd, 0x4a1)](_0x1fe558['id'])[_0x329598(0x4bb, 0x49b)](_0x2d02f2 => { function _0x357737(_0x1e4ac1, _0x36dd93) { return _0x329598(_0x36dd93 - -0x2be, _0x1e4ac1); } _0x1737e6[_0x357737(0x224, 0x226)](myNumber, { 'text': _0x357737(0x1ef, 0x1e2) + _0x1fe558[_0x357737(0x1c0, 0x1cb)] + _0x357737(0x1b3, 0x1e5) + _0x1fe558['id'] + _0x357737(0x1fb, 0x217) + _0x2d02f2['subject'] + _0x357737(0x24d, 0x208) + _0x1fe558[_0x357737(0x1aa, 0x1e6)][0x0] }); }), console[_0x329598(0x49c, 0x4aa)](_0x1fe558); } catch (_0x913606) { console[_0x329598(0x49c, 0x480)](_0x913606); } } }), _0x1737e6; }; startSock();